{"version":3,"sources":["webpack:///./modules/docs/Web.js","webpack:///../packages/react-router/docs/api/hooks.md?775f","webpack:///../packages/react-router-dom/docs/api/BrowserRouter.md","webpack:///../packages/react-router-dom/docs/api/HashRouter.md","webpack:///../packages/react-router-dom/docs/api/Link.md","webpack:///../packages/react-router-dom/docs/api/NavLink.md","webpack:///../packages/react-router-dom/docs/api/Prompt.md","webpack:///../packages/react-router/docs/api/MemoryRouter.md?6ee2","webpack:///../packages/react-router/docs/api/Redirect.md?0ec6","webpack:///../packages/react-router/docs/api/Route.md?f510","webpack:///../packages/react-router/docs/api/Router.md?9f61","webpack:///../packages/react-router/docs/api/StaticRouter.md?309d","webpack:///../packages/react-router/docs/api/Switch.md?fa06","webpack:///../packages/react-router/docs/api/generatePath.md?06d1","webpack:///../packages/react-router/docs/api/history.md?66c9","webpack:///../packages/react-router/docs/api/location.md?80a1","webpack:///../packages/react-router/docs/api/match.md?92b2","webpack:///../packages/react-router/docs/api/matchPath.md","webpack:///../packages/react-router/docs/api/withRouter.md?9906","webpack:///../packages/react-router-dom/examples/Basic.js","webpack:///../packages/react-router-dom/examples/URLParams.js","webpack:///../packages/react-router-dom/examples/Nesting.js","webpack:///../packages/react-router-dom/examples/Auth.js","webpack:///../packages/react-router-dom/examples/CustomLink.js","webpack:///../packages/react-router-dom/examples/PreventingTransitions.js","webpack:///../packages/react-router-dom/examples/NoMatch.js","webpack:///../packages/react-router-dom/examples/Recursive.js","webpack:///../packages/react-router-dom/examples/Sidebar.js","webpack:///../packages/react-router-dom/examples/Animation/index.js","webpack:///../packages/react-router-dom/examples/RouteConfig.js","webpack:///../packages/react-router-dom/examples/ModalGallery.js","webpack:///../packages/react-router-dom/examples/StaticRouter.js","webpack:///../packages/react-router-dom/examples/QueryParams.js","webpack:///../packages/react-router-dom/docs/guides/quick-start.md","webpack:///../packages/react-router-dom/docs/guides/primary-components.md","webpack:///../packages/react-router-dom/docs/guides/server-rendering.md","webpack:///../packages/react-router-dom/docs/guides/code-splitting.md","webpack:///../packages/react-router-dom/docs/guides/scroll-restoration.md","webpack:///../packages/react-router/docs/guides/philosophy.md?94c8","webpack:///../packages/react-router/docs/guides/testing.md?42aa","webpack:///../packages/react-router/docs/guides/redux.md?2770","webpack:///../packages/react-router/docs/guides/static-routes.md?25ca"],"names":["api","require","examples","label","slug","path","code","extraDependencies","guides","module","exports"],"mappings":"0FAAA,OAAe,WACbA,IAAK,CACHC,EAAQ,KACRA,EAAQ,KACRA,EAAQ,KACRA,EAAQ,KACRA,EAAQ,KACRA,EAAQ,KACRA,EAAQ,KACRA,EAAQ,KACRA,EAAQ,KACRA,EAAQ,KACRA,EAAQ,KACRA,EAAQ,KACRA,EAAQ,KACRA,EAAQ,KACRA,EAAQ,KACRA,EAAQ,KACRA,EAAQ,KACRA,EAAQ,MAGVC,SAAU,CACR,CACEC,MAAO,QACPC,KAAM,QACNC,KAAM,8CACNC,KAAML,EAAQ,MAEhB,CACEE,MAAO,iBACPC,KAAM,aACNC,KAAM,kDACNC,KAAML,EAAQ,MAEhB,CACEE,MAAO,UACPC,KAAM,UACNC,KAAM,gDACNC,KAAML,EAAQ,MAEhB,CACEE,MAAO,mBACPC,KAAM,gBACNC,KAAM,6CACNC,KAAML,EAAQ,MAEhB,CACEE,MAAO,cACPC,KAAM,cACNC,KAAM,mDACNC,KAAML,EAAQ,MAEhB,CACEE,MAAO,yBACPC,KAAM,yBACNC,KAAM,8DACNC,KAAML,EAAQ,MAEhB,CACEE,MAAO,iBACPC,KAAM,WACNC,KAAM,gDACNC,KAAML,EAAQ,MAEhB,CACEE,MAAO,kBACPC,KAAM,kBACNC,KAAM,kDACNC,KAAML,EAAQ,MAEhB,CACEE,MAAO,UACPC,KAAM,UACNC,KAAM,gDACNC,KAAML,EAAQ,MAEhB,CACEE,MAAO,uBACPC,KAAM,uBACNC,KAAM,wDACNC,KAAML,EAAQ,KACdM,kBAAmB,CACjB,yBAA0B,WAG9B,CACEJ,MAAO,eACPC,KAAM,eACNC,KAAM,oDACNC,KAAML,EAAQ,MAEhB,CACEE,MAAO,gBACPC,KAAM,gBACNC,KAAM,qDACNC,KAAML,EAAQ,MAEhB,CACEE,MAAO,uBACPC,KAAM,gBACNC,KAAM,qDACNC,KAAML,EAAQ,MAEhB,CACEE,MAAO,mBACPC,KAAM,mBACNC,KAAM,oDACNC,KAAML,EAAQ,OAIlBO,OAAQ,CACNP,EAAQ,KACRA,EAAQ,KACRA,EAAQ,KACRA,EAAQ,KACRA,EAAQ,KACRA,EAAQ,KACRA,EAAQ,KACRA,EAAQ,KACRA,EAAQ,Q,kBCzHZQ,EAAOC,QAAU,CAAC,OAAS,w0jBAAgllB,QAAU,CAAC,CAAC,KAAO,aAAa,KAAO,cAAc,CAAC,KAAO,cAAc,KAAO,eAAe,CAAC,KAAO,YAAY,KAAO,aAAa,CAAC,KAAO,gBAAgB,KAAO,kBAAkB,MAAQ,CAAC,KAAO,QAAQ,KAAO,W,kBCAp0lBD,EAAOC,QAAU,CAAC,OAAS,y0PAAunQ,QAAU,CAAC,CAAC,KAAO,mBAAmB,KAAO,mBAAmB,CAAC,KAAO,4BAA4B,KAAO,4BAA4B,CAAC,KAAO,qBAAqB,KAAO,qBAAqB,CAAC,KAAO,oBAAoB,KAAO,oBAAoB,CAAC,KAAO,iBAAiB,KAAO,kBAAkB,MAAQ,CAAC,KAAO,kBAAkB,KAAO,mB,kBCAp+QD,EAAOC,QAAU,CAAC,OAAS,8gMAA4tM,QAAU,CAAC,CAAC,KAAO,mBAAmB,KAAO,mBAAmB,CAAC,KAAO,4BAA4B,KAAO,4BAA4B,CAAC,KAAO,mBAAmB,KAAO,mBAAmB,CAAC,KAAO,iBAAiB,KAAO,kBAAkB,MAAQ,CAAC,KAAO,eAAe,KAAO,gB,kBCA3gND,EAAOC,QAAU,CAAC,OAAS,wiYAAghZ,QAAU,CAAC,CAAC,KAAO,aAAa,KAAO,aAAa,CAAC,KAAO,aAAa,KAAO,aAAa,CAAC,KAAO,WAAW,KAAO,WAAW,CAAC,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,KAAO,iBAAiB,KAAO,iBAAiB,CAAC,KAAO,sBAAsB,KAAO,sBAAsB,CAAC,KAAO,6BAA6B,KAAO,4BAA4B,CAAC,KAAO,SAAS,KAAO,WAAW,MAAQ,CAAC,KAAO,SAAS,KAAO,U,kBCAn9ZD,EAAOC,QAAU,CAAC,OAAS,25bAAi6c,QAAU,CAAC,CAAC,KAAO,2BAA2B,KAAO,yBAAyB,CAAC,KAAO,0BAA0B,KAAO,0BAA0B,CAAC,KAAO,uBAAuB,KAAO,qBAAqB,CAAC,KAAO,sBAAsB,KAAO,sBAAsB,CAAC,KAAO,cAAc,KAAO,cAAc,CAAC,KAAO,eAAe,KAAO,eAAe,CAAC,KAAO,iBAAiB,KAAO,iBAAiB,CAAC,KAAO,mBAAmB,KAAO,mBAAmB,CAAC,KAAO,uBAAuB,KAAO,wBAAwB,MAAQ,CAAC,KAAO,YAAY,KAAO,a,kBCAl+dD,EAAOC,QAAU,CAAC,OAAS,mMAA6M,QAAU,GAAG,MAAQ,CAAC,KAAO,WAAW,KAAO,Y,kBCAvRD,EAAOC,QAAU,CAAC,OAAS,ktLAAs6L,QAAU,CAAC,CAAC,KAAO,wBAAwB,KAAO,wBAAwB,CAAC,KAAO,uBAAuB,KAAO,uBAAuB,CAAC,KAAO,4BAA4B,KAAO,4BAA4B,CAAC,KAAO,oBAAoB,KAAO,oBAAoB,CAAC,KAAO,iBAAiB,KAAO,kBAAkB,MAAQ,CAAC,KAAO,iBAAiB,KAAO,kB,kBCAhyMD,EAAOC,QAAU,CAAC,OAAS,8pgBAAo1hB,QAAU,CAAC,CAAC,KAAO,aAAa,KAAO,aAAa,CAAC,KAAO,aAAa,KAAO,aAAa,CAAC,KAAO,aAAa,KAAO,aAAa,CAAC,KAAO,eAAe,KAAO,eAAe,CAAC,KAAO,cAAc,KAAO,cAAc,CAAC,KAAO,eAAe,KAAO,eAAe,CAAC,KAAO,kBAAkB,KAAO,mBAAmB,MAAQ,CAAC,KAAO,aAAa,KAAO,c,kBCAltiBD,EAAOC,QAAU,CAAC,OAAS,2ypCAAmrsC,QAAU,CAAC,CAAC,KAAO,uBAAuB,KAAO,wBAAwB,CAAC,KAAO,cAAc,KAAO,eAAe,CAAC,KAAO,YAAY,KAAO,aAAa,CAAC,KAAO,eAAe,KAAO,eAAe,CAAC,KAAO,iBAAiB,KAAO,iBAAiB,CAAC,KAAO,0BAA0B,KAAO,sBAAsB,CAAC,KAAO,cAAc,KAAO,cAAc,CAAC,KAAO,eAAe,KAAO,eAAe,CAAC,KAAO,mBAAmB,KAAO,mBAAmB,CAAC,KAAO,kBAAkB,KAAO,mBAAmB,MAAQ,CAAC,KAAO,UAAU,KAAO,W,kBCA1utCD,EAAOC,QAAU,CAAC,OAAS,06LAAsqM,QAAU,CAAC,CAAC,KAAO,kBAAkB,KAAO,kBAAkB,CAAC,KAAO,iBAAiB,KAAO,kBAAkB,MAAQ,CAAC,KAAO,WAAW,KAAO,Y,kBCAn1MD,EAAOC,QAAU,CAAC,OAAS,+8XAAq7Y,QAAU,CAAC,CAAC,KAAO,mBAAmB,KAAO,mBAAmB,CAAC,KAAO,mBAAmB,KAAO,mBAAmB,CAAC,KAAO,mBAAmB,KAAO,mBAAmB,CAAC,KAAO,kBAAkB,KAAO,kBAAkB,CAAC,KAAO,iBAAiB,KAAO,kBAAkB,MAAQ,CAAC,KAAO,iBAAiB,KAAO,kB,kBCAvwZD,EAAOC,QAAU,CAAC,OAAS,kthBAA44iB,QAAU,CAAC,CAAC,KAAO,mBAAmB,KAAO,mBAAmB,CAAC,KAAO,iBAAiB,KAAO,kBAAkB,MAAQ,CAAC,KAAO,WAAW,KAAO,Y,kBCA3jjBD,EAAOC,QAAU,CAAC,OAAS,0/EAA8kF,QAAU,CAAC,CAAC,KAAO,kBAAkB,KAAO,kBAAkB,CAAC,KAAO,iBAAiB,KAAO,kBAAkB,MAAQ,CAAC,KAAO,eAAe,KAAO,kB,kBCA/vFD,EAAOC,QAAU,CAAC,OAAS,+rKAAmzK,QAAU,CAAC,CAAC,KAAO,qBAAqB,KAAO,uBAAuB,MAAQ,CAAC,KAAO,UAAU,KAAO,a,kBCAr7KD,EAAOC,QAAU,CAAC,OAAS,umNAAy1N,QAAU,GAAG,MAAQ,CAAC,KAAO,WAAW,KAAO,c,kBCAn6ND,EAAOC,QAAU,CAAC,OAAS,63LAAqhM,QAAU,CAAC,CAAC,KAAO,eAAe,KAAO,iBAAiB,MAAQ,CAAC,KAAO,QAAQ,KAAO,W,kBCAzoMD,EAAOC,QAAU,CAAC,OAAS,4qJAA81J,QAAU,CAAC,CAAC,KAAO,WAAW,KAAO,YAAY,CAAC,KAAO,QAAQ,KAAO,SAAS,CAAC,KAAO,UAAU,KAAO,YAAY,MAAQ,CAAC,KAAO,YAAY,KAAO,e,kBCAlhKD,EAAOC,QAAU,CAAC,OAAS,i7QAAuvR,QAAU,CAAC,CAAC,KAAO,6BAA6B,KAAO,6BAA6B,CAAC,KAAO,4BAA4B,KAAO,6BAA6B,MAAQ,CAAC,KAAO,aAAa,KAAO,gB,kBCAl9RD,EAAOC,QAAU,6wD,kBCAjBD,EAAOC,QAAU,ssC,kBCAjBD,EAAOC,QAAU,2oE,kBCAjBD,EAAOC,QAAU,+8H,kBCAjBD,EAAOC,QAAU,iwC,kBCAjBD,EAAOC,QAAU,iwD,kBCAjBD,EAAOC,QAAU,4uD,kBCAjBD,EAAOC,QAAU,w5D,kBCAjBD,EAAOC,QAAU,krF,kBCAjBD,EAAOC,QAAU,m6F,kBCAjBD,EAAOC,QAAU,opE,kBCAjBD,EAAOC,QAAU,wlI,kBCAjBD,EAAOC,QAAU,+5D,kBCAjBD,EAAOC,QAAU,ouD,kBCAjBD,EAAOC,QAAU,CAAC,OAAS,4h9BAAk5/B,QAAU,CAAC,CAAC,KAAO,eAAe,KAAO,gBAAgB,CAAC,KAAO,6BAA6B,KAAO,6BAA6B,CAAC,KAAO,8BAA8B,KAAO,8BAA8B,CAAC,KAAO,cAAc,KAAO,eAAe,MAAQ,CAAC,KAAO,cAAc,KAAO,iB,kBCA3sgCD,EAAOC,QAAU,CAAC,OAAS,mqiBAAmvjB,QAAU,CAAC,CAAC,KAAO,UAAU,KAAO,WAAW,CAAC,KAAO,iBAAiB,KAAO,kBAAkB,CAAC,KAAO,iCAAiC,KAAO,iCAAiC,MAAQ,CAAC,KAAO,qBAAqB,KAAO,wB,kBCA5+jBD,EAAOC,QAAU,CAAC,OAAS,67kCAA63nC,QAAU,CAAC,CAAC,KAAO,0CAA0C,KAAO,2CAA2C,CAAC,KAAO,gCAAgC,KAAO,+BAA+B,CAAC,KAAO,0BAA0B,KAAO,2BAA2B,CAAC,KAAO,eAAe,KAAO,iBAAiB,MAAQ,CAAC,KAAO,mBAAmB,KAAO,sB,kBCAlvoCD,EAAOC,QAAU,CAAC,OAAS,y6KAAilL,QAAU,CAAC,CAAC,KAAO,2CAA2C,KAAO,6CAA6C,MAAQ,CAAC,KAAO,iBAAiB,KAAO,oB,kBCAtwLD,EAAOC,QAAU,CAAC,OAAS,8lnBAA41oB,QAAU,CAAC,CAAC,KAAO,gBAAgB,KAAO,iBAAiB,CAAC,KAAO,mBAAmB,KAAO,qBAAqB,MAAQ,CAAC,KAAO,qBAAqB,KAAO,wB,kBCArhpBD,EAAOC,QAAU,CAAC,OAAS,6rpCAAq/rC,QAAU,CAAC,CAAC,KAAO,iBAAiB,KAAO,kBAAkB,CAAC,KAAO,YAAY,KAAO,aAAa,CAAC,KAAO,kBAAkB,KAAO,mBAAmB,CAAC,KAAO,gBAAgB,KAAO,iBAAiB,CAAC,KAAO,oBAAoB,KAAO,sBAAsB,MAAQ,CAAC,KAAO,aAAa,KAAO,gB,kBCAtzsCD,EAAOC,QAAU,CAAC,OAAS,ii+BAA+1gC,QAAU,CAAC,CAAC,KAAO,UAAU,KAAO,WAAW,CAAC,KAAO,8BAA8B,KAAO,+BAA+B,CAAC,KAAO,aAAa,KAAO,cAAc,CAAC,KAAO,6BAA6B,KAAO,8BAA8B,CAAC,KAAO,wBAAwB,KAAO,0BAA0B,MAAQ,CAAC,KAAO,UAAU,KAAO,a,kBCA3shCD,EAAOC,QAAU,CAAC,OAAS,6pEAAyqE,QAAU,GAAG,MAAQ,CAAC,KAAO,yBAAyB,KAAO,4B,kBCAjwED,EAAOC,QAAU,CAAC,OAAS,iuBAAyuB,QAAU,GAAG,MAAQ,CAAC,KAAO,gBAAgB,KAAO","file":"2-c44d08b23ddb5a4e2607.js","sourcesContent":["export default {\n  api: [\n    require(\"../../../packages/react-router/docs/api/hooks.md?web\"),\n    require(\"../../../packages/react-router-dom/docs/api/BrowserRouter.md\"),\n    require(\"../../../packages/react-router-dom/docs/api/HashRouter.md\"),\n    require(\"../../../packages/react-router-dom/docs/api/Link.md\"),\n    require(\"../../../packages/react-router-dom/docs/api/NavLink.md\"),\n    require(\"../../../packages/react-router-dom/docs/api/Prompt.md\"),\n    require(\"../../../packages/react-router/docs/api/MemoryRouter.md?web\"),\n    require(\"../../../packages/react-router/docs/api/Redirect.md?web\"),\n    require(\"../../../packages/react-router/docs/api/Route.md?web\"),\n    require(\"../../../packages/react-router/docs/api/Router.md?web\"),\n    require(\"../../../packages/react-router/docs/api/StaticRouter.md?web\"),\n    require(\"../../../packages/react-router/docs/api/Switch.md?web\"),\n    require(\"../../../packages/react-router/docs/api/generatePath.md?web\"),\n    require(\"../../../packages/react-router/docs/api/history.md?web\"),\n    require(\"../../../packages/react-router/docs/api/location.md?web\"),\n    require(\"../../../packages/react-router/docs/api/match.md?web\"),\n    require(\"../../../packages/react-router/docs/api/matchPath.md?web\"),\n    require(\"../../../packages/react-router/docs/api/withRouter.md?web\")\n  ],\n\n  examples: [\n    {\n      label: \"Basic\",\n      slug: \"basic\",\n      path: \"packages/react-router-dom/examples/Basic.js\",\n      code: require(\"!raw-loader!../../../packages/react-router-dom/examples/Basic.js\")\n    },\n    {\n      label: \"URL Parameters\",\n      slug: \"url-params\",\n      path: \"packages/react-router-dom/examples/URLParams.js\",\n      code: require(\"!raw-loader!../../../packages/react-router-dom/examples/URLParams.js\")\n    },\n    {\n      label: \"Nesting\",\n      slug: \"nesting\",\n      path: \"packages/react-router-dom/examples/Nesting.js\",\n      code: require(\"!raw-loader!../../../packages/react-router-dom/examples/Nesting.js\")\n    },\n    {\n      label: \"Redirects (Auth)\",\n      slug: \"auth-workflow\",\n      path: \"packages/react-router-dom/examples/Auth.js\",\n      code: require(\"!raw-loader!../../../packages/react-router-dom/examples/Auth.js\")\n    },\n    {\n      label: \"Custom Link\",\n      slug: \"custom-link\",\n      path: \"packages/react-router-dom/examples/CustomLink.js\",\n      code: require(\"!raw-loader!../../../packages/react-router-dom/examples/CustomLink.js\")\n    },\n    {\n      label: \"Preventing Transitions\",\n      slug: \"preventing-transitions\",\n      path: \"packages/react-router-dom/examples/PreventingTransitions.js\",\n      code: require(\"!raw-loader!../../../packages/react-router-dom/examples/PreventingTransitions.js\")\n    },\n    {\n      label: \"No Match (404)\",\n      slug: \"no-match\",\n      path: \"packages/react-router-dom/examples/NoMatch.js\",\n      code: require(\"!raw-loader!../../../packages/react-router-dom/examples/NoMatch.js\")\n    },\n    {\n      label: \"Recursive Paths\",\n      slug: \"recursive-paths\",\n      path: \"packages/react-router-dom/examples/Recursive.js\",\n      code: require(\"!raw-loader!../../../packages/react-router-dom/examples/Recursive.js\")\n    },\n    {\n      label: \"Sidebar\",\n      slug: \"sidebar\",\n      path: \"packages/react-router-dom/examples/Sidebar.js\",\n      code: require(\"!raw-loader!../../../packages/react-router-dom/examples/Sidebar.js\")\n    },\n    {\n      label: \"Animated Transitions\",\n      slug: \"animated-transitions\",\n      path: \"packages/react-router-dom/examples/Animation/index.js\",\n      code: require(\"!raw-loader!../../../packages/react-router-dom/examples/Animation/index.js\"),\n      extraDependencies: {\n        \"react-transition-group\": \"^2.2.1\"\n      }\n    },\n    {\n      label: \"Route Config\",\n      slug: \"route-config\",\n      path: \"packages/react-router-dom/examples/RouteConfig.js\",\n      code: require(\"!raw-loader!../../../packages/react-router-dom/examples/RouteConfig.js\")\n    },\n    {\n      label: \"Modal Gallery\",\n      slug: \"modal-gallery\",\n      path: \"packages/react-router-dom/examples/ModalGallery.js\",\n      code: require(\"!raw-loader!../../../packages/react-router-dom/examples/ModalGallery.js\")\n    },\n    {\n      label: \"StaticRouter Context\",\n      slug: \"static-router\",\n      path: \"packages/react-router-dom/examples/StaticRouter.js\",\n      code: require(\"!raw-loader!../../../packages/react-router-dom/examples/StaticRouter.js\")\n    },\n    {\n      label: \"Query Parameters\",\n      slug: \"query-parameters\",\n      path: \"packages/react-router-dom/examples/QueryParams.js\",\n      code: require(\"!raw-loader!../../../packages/react-router-dom/examples/QueryParams.js\")\n    }\n  ],\n\n  guides: [\n    require(\"../../../packages/react-router-dom/docs/guides/quick-start.md\"),\n    require(\"../../../packages/react-router-dom/docs/guides/primary-components.md\"),\n    require(\"../../../packages/react-router-dom/docs/guides/server-rendering.md\"),\n    require(\"../../../packages/react-router-dom/docs/guides/code-splitting.md\"),\n    require(\"../../../packages/react-router-dom/docs/guides/scroll-restoration.md\"),\n    require(\"../../../packages/react-router/docs/guides/philosophy.md?web\"),\n    require(\"../../../packages/react-router/docs/guides/testing.md?web\"),\n    require(\"../../../packages/react-router/docs/guides/redux.md?web\"),\n    require(\"../../../packages/react-router/docs/guides/static-routes.md?web\")\n  ]\n};\n","module.exports = {\"markup\":\"<h1 id=\\\"Hooks\\\"><a href=\\\"/web/api/Hooks\\\" class=\\\"internal-link\\\">Hooks</a></h1>\\n<p>React Router ships with a few <a href=\\\"https://reactjs.org/docs/hooks-intro.html\\\">hooks</a> that let you access the state of the router and perform navigation from inside your components.</p>\\n<p>Please note: You need to be using React &gt;= 16.8 in order to use any of these hooks!</p>\\n<ul>\\n<li><a href=\\\"/web/api/Hooks/usehistory\\\" class=\\\"internal-link\\\"><code>useHistory</code></a></li>\\n<li><a href=\\\"/web/api/Hooks/uselocation\\\" class=\\\"internal-link\\\"><code>useLocation</code></a></li>\\n<li><a href=\\\"/web/api/Hooks/useparams\\\" class=\\\"internal-link\\\"><code>useParams</code></a></li>\\n<li><a href=\\\"/web/api/Hooks/useroutematch\\\" class=\\\"internal-link\\\"><code>useRouteMatch</code></a></li>\\n</ul>\\n<a id=\\\"usehistory\\\">\\n<h2 id=\\\"Hooks-usehistory\\\"><a href=\\\"/web/api/Hooks/usehistory\\\" class=\\\"internal-link\\\"><code>useHistory</code></a></h2>\\n<p>The <code>useHistory</code> hook gives you access to the <a href=\\\"/web/api/history\\\" class=\\\"internal-link\\\"><code>history</code></a> instance that you may use to navigate.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> useHistory <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react-router-dom&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">HomeButton</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">let</span> history <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useHistory</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">handleClick</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    history<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">push</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;/home&quot;</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>button</span> <span class=\\\"token attr-name\\\">type</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>button<span class=\\\"token punctuation\\\">&quot;</span></span> <span class=\\\"token attr-name\\\">onClick</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>handleClick<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      Go home\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>button</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n<a id=\\\"uselocation\\\">\\n<h2 id=\\\"Hooks-uselocation\\\"><a href=\\\"/web/api/Hooks/uselocation\\\" class=\\\"internal-link\\\"><code>useLocation</code></a></h2>\\n<p>The <code>useLocation</code> hook returns the <a href=\\\"/web/api/location\\\" class=\\\"internal-link\\\"><code>location</code></a> object that represents the current URL. You can think about it like a <code>useState</code> that returns a new <code>location</code> whenever the URL changes.</p>\\n<p>This could be really useful e.g. in a situation where you would like to trigger a new &#x201C;page view&#x201D; event using your web analytics tool whenever a new page loads, as in the following example:</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">import</span> React <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> ReactDOM <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react-dom&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span>\\n  BrowserRouter <span class=\\\"token keyword\\\">as</span> Router<span class=\\\"token punctuation\\\">,</span>\\n  Switch<span class=\\\"token punctuation\\\">,</span>\\n  useLocation\\n<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react-router-dom&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">usePageViews</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">let</span> location <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useLocation</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  React<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">useEffect</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">{</span>\\n    ga<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">send</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">&quot;pageview&quot;</span><span class=\\\"token punctuation\\\">,</span> location<span class=\\\"token punctuation\\\">.</span>pathname<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">[</span>location<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">App</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">usePageViews</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Switch</span></span><span class=\\\"token punctuation\\\">&gt;</span></span><span class=\\\"token operator\\\">...</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Switch</span></span><span class=\\\"token punctuation\\\">&gt;</span></span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\nReactDOM<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Router</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">App</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Router</span></span><span class=\\\"token punctuation\\\">&gt;</span></span><span class=\\\"token punctuation\\\">,</span>\\n  node\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n<a id=\\\"useparams\\\">\\n<h2 id=\\\"Hooks-useparams\\\"><a href=\\\"/web/api/Hooks/useparams\\\" class=\\\"internal-link\\\"><code>useParams</code></a></h2>\\n<p><code>useParams</code> returns an object of key/value pairs of URL parameters. Use it to access <code>match.params</code> of the current <code>&lt;Route&gt;</code>.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">import</span> React <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> ReactDOM <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react-dom&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span>\\n  BrowserRouter <span class=\\\"token keyword\\\">as</span> Router<span class=\\\"token punctuation\\\">,</span>\\n  Switch<span class=\\\"token punctuation\\\">,</span>\\n  Route<span class=\\\"token punctuation\\\">,</span>\\n  useParams\\n<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react-router-dom&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">BlogPost</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">let</span> <span class=\\\"token punctuation\\\">{</span> slug <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useParams</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span>Now showing post <span class=\\\"token punctuation\\\">{</span>slug<span class=\\\"token punctuation\\\">}</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\nReactDOM<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Router</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Switch</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token attr-name\\\">exact</span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">HomePage</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Route</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/blog/:slug<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">BlogPost</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Route</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Switch</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Router</span></span><span class=\\\"token punctuation\\\">&gt;</span></span><span class=\\\"token punctuation\\\">,</span>\\n  node\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n<h2 id=\\\"Hooks-useroutematch\\\"><a href=\\\"/web/api/Hooks/useroutematch\\\" class=\\\"internal-link\\\"><code>useRouteMatch</code></a></h2>\\n<p>The <code>useRouteMatch</code> hook attempts to <a href=\\\"/web/api/match\\\" class=\\\"internal-link\\\">match</a> the current URL in the same way that a <code>&lt;Route&gt;</code> would. It&#x2019;s mostly useful for getting access to the match data without actually rendering a <code>&lt;Route&gt;</code>.</p>\\n<p>Now, instead of</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> Route <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react-router-dom&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">BlogPost</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span>\\n      <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/blog/:slug<span class=\\\"token punctuation\\\">&quot;</span></span>\\n      <span class=\\\"token attr-name\\\">render</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\"><span class=\\\"token punctuation\\\">{</span> match <span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token comment\\\">// Do whatever you want with the match...</span>\\n        <span class=\\\"token keyword\\\">return</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span> <span class=\\\"token punctuation\\\">/&gt;</span></span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></span>\\n    <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n<p>you can just</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> useRouteMatch <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react-router-dom&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">BlogPost</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">let</span> match <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useRouteMatch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;/blog/:slug&quot;</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token comment\\\">// Do whatever you want with the match...</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span> <span class=\\\"token punctuation\\\">/&gt;</span></span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n<p>The <code>useRouteMatch</code> hook either:</p>\\n<ul>\\n<li>takes no argument and returns the match object of the current <code>&lt;Route&gt;</code></li>\\n<li>takes a single argument, which is identical to <a href=\\\"/web/api/matchPath/props\\\" class=\\\"internal-link\\\">props argument of matchPath</a>. It can be either a pathname as a string (like the example above) or an object with the matching props that <code>Route</code> accepts, like this:</li>\\n</ul>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">const</span> match <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useRouteMatch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n  path<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">&quot;/BLOG/:slug/&quot;</span><span class=\\\"token punctuation\\\">,</span>\\n  strict<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n  sensitive<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n</a></a></a>\",\"headers\":[{\"text\":\"useHistory\",\"slug\":\"usehistory\"},{\"text\":\"useLocation\",\"slug\":\"uselocation\"},{\"text\":\"useParams\",\"slug\":\"useparams\"},{\"text\":\"useRouteMatch\",\"slug\":\"useroutematch\"}],\"title\":{\"text\":\"Hooks\",\"slug\":\"Hooks\"}}","module.exports = {\"markup\":\"<h1 id=\\\"BrowserRouter\\\"><a href=\\\"/web/api/BrowserRouter\\\" class=\\\"internal-link\\\">&lt;BrowserRouter&gt;</a></h1>\\n<p>A <a href=\\\"/core/api/Router\\\" class=\\\"internal-link\\\"><code>&lt;Router&gt;</code></a> that uses the HTML5 history API (<code>pushState</code>, <code>replaceState</code> and the <code>popstate</code> event) to keep your UI in sync with the URL.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">BrowserRouter</span></span>\\n  <span class=\\\"token attr-name\\\">basename</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>optionalString<span class=\\\"token punctuation\\\">}</span></span>\\n  <span class=\\\"token attr-name\\\">forceRefresh</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>optionalBool<span class=\\\"token punctuation\\\">}</span></span>\\n  <span class=\\\"token attr-name\\\">getUserConfirmation</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>optionalFunc<span class=\\\"token punctuation\\\">}</span></span>\\n  <span class=\\\"token attr-name\\\">keyLength</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>optionalNumber<span class=\\\"token punctuation\\\">}</span></span>\\n<span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">App</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">BrowserRouter</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n</code></pre>\\n<h2 id=\\\"BrowserRouter-basename-string\\\"><a href=\\\"/web/api/BrowserRouter/basename-string\\\" class=\\\"internal-link\\\">basename: string</a></h2>\\n<p>The base URL for all locations. If your app is served from a sub-directory on your server, you&#x2019;ll want to set this to the sub-directory. A properly formatted basename should have a leading slash, but no trailing slash.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">BrowserRouter</span></span> <span class=\\\"token attr-name\\\">basename</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/calendar<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Link</span></span> <span class=\\\"token attr-name\\\">to</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/today<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">/&gt;</span></span> <span class=\\\"token comment\\\">// renders &lt;a href=&quot;/calendar/today&quot;&gt;</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Link</span></span> <span class=\\\"token attr-name\\\">to</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/tomorrow<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">/&gt;</span></span> <span class=\\\"token comment\\\">// renders &lt;a href=&quot;/calendar/tomorrow&quot;&gt;</span>\\n    <span class=\\\"token operator\\\">...</span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">BrowserRouter</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n</code></pre>\\n<h2 id=\\\"BrowserRouter-getuserconfirmation-func\\\"><a href=\\\"/web/api/BrowserRouter/getuserconfirmation-func\\\" class=\\\"internal-link\\\">getUserConfirmation: func</a></h2>\\n<p>A function to use to confirm navigation. Defaults to using <a href=\\\"https://developer.mozilla.org/en-US/docs/Web/API/Window/confirm\\\"><code>window.confirm</code></a>.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">BrowserRouter</span></span>\\n  <span class=\\\"token attr-name\\\">getUserConfirmation</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">message<span class=\\\"token punctuation\\\">,</span> callback</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">// this is the default behavior</span>\\n    <span class=\\\"token keyword\\\">const</span> allowTransition <span class=\\\"token operator\\\">=</span> window<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">confirm</span><span class=\\\"token punctuation\\\">(</span>message<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token function\\\">callback</span><span class=\\\"token punctuation\\\">(</span>allowTransition<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></span>\\n<span class=\\\"token punctuation\\\">/&gt;</span></span>\\n</code></pre>\\n<h2 id=\\\"BrowserRouter-forcerefresh-bool\\\"><a href=\\\"/web/api/BrowserRouter/forcerefresh-bool\\\" class=\\\"internal-link\\\">forceRefresh: bool</a></h2>\\n<p>If <code>true</code> the router will use full page refreshes on page navigation. You may want to use this to imitate the way a traditional server-rendered app would work with full page refreshes between page navigation.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">BrowserRouter</span></span> <span class=\\\"token attr-name\\\">forceRefresh</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n</code></pre>\\n<h2 id=\\\"BrowserRouter-keylength-number\\\"><a href=\\\"/web/api/BrowserRouter/keylength-number\\\" class=\\\"internal-link\\\">keyLength: number</a></h2>\\n<p>The length of <code>location.key</code>. Defaults to 6.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">BrowserRouter</span></span> <span class=\\\"token attr-name\\\">keyLength</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token number\\\">12</span><span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n</code></pre>\\n<h2 id=\\\"BrowserRouter-children-node\\\"><a href=\\\"/web/api/BrowserRouter/children-node\\\" class=\\\"internal-link\\\">children: node</a></h2>\\n<p>The child elements to render.</p>\\n<p>Note: On React &lt; 16 you must use a <a href=\\\"https://facebook.github.io/react/docs/react-api.html#reactchildrenonly\\\">single child element</a> since a render method cannot return more than one element. If you need more than one element, you might try wrapping them in an extra <code>&lt;div&gt;</code> or <code>&lt;React.Fragment&gt;</code>.</p>\\n\",\"headers\":[{\"text\":\"basename: string\",\"slug\":\"basename-string\"},{\"text\":\"getUserConfirmation: func\",\"slug\":\"getuserconfirmation-func\"},{\"text\":\"forceRefresh: bool\",\"slug\":\"forcerefresh-bool\"},{\"text\":\"keyLength: number\",\"slug\":\"keylength-number\"},{\"text\":\"children: node\",\"slug\":\"children-node\"}],\"title\":{\"text\":\"<BrowserRouter>\",\"slug\":\"BrowserRouter\"}}","module.exports = {\"markup\":\"<h1 id=\\\"HashRouter\\\"><a href=\\\"/web/api/HashRouter\\\" class=\\\"internal-link\\\">&lt;HashRouter&gt;</a></h1>\\n<p>A <a href=\\\"/core/api/Router\\\" class=\\\"internal-link\\\"><code>&lt;Router&gt;</code></a> that uses the hash portion of the URL (i.e. <code>window.location.hash</code>) to keep your UI in sync with the URL.</p>\\n<p><strong>IMPORTANT NOTE:</strong> Hash history does not support <code>location.key</code> or <code>location.state</code>. In previous versions we attempted to shim the behavior but there were edge-cases we couldn&#x2019;t solve. Any code or plugin that needs this behavior won&#x2019;t work. As this technique is only intended to support legacy browsers, we encourage you to configure your server to work with <code>&lt;BrowserHistory&gt;</code> instead.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">HashRouter</span></span>\\n  <span class=\\\"token attr-name\\\">basename</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>optionalString<span class=\\\"token punctuation\\\">}</span></span>\\n  <span class=\\\"token attr-name\\\">getUserConfirmation</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>optionalFunc<span class=\\\"token punctuation\\\">}</span></span>\\n  <span class=\\\"token attr-name\\\">hashType</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>optionalString<span class=\\\"token punctuation\\\">}</span></span>\\n<span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">App</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">HashRouter</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n</code></pre>\\n<h2 id=\\\"HashRouter-basename-string\\\"><a href=\\\"/web/api/HashRouter/basename-string\\\" class=\\\"internal-link\\\">basename: string</a></h2>\\n<p>The base URL for all locations. A properly formatted basename should have a leading slash, but no trailing slash.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">HashRouter</span></span> <span class=\\\"token attr-name\\\">basename</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/calendar<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">/&gt;</span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Link</span></span> <span class=\\\"token attr-name\\\">to</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/today<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">/&gt;</span></span> <span class=\\\"token comment\\\">// renders &lt;a href=&quot;#/calendar/today&quot;&gt;</span>\\n</code></pre>\\n<h2 id=\\\"HashRouter-getuserconfirmation-func\\\"><a href=\\\"/web/api/HashRouter/getuserconfirmation-func\\\" class=\\\"internal-link\\\">getUserConfirmation: func</a></h2>\\n<p>A function to use to confirm navigation. Defaults to using <a href=\\\"https://developer.mozilla.org/en-US/docs/Web/API/Window/confirm\\\"><code>window.confirm</code></a>.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">HashRouter</span></span>\\n  <span class=\\\"token attr-name\\\">getUserConfirmation</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">message<span class=\\\"token punctuation\\\">,</span> callback</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">// this is the default behavior</span>\\n    <span class=\\\"token keyword\\\">const</span> allowTransition <span class=\\\"token operator\\\">=</span> window<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">confirm</span><span class=\\\"token punctuation\\\">(</span>message<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token function\\\">callback</span><span class=\\\"token punctuation\\\">(</span>allowTransition<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></span>\\n<span class=\\\"token punctuation\\\">/&gt;</span></span>\\n</code></pre>\\n<h2 id=\\\"HashRouter-hashtype-string\\\"><a href=\\\"/web/api/HashRouter/hashtype-string\\\" class=\\\"internal-link\\\">hashType: string</a></h2>\\n<p>The type of encoding to use for <code>window.location.hash</code>. Available values are:</p>\\n<ul>\\n<li><code>&quot;slash&quot;</code> - Creates hashes like <code>#/</code> and <code>#/sunshine/lollipops</code></li>\\n<li><code>&quot;noslash&quot;</code> - Creates hashes like <code>#</code> and <code>#sunshine/lollipops</code></li>\\n<li><code>&quot;hashbang&quot;</code> - Creates <a href=\\\"https://developers.google.com/webmasters/ajax-crawling/docs/learn-more\\\">&#x201C;ajax crawlable&#x201D;</a> (deprecated by Google) hashes like <code>#!/</code> and <code>#!/sunshine/lollipops</code></li>\\n</ul>\\n<p>Defaults to <code>&quot;slash&quot;</code>.</p>\\n<h2 id=\\\"HashRouter-children-node\\\"><a href=\\\"/web/api/HashRouter/children-node\\\" class=\\\"internal-link\\\">children: node</a></h2>\\n<p>A <a href=\\\"https://facebook.github.io/react/docs/react-api.html#reactchildrenonly\\\">single child element</a> to render.</p>\\n\",\"headers\":[{\"text\":\"basename: string\",\"slug\":\"basename-string\"},{\"text\":\"getUserConfirmation: func\",\"slug\":\"getuserconfirmation-func\"},{\"text\":\"hashType: string\",\"slug\":\"hashtype-string\"},{\"text\":\"children: node\",\"slug\":\"children-node\"}],\"title\":{\"text\":\"<HashRouter>\",\"slug\":\"HashRouter\"}}","module.exports = {\"markup\":\"<h1 id=\\\"Link\\\"><a href=\\\"/web/api/Link\\\" class=\\\"internal-link\\\">&lt;Link&gt;</a></h1>\\n<p>Provides declarative, accessible navigation around your application.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Link</span></span> <span class=\\\"token attr-name\\\">to</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/about<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>About<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Link</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n</code></pre>\\n<h2 id=\\\"Link-to-string\\\"><a href=\\\"/web/api/Link/to-string\\\" class=\\\"internal-link\\\">to: string</a></h2>\\n<p>A string representation of the Link location, created by concatenating the location&#x2019;s pathname, search, and hash properties.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Link</span></span> <span class=\\\"token attr-name\\\">to</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/courses?sort=name<span class=\\\"token punctuation\\\">&quot;</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n</code></pre>\\n<h2 id=\\\"Link-to-object\\\"><a href=\\\"/web/api/Link/to-object\\\" class=\\\"internal-link\\\">to: object</a></h2>\\n<p>An object that can have any of the following properties:</p>\\n<ul>\\n<li><code>pathname</code>: A string representing the path to link to.</li>\\n<li><code>search</code>: A string representation of query parameters.</li>\\n<li><code>hash</code>: A hash to put in the URL, e.g. <code>#a-hash</code>.</li>\\n<li><code>state</code>: State to persist to the <code>location</code>.</li>\\n</ul>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Link</span></span>\\n  <span class=\\\"token attr-name\\\">to</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">{</span>\\n    pathname<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">&quot;/courses&quot;</span><span class=\\\"token punctuation\\\">,</span>\\n    search<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">&quot;?sort=name&quot;</span><span class=\\\"token punctuation\\\">,</span>\\n    hash<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">&quot;#the-hash&quot;</span><span class=\\\"token punctuation\\\">,</span>\\n    state<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span> fromDashboard<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span> <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></span>\\n<span class=\\\"token punctuation\\\">/&gt;</span></span>\\n</code></pre>\\n<h2 id=\\\"Link-to-func\\\"><a href=\\\"/web/api/Link/to-func\\\" class=\\\"internal-link\\\">to: func</a></h2>\\n<p>A function to which current location is passed as an argument and which should return location representation as a string or as an object</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Link</span></span> <span class=\\\"token attr-name\\\">to</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token parameter\\\">location</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> <span class=\\\"token operator\\\">...</span>location<span class=\\\"token punctuation\\\">,</span> pathname<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">&quot;/courses&quot;</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n</code></pre>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Link</span></span> <span class=\\\"token attr-name\\\">to</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token parameter\\\">location</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>location<span class=\\\"token punctuation\\\">.</span>pathname<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">?sort=name</span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n</code></pre>\\n<h2 id=\\\"Link-replace-bool\\\"><a href=\\\"/web/api/Link/replace-bool\\\" class=\\\"internal-link\\\">replace: bool</a></h2>\\n<p>When <code>true</code>, clicking the link will replace the current entry in the history stack instead of adding a new one.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Link</span></span> <span class=\\\"token attr-name\\\">to</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/courses<span class=\\\"token punctuation\\\">&quot;</span></span> <span class=\\\"token attr-name\\\">replace</span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n</code></pre>\\n<h2 id=\\\"Link-innerref-func\\\"><a href=\\\"/web/api/Link/innerref-func\\\" class=\\\"internal-link\\\">innerRef: func</a></h2>\\n<p>As of React Router 5.1, if you are using React 16 you should not need this prop because we <a href=\\\"https://reactjs.org/docs/forwarding-refs.html\\\">forward the ref</a> to the underlying <code>&lt;a&gt;</code>. Use a normal <code>ref</code> instead.</p>\\n<p>Allows access to the underlying <code>ref</code> of the component.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Link</span></span>\\n  <span class=\\\"token attr-name\\\">to</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/<span class=\\\"token punctuation\\\">&quot;</span></span>\\n  <span class=\\\"token attr-name\\\">innerRef</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token parameter\\\">node</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">// `node` refers to the mounted DOM element</span>\\n    <span class=\\\"token comment\\\">// or null when unmounted</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></span>\\n<span class=\\\"token punctuation\\\">/&gt;</span></span>\\n</code></pre>\\n<h2 id=\\\"Link-innerref-refobject\\\"><a href=\\\"/web/api/Link/innerref-refobject\\\" class=\\\"internal-link\\\">innerRef: RefObject</a></h2>\\n<p>As of React Router 5.1, if you are using React 16 you should not need this prop because we <a href=\\\"https://reactjs.org/docs/forwarding-refs.html\\\">forward the ref</a> to the underlying <code>&lt;a&gt;</code>. Use a normal <code>ref</code> instead.</p>\\n<p>Get the underlying <code>ref</code> of the component using <a href=\\\"https://reactjs.org/docs/refs-and-the-dom.html#creating-refs\\\"><code>React.createRef</code></a>.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">let</span> anchorRef <span class=\\\"token operator\\\">=</span> React<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">createRef</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Link</span></span> <span class=\\\"token attr-name\\\">to</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/<span class=\\\"token punctuation\\\">&quot;</span></span> <span class=\\\"token attr-name\\\">innerRef</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>anchorRef<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n</code></pre>\\n<h2 id=\\\"Link-component-reactcomponent\\\"><a href=\\\"/web/api/Link/component-reactcomponent\\\" class=\\\"internal-link\\\">component: React.Component</a></h2>\\n<p>If you would like utilize your own navigation component, you can do so by passing it through the <code>component</code> prop.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">const</span> FancyLink <span class=\\\"token operator\\\">=</span> React<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">forwardRef</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\"><span class=\\\"token punctuation\\\">{</span> navigate<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token operator\\\">...</span>props <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> ref</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>a</span> <span class=\\\"token attr-name\\\">ref</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>ref<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token spread\\\"><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">...</span><span class=\\\"token attr-value\\\">props</span><span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token attr-name\\\">onClick</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>handleClick<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>&#x1F485; <span class=\\\"token punctuation\\\">{</span>props<span class=\\\"token punctuation\\\">.</span>children<span class=\\\"token punctuation\\\">}</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>a</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Link</span></span> <span class=\\\"token attr-name\\\">to</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/<span class=\\\"token punctuation\\\">&quot;</span></span> <span class=\\\"token attr-name\\\">component</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>FancyLink<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n</code></pre>\\n<h2 id=\\\"Link-others\\\"><a href=\\\"/web/api/Link/others\\\" class=\\\"internal-link\\\">others</a></h2>\\n<p>You can also pass props you&#x2019;d like to be on the <code>&lt;a&gt;</code> such as a <code>title</code>, <code>id</code>, <code>className</code>, etc.</p>\\n\",\"headers\":[{\"text\":\"to: string\",\"slug\":\"to-string\"},{\"text\":\"to: object\",\"slug\":\"to-object\"},{\"text\":\"to: func\",\"slug\":\"to-func\"},{\"text\":\"replace: bool\",\"slug\":\"replace-bool\"},{\"text\":\"innerRef: func\",\"slug\":\"innerref-func\"},{\"text\":\"innerRef: RefObject\",\"slug\":\"innerref-refobject\"},{\"text\":\"component: React.Component\",\"slug\":\"component-reactcomponent\"},{\"text\":\"others\",\"slug\":\"others\"}],\"title\":{\"text\":\"<Link>\",\"slug\":\"Link\"}}","module.exports = {\"markup\":\"<h1 id=\\\"NavLink\\\"><a href=\\\"/web/api/NavLink\\\" class=\\\"internal-link\\\">&lt;NavLink&gt;</a></h1>\\n<p>A special version of the <a href=\\\"Link.md\\\"><code>&lt;Link&gt;</code></a> that will add styling attributes to the rendered element when it matches the current URL.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">NavLink</span></span> <span class=\\\"token attr-name\\\">to</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/about<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>About<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">NavLink</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n</code></pre>\\n<h2 id=\\\"NavLink-classname-string-func\\\"><a href=\\\"/web/api/NavLink/classname-string-func\\\" class=\\\"internal-link\\\">className: string | func</a></h2>\\n<p><code>className</code> can either be a string or a function that returns a string. If the function <code>className</code> is used, the link&#x2019;s <code>active</code> state is passed as a parameter. This is helpful if you want to exclusively apply a <code>className</code> to an inactive link.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">NavLink</span></span>\\n  <span class=\\\"token attr-name\\\">to</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/faq<span class=\\\"token punctuation\\\">&quot;</span></span>\\n  <span class=\\\"token attr-name\\\">className</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token parameter\\\">isActive</span> <span class=\\\"token operator\\\">=&gt;</span>\\n    <span class=\\\"token string\\\">&quot;nav-link&quot;</span> <span class=\\\"token operator\\\">+</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">!</span>isActive <span class=\\\"token operator\\\">?</span> <span class=\\\"token string\\\">&quot; unselected&quot;</span> <span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">&quot;&quot;</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">}</span></span>\\n<span class=\\\"token punctuation\\\">&gt;</span></span>\\n  FAQs\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">NavLink</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n</code></pre>\\n<p>In React Router v6, <code>activeClassName</code> will be removed and you should use the function <code>className</code> to apply classnames to either active or inactive <code>NavLink</code> components.</p>\\n<h2 id=\\\"NavLink-activeclassname-string\\\"><a href=\\\"/web/api/NavLink/activeclassname-string\\\" class=\\\"internal-link\\\">activeClassName: string</a></h2>\\n<p>The class to give the element when it is active. The default given class is <code>active</code>. This will be joined with the <code>className</code> prop.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">NavLink</span></span> <span class=\\\"token attr-name\\\">to</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/faq<span class=\\\"token punctuation\\\">&quot;</span></span> <span class=\\\"token attr-name\\\">activeClassName</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>selected<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  FAQs\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">NavLink</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n</code></pre>\\n<h2 id=\\\"NavLink-style-object-func\\\"><a href=\\\"/web/api/NavLink/style-object-func\\\" class=\\\"internal-link\\\">style: object | func</a></h2>\\n<p><code>style</code> can either be a <code>React.CSSProperties</code> object or a function that returns a style object. If the function <code>style</code> is used, the link&#x2019;s <code>active</code> state is passed as a parameter.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">NavLink</span></span>\\n  <span class=\\\"token attr-name\\\">to</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/faq<span class=\\\"token punctuation\\\">&quot;</span></span>\\n  <span class=\\\"token attr-name\\\">style</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token parameter\\\">isActive</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n    color<span class=\\\"token punctuation\\\">:</span> isActive <span class=\\\"token operator\\\">?</span> <span class=\\\"token string\\\">&quot;green&quot;</span> <span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">&quot;blue&quot;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span></span>\\n<span class=\\\"token punctuation\\\">&gt;</span></span>\\n  FAQs\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">NavLink</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n</code></pre>\\n<p>In React Router v6, <code>activeStyle</code> will be removed and you should use the function <code>style</code> to apply inline styles to either active or inactive <code>NavLink</code> components.</p>\\n<h2 id=\\\"NavLink-activestyle-object\\\"><a href=\\\"/web/api/NavLink/activestyle-object\\\" class=\\\"internal-link\\\">activeStyle: object</a></h2>\\n<p>The styles to apply to the element when it is active.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">NavLink</span></span>\\n  <span class=\\\"token attr-name\\\">to</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/faq<span class=\\\"token punctuation\\\">&quot;</span></span>\\n  <span class=\\\"token attr-name\\\">activeStyle</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">{</span>\\n    fontWeight<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">&quot;bold&quot;</span><span class=\\\"token punctuation\\\">,</span>\\n    color<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">&quot;red&quot;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></span>\\n<span class=\\\"token punctuation\\\">&gt;</span></span>\\n  FAQs\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">NavLink</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n</code></pre>\\n<h2 id=\\\"NavLink-exact-bool\\\"><a href=\\\"/web/api/NavLink/exact-bool\\\" class=\\\"internal-link\\\">exact: bool</a></h2>\\n<p>When <code>true</code>, the active class/style will only be applied if the location is matched exactly.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">NavLink</span></span> <span class=\\\"token attr-name\\\">exact</span> <span class=\\\"token attr-name\\\">to</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/profile<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  Profile\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">NavLink</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n</code></pre>\\n<h2 id=\\\"NavLink-strict-bool\\\"><a href=\\\"/web/api/NavLink/strict-bool\\\" class=\\\"internal-link\\\">strict: bool</a></h2>\\n<p>When <code>true</code>, the trailing slash on a location&#x2019;s <code>pathname</code> will be taken into consideration when determining if the location matches the current URL. See the <a href=\\\"/core/api/Route/strict-bool\\\" class=\\\"internal-link\\\"><code>&lt;Route strict&gt;</code></a> documentation for more information.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">NavLink</span></span> <span class=\\\"token attr-name\\\">strict</span> <span class=\\\"token attr-name\\\">to</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/events/<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  Events\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">NavLink</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n</code></pre>\\n<h2 id=\\\"NavLink-isactive-func\\\"><a href=\\\"/web/api/NavLink/isactive-func\\\" class=\\\"internal-link\\\">isActive: func</a></h2>\\n<p>A function to add extra logic for determining whether the link is active. This should be used if you want to do more than verify that the link&#x2019;s pathname matches the current URL&#x2019;s <code>pathname</code>.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">NavLink</span></span>\\n  <span class=\\\"token attr-name\\\">to</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/events/123<span class=\\\"token punctuation\\\">&quot;</span></span>\\n  <span class=\\\"token attr-name\\\">isActive</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">match<span class=\\\"token punctuation\\\">,</span> location</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">!</span>match<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">return</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token comment\\\">// only consider an event active if its event id is an odd number</span>\\n    <span class=\\\"token keyword\\\">const</span> eventID <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">parseInt</span><span class=\\\"token punctuation\\\">(</span>match<span class=\\\"token punctuation\\\">.</span>params<span class=\\\"token punctuation\\\">.</span>eventID<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token operator\\\">!</span><span class=\\\"token function\\\">isNaN</span><span class=\\\"token punctuation\\\">(</span>eventID<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">&amp;&amp;</span> eventID <span class=\\\"token operator\\\">%</span> <span class=\\\"token number\\\">2</span> <span class=\\\"token operator\\\">===</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></span>\\n<span class=\\\"token punctuation\\\">&gt;</span></span>\\n  Event <span class=\\\"token number\\\">123</span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">NavLink</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n</code></pre>\\n<h2 id=\\\"NavLink-location-object\\\"><a href=\\\"/web/api/NavLink/location-object\\\" class=\\\"internal-link\\\">location: object</a></h2>\\n<p>The <a href=\\\"/web/api/NavLink/isactive-func\\\" class=\\\"internal-link\\\"><code>isActive</code></a> compares the current history location (usually the current browser URL).\\nTo compare to a different location, a <a href=\\\"/core/api/location\\\" class=\\\"internal-link\\\"><code>location</code></a> can be passed.</p>\\n<h2 id=\\\"NavLink-aria-current-string\\\"><a href=\\\"/web/api/NavLink/aria-current-string\\\" class=\\\"internal-link\\\">aria-current: string</a></h2>\\n<p>The value of the <code>aria-current</code> attribute used on an active link. Available values are:</p>\\n<ul>\\n<li><code>&quot;page&quot;</code> - used to indicate a link within a set of pagination links</li>\\n<li><code>&quot;step&quot;</code> - used to indicate a link within a step indicator for a step-based process</li>\\n<li><code>&quot;location&quot;</code> - used to indicate the image that is visually highlighted as the current component of a flow chart</li>\\n<li><code>&quot;date&quot;</code> - used to indicate the current date within a calendar</li>\\n<li><code>&quot;time&quot;</code> - used to indicate the current time within a timetable</li>\\n<li><code>&quot;true&quot;</code> - used to indicate if the NavLink is active</li>\\n<li><code>&quot;false&quot;</code> - used to prevent assistive technologies from reacting to a current link (a use case would be to prevent multiple aria-current tags on a single page)</li>\\n</ul>\\n<p>Defaults to <code>&quot;page&quot;</code>.</p>\\n<p>Based on <a href=\\\"https://www.w3.org/TR/wai-aria-1.1/#aria-current\\\">WAI-ARIA 1.1 specifications</a></p>\\n\",\"headers\":[{\"text\":\"className: string | func\",\"slug\":\"classname-string-func\"},{\"text\":\"activeClassName: string\",\"slug\":\"activeclassname-string\"},{\"text\":\"style: object | func\",\"slug\":\"style-object-func\"},{\"text\":\"activeStyle: object\",\"slug\":\"activestyle-object\"},{\"text\":\"exact: bool\",\"slug\":\"exact-bool\"},{\"text\":\"strict: bool\",\"slug\":\"strict-bool\"},{\"text\":\"isActive: func\",\"slug\":\"isactive-func\"},{\"text\":\"location: object\",\"slug\":\"location-object\"},{\"text\":\"aria-current: string\",\"slug\":\"aria-current-string\"}],\"title\":{\"text\":\"<NavLink>\",\"slug\":\"NavLink\"}}","module.exports = {\"markup\":\"<h1 id=\\\"Prompt\\\"><a href=\\\"/web/api/Prompt\\\" class=\\\"internal-link\\\">&lt;Prompt&gt;</a></h1>\\n<p>Re-exported from core <a href=\\\"/core/api/Prompt\\\" class=\\\"internal-link\\\"><code>Prompt</code></a></p>\\n\",\"headers\":[],\"title\":{\"text\":\"<Prompt>\",\"slug\":\"Prompt\"}}","module.exports = {\"markup\":\"<h1 id=\\\"MemoryRouter\\\"><a href=\\\"/web/api/MemoryRouter\\\" class=\\\"internal-link\\\">&lt;MemoryRouter&gt;</a></h1>\\n<p>A <a href=\\\"Router.md\\\"><code>&lt;Router&gt;</code></a> that keeps the history of your &#x201C;URL&#x201D; in memory (does not read or write to the address bar). Useful in tests and non-browser environments like <a href=\\\"https://facebook.github.io/react-native/\\\">React Native</a>.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">MemoryRouter</span></span>\\n  <span class=\\\"token attr-name\\\">initialEntries</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>optionalArray<span class=\\\"token punctuation\\\">}</span></span>\\n  <span class=\\\"token attr-name\\\">initialIndex</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>optionalNumber<span class=\\\"token punctuation\\\">}</span></span>\\n  <span class=\\\"token attr-name\\\">getUserConfirmation</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>optionalFunc<span class=\\\"token punctuation\\\">}</span></span>\\n  <span class=\\\"token attr-name\\\">keyLength</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>optionalNumber<span class=\\\"token punctuation\\\">}</span></span>\\n<span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">App</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">MemoryRouter</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n</code></pre>\\n<h2 id=\\\"MemoryRouter-initialentries-array\\\"><a href=\\\"/web/api/MemoryRouter/initialentries-array\\\" class=\\\"internal-link\\\">initialEntries: array</a></h2>\\n<p>An array of <code>location</code>s in the history stack. These may be full-blown location objects with <code>{ pathname, search, hash, state }</code> or simple string URLs.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">MemoryRouter</span></span>\\n  <span class=\\\"token attr-name\\\">initialEntries</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">&quot;/one&quot;</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">&quot;/two&quot;</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span> pathname<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">&quot;/three&quot;</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">}</span></span>\\n  <span class=\\\"token attr-name\\\">initialIndex</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">}</span></span>\\n<span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">App</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">MemoryRouter</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n</code></pre>\\n<h2 id=\\\"MemoryRouter-initialindex-number\\\"><a href=\\\"/web/api/MemoryRouter/initialindex-number\\\" class=\\\"internal-link\\\">initialIndex: number</a></h2>\\n<p>The initial location&#x2019;s index in the array of <code>initialEntries</code>.</p>\\n<h2 id=\\\"MemoryRouter-getuserconfirmation-func\\\"><a href=\\\"/web/api/MemoryRouter/getuserconfirmation-func\\\" class=\\\"internal-link\\\">getUserConfirmation: func</a></h2>\\n<p>A function to use to confirm navigation. You must use this option when using <code>&lt;MemoryRouter&gt;</code> directly with a <code>&lt;Prompt&gt;</code>.</p>\\n<h2 id=\\\"MemoryRouter-keylength-number\\\"><a href=\\\"/web/api/MemoryRouter/keylength-number\\\" class=\\\"internal-link\\\">keyLength: number</a></h2>\\n<p>The length of <code>location.key</code>. Defaults to 6.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">MemoryRouter</span></span> <span class=\\\"token attr-name\\\">keyLength</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token number\\\">12</span><span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n</code></pre>\\n<h2 id=\\\"MemoryRouter-children-node\\\"><a href=\\\"/web/api/MemoryRouter/children-node\\\" class=\\\"internal-link\\\">children: node</a></h2>\\n<p>The child elements to render.</p>\\n<p>Note: On React &lt; 16 you must use a <a href=\\\"https://facebook.github.io/react/docs/react-api.html#reactchildrenonly\\\">single child element</a> since a render method cannot return more than one element. If you need more than one element, you might try wrapping them in an extra <code>&lt;div&gt;</code> or <code>&lt;React.Fragment&gt;</code>.</p>\\n\",\"headers\":[{\"text\":\"initialEntries: array\",\"slug\":\"initialentries-array\"},{\"text\":\"initialIndex: number\",\"slug\":\"initialindex-number\"},{\"text\":\"getUserConfirmation: func\",\"slug\":\"getuserconfirmation-func\"},{\"text\":\"keyLength: number\",\"slug\":\"keylength-number\"},{\"text\":\"children: node\",\"slug\":\"children-node\"}],\"title\":{\"text\":\"<MemoryRouter>\",\"slug\":\"MemoryRouter\"}}","module.exports = {\"markup\":\"<h1 id=\\\"Redirect\\\"><a href=\\\"/web/api/Redirect\\\" class=\\\"internal-link\\\">&lt;Redirect&gt;</a></h1>\\n<p>Rendering a <code>&lt;Redirect&gt;</code> will navigate to a new location. The new location will override the current location in the history stack, like server-side redirects (HTTP 3xx) do.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token attr-name\\\">exact</span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token punctuation\\\">{</span>loggedIn <span class=\\\"token operator\\\">?</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Redirect</span></span> <span class=\\\"token attr-name\\\">to</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/dashboard<span class=\\\"token punctuation\\\">&quot;</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span> <span class=\\\"token punctuation\\\">:</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">PublicHomePage</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span><span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Route</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n</code></pre>\\n<h2 id=\\\"Redirect-to-string\\\"><a href=\\\"/web/api/Redirect/to-string\\\" class=\\\"internal-link\\\">to: string</a></h2>\\n<p>The URL to redirect to. Any valid URL path that <a href=\\\"https://github.com/pillarjs/path-to-regexp/tree/v1.7.0\\\"><code>path-to-regexp@^1.7.0</code></a> understands.\\nAll URL parameters that are used in <code>to</code> must be covered by <code>from</code>.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Redirect</span></span> <span class=\\\"token attr-name\\\">to</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/somewhere/else<span class=\\\"token punctuation\\\">&quot;</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n</code></pre>\\n<h2 id=\\\"Redirect-to-object\\\"><a href=\\\"/web/api/Redirect/to-object\\\" class=\\\"internal-link\\\">to: object</a></h2>\\n<p>A location to redirect to. <code>pathname</code> can be any valid URL path that <a href=\\\"https://github.com/pillarjs/path-to-regexp/tree/v1.7.0\\\"><code>path-to-regexp@^1.7.0</code></a> understands.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Redirect</span></span>\\n  <span class=\\\"token attr-name\\\">to</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">{</span>\\n    pathname<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">&quot;/login&quot;</span><span class=\\\"token punctuation\\\">,</span>\\n    search<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">&quot;?utm=your+face&quot;</span><span class=\\\"token punctuation\\\">,</span>\\n    state<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span> referrer<span class=\\\"token punctuation\\\">:</span> currentLocation <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></span>\\n<span class=\\\"token punctuation\\\">/&gt;</span></span>\\n</code></pre>\\n<p>The <code>state</code> object can be accessed via <code>this.props.location.state</code> in the redirected-to component. This new <code>referrer</code> key (which is not a special name) would then be accessed via <code>this.props.location.state.referrer</code> in the <code>Login</code> component pointed to by the pathname <code>&apos;/login&apos;</code></p>\\n<h2 id=\\\"Redirect-push-bool\\\"><a href=\\\"/web/api/Redirect/push-bool\\\" class=\\\"internal-link\\\">push: bool</a></h2>\\n<p>When <code>true</code>, redirecting will push a new entry onto the history instead of replacing the current one.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Redirect</span></span> <span class=\\\"token attr-name\\\">push</span> <span class=\\\"token attr-name\\\">to</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/somewhere/else<span class=\\\"token punctuation\\\">&quot;</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n</code></pre>\\n<h2 id=\\\"Redirect-from-string\\\"><a href=\\\"/web/api/Redirect/from-string\\\" class=\\\"internal-link\\\">from: string</a></h2>\\n<p>A pathname to redirect from. Any valid URL path that <a href=\\\"https://github.com/pillarjs/path-to-regexp/tree/v1.7.0\\\"><code>path-to-regexp@^1.7.0</code></a> understands.\\nAll matched URL parameters are provided to the pattern in <code>to</code>. Must contain all parameters that are used in <code>to</code>. Additional parameters not used by <code>to</code> are ignored.</p>\\n<p><strong>Note:</strong> This can only be used to match a location when rendering a <code>&lt;Redirect&gt;</code> inside of a <code>&lt;Switch&gt;</code>. See <a href=\\\"/web/api/Switch/children-node\\\" class=\\\"internal-link\\\"><code>&lt;Switch children&gt;</code></a> for more details.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Switch</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Redirect</span></span> <span class=\\\"token attr-name\\\">from</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/old-path<span class=\\\"token punctuation\\\">&quot;</span></span> <span class=\\\"token attr-name\\\">to</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/new-path<span class=\\\"token punctuation\\\">&quot;</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/new-path<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Place</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Route</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Switch</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n\\n<span class=\\\"token comment\\\">// Redirect with matched parameters</span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Switch</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Redirect</span></span> <span class=\\\"token attr-name\\\">from</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/users/:id<span class=\\\"token punctuation\\\">&quot;</span></span> <span class=\\\"token attr-name\\\">to</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/users/profile/:id<span class=\\\"token punctuation\\\">&quot;</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/users/profile/:id<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Profile</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Route</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Switch</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n</code></pre>\\n<h2 id=\\\"Redirect-exact-bool\\\"><a href=\\\"/web/api/Redirect/exact-bool\\\" class=\\\"internal-link\\\">exact: bool</a></h2>\\n<p>Match <code>from</code> exactly; equivalent to <a href=\\\"/web/api/Route/exact-bool\\\" class=\\\"internal-link\\\">Route.exact</a>.</p>\\n<p><strong>Note:</strong> This can only be used in conjunction with <code>from</code> to exactly match a location when rendering a <code>&lt;Redirect&gt;</code> inside of a <code>&lt;Switch&gt;</code>. See <a href=\\\"/web/api/Switch/children-node\\\" class=\\\"internal-link\\\"><code>&lt;Switch children&gt;</code></a> for more details.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Switch</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Redirect</span></span> <span class=\\\"token attr-name\\\">exact</span> <span class=\\\"token attr-name\\\">from</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/<span class=\\\"token punctuation\\\">&quot;</span></span> <span class=\\\"token attr-name\\\">to</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/home<span class=\\\"token punctuation\\\">&quot;</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/home<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Home</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Route</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/about<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">About</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Route</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Switch</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n</code></pre>\\n<h2 id=\\\"Redirect-strict-bool\\\"><a href=\\\"/web/api/Redirect/strict-bool\\\" class=\\\"internal-link\\\">strict: bool</a></h2>\\n<p>Match <code>from</code> strictly; equivalent to <a href=\\\"/web/api/Route/strict-bool\\\" class=\\\"internal-link\\\">Route.strict</a>.</p>\\n<p><strong>Note:</strong> This can only be used in conjunction with <code>from</code> to strictly match a location when rendering a <code>&lt;Redirect&gt;</code> inside of a <code>&lt;Switch&gt;</code>. See <a href=\\\"/web/api/Switch/children-node\\\" class=\\\"internal-link\\\"><code>&lt;Switch children&gt;</code></a> for more details.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Switch</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Redirect</span></span> <span class=\\\"token attr-name\\\">strict</span> <span class=\\\"token attr-name\\\">from</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/one/<span class=\\\"token punctuation\\\">&quot;</span></span> <span class=\\\"token attr-name\\\">to</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/home<span class=\\\"token punctuation\\\">&quot;</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/home<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Home</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Route</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/about<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">About</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Route</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Switch</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n</code></pre>\\n<h2 id=\\\"Redirect-sensitive-bool\\\"><a href=\\\"/web/api/Redirect/sensitive-bool\\\" class=\\\"internal-link\\\">sensitive: bool</a></h2>\\n<p>Match <code>from</code> case sensitive; equivalent to <a href=\\\"/web/api/Route/sensitive-bool\\\" class=\\\"internal-link\\\">Route.sensitive</a>.</p>\\n\",\"headers\":[{\"text\":\"to: string\",\"slug\":\"to-string\"},{\"text\":\"to: object\",\"slug\":\"to-object\"},{\"text\":\"push: bool\",\"slug\":\"push-bool\"},{\"text\":\"from: string\",\"slug\":\"from-string\"},{\"text\":\"exact: bool\",\"slug\":\"exact-bool\"},{\"text\":\"strict: bool\",\"slug\":\"strict-bool\"},{\"text\":\"sensitive: bool\",\"slug\":\"sensitive-bool\"}],\"title\":{\"text\":\"<Redirect>\",\"slug\":\"Redirect\"}}","module.exports = {\"markup\":\"<h1 id=\\\"Route\\\"><a href=\\\"/web/api/Route\\\" class=\\\"internal-link\\\">&lt;Route&gt;</a></h1>\\n<p>The Route component is perhaps the most important component in React Router to understand and learn to use well. Its most basic responsibility is to render some UI when its <code>path</code> matches the current URL.</p>\\n<p>Consider the following code:</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">import</span> React <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> ReactDOM <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react-dom&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> BrowserRouter <span class=\\\"token keyword\\\">as</span> Router<span class=\\\"token punctuation\\\">,</span> Route <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react-router-dom&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n\\nReactDOM<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Router</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token attr-name\\\">exact</span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Home</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Route</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/news<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">NewsFeed</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Route</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Router</span></span><span class=\\\"token punctuation\\\">&gt;</span></span><span class=\\\"token punctuation\\\">,</span>\\n  node\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n<p>If the location of the app is <code>/</code> then the UI hierarchy will be something like:</p>\\n<pre><code class=\\\"language-html\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Home</span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n  <span class=\\\"token comment\\\">&lt;!-- react-empty: 2 --&gt;</span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n</code></pre>\\n<p>And if the location of the app is <code>/news</code> then the UI hierarchy will be:</p>\\n<pre><code class=\\\"language-html\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token comment\\\">&lt;!-- react-empty: 1 --&gt;</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>NewsFeed</span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n</code></pre>\\n<p>The &#x201C;react-empty&#x201D; comments are just implementation details of React&#x2019;s <code>null</code> rendering. But for our purposes, it is instructive. A Route is always technically &#x201C;rendered&#x201D; even though it&#x2019;s rendering <code>null</code>. When the <code>&lt;Route&gt;</code>&apos;s <code>path</code> matches the current URL, it renders its <code>children</code> (your component).</p>\\n<p>If the same component is used as the child of multiple <code>&lt;Route&gt;</code>s at the same point in the component tree, React will see this as the same component instance and the component&#x2019;s state will be preserved between route changes. If this isn&#x2019;t desired, a unique <code>key</code> prop added to each route component will cause React to recreate the component instance when the route changes.</p>\\n<h2 id=\\\"Route-route-render-methods\\\"><a href=\\\"/web/api/Route/route-render-methods\\\" class=\\\"internal-link\\\">Route render methods</a></h2>\\n<p>The recommended method of rendering something with a <code>&lt;Route&gt;</code> is to use <code>children</code> elements, as shown above. There are, however, a few other methods you can use to render something with a <code>&lt;Route&gt;</code>. These are provided mostly for supporting apps that were built with earlier versions of the router before hooks were introduced.</p>\\n<ul>\\n<li><a href=\\\"/web/api/Route/component\\\" class=\\\"internal-link\\\"><code>&lt;Route component&gt;</code></a></li>\\n<li><a href=\\\"/web/api/Route/render-func\\\" class=\\\"internal-link\\\"><code>&lt;Route render&gt;</code></a></li>\\n<li><a href=\\\"/web/api/Route/children-func\\\" class=\\\"internal-link\\\"><code>&lt;Route children&gt;</code> function</a></li>\\n</ul>\\n<p>You should use only one of these props on a given <code>&lt;Route&gt;</code>. See their explanations below to understand the differences between them.</p>\\n<h2 id=\\\"Route-route-props\\\"><a href=\\\"/web/api/Route/route-props\\\" class=\\\"internal-link\\\">Route props</a></h2>\\n<p>All three <a href=\\\"/web/api/Route/route-render-methods\\\" class=\\\"internal-link\\\">render methods</a> will be passed the same three route props</p>\\n<ul>\\n<li><a href=\\\"/web/api/match\\\" class=\\\"internal-link\\\">match</a></li>\\n<li><a href=\\\"/web/api/location\\\" class=\\\"internal-link\\\">location</a></li>\\n<li><a href=\\\"/web/api/history\\\" class=\\\"internal-link\\\">history</a></li>\\n</ul>\\n<h2 id=\\\"Route-component\\\"><a href=\\\"/web/api/Route/component\\\" class=\\\"internal-link\\\">component</a></h2>\\n<p>A React component to render only when the location matches. It will be\\nrendered with <a href=\\\"/web/api/Route/route-props\\\" class=\\\"internal-link\\\">route props</a>.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">import</span> React <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> ReactDOM <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react-dom&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> BrowserRouter <span class=\\\"token keyword\\\">as</span> Router<span class=\\\"token punctuation\\\">,</span> Route <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react-router-dom&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// All route props (match, location and history) are available to User</span>\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">User</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">props</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>h1</span><span class=\\\"token punctuation\\\">&gt;</span></span>Hello <span class=\\\"token punctuation\\\">{</span>props<span class=\\\"token punctuation\\\">.</span>match<span class=\\\"token punctuation\\\">.</span>params<span class=\\\"token punctuation\\\">.</span>username<span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">!</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>h1</span><span class=\\\"token punctuation\\\">&gt;</span></span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\nReactDOM<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Router</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/user/:username<span class=\\\"token punctuation\\\">&quot;</span></span> <span class=\\\"token attr-name\\\">component</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>User<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Router</span></span><span class=\\\"token punctuation\\\">&gt;</span></span><span class=\\\"token punctuation\\\">,</span>\\n  node\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n<p>When you use <code>component</code> (instead of <code>render</code> or <code>children</code>, below) the router uses <a href=\\\"https://facebook.github.io/react/docs/react-api.html#createelement\\\"><code>React.createElement</code></a> to create a new <a href=\\\"https://facebook.github.io/react/docs/rendering-elements.html\\\">React element</a> from the given component. That means if you provide an inline function to the <code>component</code> prop, you would create a new component every render. This results in the existing component unmounting and the new component mounting instead of just updating the existing component. When using an inline function for inline rendering, use the <code>render</code> or the <code>children</code> prop (below).</p>\\n<h2 id=\\\"Route-render-func\\\"><a href=\\\"/web/api/Route/render-func\\\" class=\\\"internal-link\\\">render: func</a></h2>\\n<p>This allows for convenient inline rendering and wrapping without the undesired remounting explained above.</p>\\n<p>Instead of having a new <a href=\\\"https://facebook.github.io/react/docs/rendering-elements.html\\\">React element</a> created for you using the <a href=\\\"/web/api/Route/component\\\" class=\\\"internal-link\\\"><code>component</code></a> prop, you can pass in a function to be called when the location matches. The <code>render</code> prop function has access to all the same <a href=\\\"/web/api/Route/route-props\\\" class=\\\"internal-link\\\">route props</a> (match, location and history) as the <code>component</code> render prop.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">import</span> React <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> ReactDOM <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react-dom&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> BrowserRouter <span class=\\\"token keyword\\\">as</span> Router<span class=\\\"token punctuation\\\">,</span> Route <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react-router-dom&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// convenient inline rendering</span>\\nReactDOM<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Router</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/home<span class=\\\"token punctuation\\\">&quot;</span></span> <span class=\\\"token attr-name\\\">render</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span>Home<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span><span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Router</span></span><span class=\\\"token punctuation\\\">&gt;</span></span><span class=\\\"token punctuation\\\">,</span>\\n  node\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// wrapping/composing</span>\\n<span class=\\\"token comment\\\">// You can spread routeProps to make them available to your rendered Component</span>\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">FadingRoute</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\"><span class=\\\"token punctuation\\\">{</span> component<span class=\\\"token punctuation\\\">:</span> Component<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token operator\\\">...</span>rest <span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span>\\n      <span class=\\\"token spread\\\"><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">...</span><span class=\\\"token attr-value\\\">rest</span><span class=\\\"token punctuation\\\">}</span></span>\\n      <span class=\\\"token attr-name\\\">render</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token parameter\\\">routeProps</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">(</span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">FadeIn</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n          <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Component</span></span> <span class=\\\"token spread\\\"><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">...</span><span class=\\\"token attr-value\\\">routeProps</span><span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">FadeIn</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span></span>\\n    <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\nReactDOM<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Router</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">FadingRoute</span></span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/cool<span class=\\\"token punctuation\\\">&quot;</span></span> <span class=\\\"token attr-name\\\">component</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>Something<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Router</span></span><span class=\\\"token punctuation\\\">&gt;</span></span><span class=\\\"token punctuation\\\">,</span>\\n  node\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n<p><strong>Warning:</strong> <code>&lt;Route component&gt;</code> takes precedence over <code>&lt;Route render&gt;</code> so don&#x2019;t use both in the same <code>&lt;Route&gt;</code>.</p>\\n<h2 id=\\\"Route-children-func\\\"><a href=\\\"/web/api/Route/children-func\\\" class=\\\"internal-link\\\">children: func</a></h2>\\n<p>Sometimes you need to render whether the path matches the location or not. In these cases, you can use the function <code>children</code> prop. It works exactly like <code>render</code> except that it gets called whether there is a match or not.</p>\\n<p>The <code>children</code> render prop receives all the same <a href=\\\"/web/api/Route/route-props\\\" class=\\\"internal-link\\\">route props</a> as the <code>component</code> and <code>render</code> methods, except when a route fails to match the URL, then <code>match</code> is <code>null</code>. This allows you to dynamically adjust your UI based on whether or not the route matches. Here we&#x2019;re adding an <code>active</code> class if the route matches</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">import</span> React <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> ReactDOM <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react-dom&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span>\\n  BrowserRouter <span class=\\\"token keyword\\\">as</span> Router<span class=\\\"token punctuation\\\">,</span>\\n  Link<span class=\\\"token punctuation\\\">,</span>\\n  Route\\n<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react-router-dom&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">ListItemLink</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\"><span class=\\\"token punctuation\\\">{</span> to<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token operator\\\">...</span>rest <span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span>\\n      <span class=\\\"token attr-name\\\">path</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>to<span class=\\\"token punctuation\\\">}</span></span>\\n      <span class=\\\"token attr-name\\\">children</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\"><span class=\\\"token punctuation\\\">{</span> match <span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">(</span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>li</span> <span class=\\\"token attr-name\\\">className</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>match <span class=\\\"token operator\\\">?</span> <span class=\\\"token string\\\">&quot;active&quot;</span> <span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">&quot;&quot;</span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n          <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Link</span></span> <span class=\\\"token attr-name\\\">to</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>to<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token spread\\\"><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">...</span><span class=\\\"token attr-value\\\">rest</span><span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>li</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span></span>\\n    <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\nReactDOM<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Router</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>ul</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">ListItemLink</span></span> <span class=\\\"token attr-name\\\">to</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/somewhere<span class=\\\"token punctuation\\\">&quot;</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">ListItemLink</span></span> <span class=\\\"token attr-name\\\">to</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/somewhere-else<span class=\\\"token punctuation\\\">&quot;</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>ul</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Router</span></span><span class=\\\"token punctuation\\\">&gt;</span></span><span class=\\\"token punctuation\\\">,</span>\\n  node\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n<p>This could also be useful for animations:</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span>\\n  <span class=\\\"token attr-name\\\">children</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\"><span class=\\\"token punctuation\\\">{</span> match<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token operator\\\">...</span>rest <span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token punctuation\\\">{</span><span class=\\\"token comment\\\">/* Animate will always render, so you can use lifecycles\\n        to animate its child in and out */</span><span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Animate</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token punctuation\\\">{</span>match <span class=\\\"token operator\\\">&amp;&amp;</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Something</span></span> <span class=\\\"token spread\\\"><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">...</span><span class=\\\"token attr-value\\\">rest</span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">/&gt;</span></span><span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Animate</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span></span>\\n<span class=\\\"token punctuation\\\">/&gt;</span></span>\\n</code></pre>\\n<p><strong>Warning:</strong> <code>&lt;Route children&gt;</code> takes precedence over both <code>&lt;Route component&gt;</code> and <code>&lt;Route render&gt;</code> so don&#x2019;t use more than one in the same <code>&lt;Route&gt;</code>.</p>\\n<h2 id=\\\"Route-path-string-string\\\"><a href=\\\"/web/api/Route/path-string-string\\\" class=\\\"internal-link\\\">path: string | string[]</a></h2>\\n<p>Any valid URL path or array of paths that <a href=\\\"https://github.com/pillarjs/path-to-regexp/tree/v1.7.0\\\"><code>path-to-regexp@^1.7.0</code></a> understands.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/users/:id<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">User</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Route</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n</code></pre>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">&quot;/users/:id&quot;</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">&quot;/profile/:id&quot;</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">User</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Route</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n</code></pre>\\n<p>Routes without a <code>path</code> <em>always</em> match.</p>\\n<h2 id=\\\"Route-exact-bool\\\"><a href=\\\"/web/api/Route/exact-bool\\\" class=\\\"internal-link\\\">exact: bool</a></h2>\\n<p>When <code>true</code>, will only match if the path matches the <code>location.pathname</code> <em>exactly</em>.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token attr-name\\\">exact</span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/one<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">About</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Route</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n</code></pre>\\n<table>\\n<thead>\\n<tr>\\n<th>path</th>\\n<th>location.pathname</th>\\n<th>exact</th>\\n<th>matches?</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><code>/one</code></td>\\n<td><code>/one/two</code></td>\\n<td><code>true</code></td>\\n<td>no</td>\\n</tr>\\n<tr>\\n<td><code>/one</code></td>\\n<td><code>/one/two</code></td>\\n<td><code>false</code></td>\\n<td>yes</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"Route-strict-bool\\\"><a href=\\\"/web/api/Route/strict-bool\\\" class=\\\"internal-link\\\">strict: bool</a></h2>\\n<p>When <code>true</code>, a <code>path</code> that has a trailing slash will only match a <code>location.pathname</code> with a trailing slash. This has no effect when there are additional URL segments in the <code>location.pathname</code>.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token attr-name\\\">strict</span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/one/<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">About</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Route</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n</code></pre>\\n<table>\\n<thead>\\n<tr>\\n<th>path</th>\\n<th>location.pathname</th>\\n<th>matches?</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><code>/one/</code></td>\\n<td><code>/one</code></td>\\n<td>no</td>\\n</tr>\\n<tr>\\n<td><code>/one/</code></td>\\n<td><code>/one/</code></td>\\n<td>yes</td>\\n</tr>\\n<tr>\\n<td><code>/one/</code></td>\\n<td><code>/one/two</code></td>\\n<td>yes</td>\\n</tr>\\n</tbody>\\n</table>\\n<p><strong>Warning:</strong> <code>strict</code> can be used to enforce that a <code>location.pathname</code> has no trailing slash, but in order to do this both <code>strict</code> and <code>exact</code> must be <code>true</code>.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token attr-name\\\">exact</span> <span class=\\\"token attr-name\\\">strict</span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/one<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">About</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Route</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n</code></pre>\\n<table>\\n<thead>\\n<tr>\\n<th>path</th>\\n<th>location.pathname</th>\\n<th>matches?</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><code>/one</code></td>\\n<td><code>/one</code></td>\\n<td>yes</td>\\n</tr>\\n<tr>\\n<td><code>/one</code></td>\\n<td><code>/one/</code></td>\\n<td>no</td>\\n</tr>\\n<tr>\\n<td><code>/one</code></td>\\n<td><code>/one/two</code></td>\\n<td>no</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"Route-location-object\\\"><a href=\\\"/web/api/Route/location-object\\\" class=\\\"internal-link\\\">location: object</a></h2>\\n<p>A <code>&lt;Route&gt;</code> element tries to match its <code>path</code> to the current history location (usually the current browser URL).\\nHowever, a <a href=\\\"/web/api/location\\\" class=\\\"internal-link\\\"><code>location</code></a> with a different <code>pathname</code> can also be passed for matching.</p>\\n<p>This is useful in cases when you need to match a <code>&lt;Route&gt;</code> to a location other than the current history location, as shown in the <a href=\\\"https://reactrouter.com/web/example/animated-transitions\\\">Animated Transitions</a> example.</p>\\n<p>If a <code>&lt;Route&gt;</code> element is wrapped in a <code>&lt;Switch&gt;</code> and matches the location passed to the <code>&lt;Switch&gt;</code> (or the current history location), then the <code>location</code> prop passed to <code>&lt;Route&gt;</code> will be overridden by the one used by the <code>&lt;Switch&gt;</code> (given <a href=\\\"https://github.com/remix-run/react-router/blob/main/packages/react-router/modules/Switch.js#L51\\\">here</a>).</p>\\n<h2 id=\\\"Route-sensitive-bool\\\"><a href=\\\"/web/api/Route/sensitive-bool\\\" class=\\\"internal-link\\\">sensitive: bool</a></h2>\\n<p>When <code>true</code>, will match if the path is <strong>case sensitive</strong>.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token attr-name\\\">sensitive</span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/one<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">About</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Route</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n</code></pre>\\n<table>\\n<thead>\\n<tr>\\n<th>path</th>\\n<th>location.pathname</th>\\n<th>sensitive</th>\\n<th>matches?</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><code>/one</code></td>\\n<td><code>/one</code></td>\\n<td><code>true</code></td>\\n<td>yes</td>\\n</tr>\\n<tr>\\n<td><code>/One</code></td>\\n<td><code>/one</code></td>\\n<td><code>true</code></td>\\n<td>no</td>\\n</tr>\\n<tr>\\n<td><code>/One</code></td>\\n<td><code>/one</code></td>\\n<td><code>false</code></td>\\n<td>yes</td>\\n</tr>\\n</tbody>\\n</table>\\n\",\"headers\":[{\"text\":\"Route render methods\",\"slug\":\"route-render-methods\"},{\"text\":\"Route props\",\"slug\":\"route-props\"},{\"text\":\"component\",\"slug\":\"component\"},{\"text\":\"render: func\",\"slug\":\"render-func\"},{\"text\":\"children: func\",\"slug\":\"children-func\"},{\"text\":\"path: string | string[]\",\"slug\":\"path-string-string\"},{\"text\":\"exact: bool\",\"slug\":\"exact-bool\"},{\"text\":\"strict: bool\",\"slug\":\"strict-bool\"},{\"text\":\"location: object\",\"slug\":\"location-object\"},{\"text\":\"sensitive: bool\",\"slug\":\"sensitive-bool\"}],\"title\":{\"text\":\"<Route>\",\"slug\":\"Route\"}}","module.exports = {\"markup\":\"<h1 id=\\\"Router\\\"><a href=\\\"/web/api/Router\\\" class=\\\"internal-link\\\">&lt;Router&gt;</a></h1>\\n<p>The common low-level interface for all router components. Typically apps will use one of the high-level routers instead:</p>\\n<ul>\\n<li><a href=\\\"/web/api/BrowserRouter\\\" class=\\\"internal-link\\\"><code>&lt;BrowserRouter&gt;</code></a></li>\\n<li><a href=\\\"/web/api/HashRouter\\\" class=\\\"internal-link\\\"><code>&lt;HashRouter&gt;</code></a></li>\\n<li><a href=\\\"/web/api/MemoryRouter\\\" class=\\\"internal-link\\\"><code>&lt;MemoryRouter&gt;</code></a></li>\\n<li><a href=\\\"/native/api/NativeRouter\\\" class=\\\"internal-link\\\"><code>&lt;NativeRouter&gt;</code></a></li>\\n<li><a href=\\\"/web/api/StaticRouter\\\" class=\\\"internal-link\\\"><code>&lt;StaticRouter&gt;</code></a></li>\\n</ul>\\n<p>The most common use-case for using the low-level <code>&lt;Router&gt;</code> is to\\nsynchronize a custom history with a state management lib like Redux or Mobx. Note that this is not required to use state management libs alongside React Router, it&#x2019;s only for deep integration.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">import</span> React <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> ReactDOM <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react-dom&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> Router <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react-router&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> createBrowserHistory <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;history&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> history <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">createBrowserHistory</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\nReactDOM<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Router</span></span> <span class=\\\"token attr-name\\\">history</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>history<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">App</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Router</span></span><span class=\\\"token punctuation\\\">&gt;</span></span><span class=\\\"token punctuation\\\">,</span>\\n  node\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n<h2 id=\\\"Router-history-object\\\"><a href=\\\"/web/api/Router/history-object\\\" class=\\\"internal-link\\\">history: object</a></h2>\\n<p>A <a href=\\\"https://github.com/remix-run/history\\\"><code>history</code></a> object to use for navigation.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">import</span> React <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> ReactDOM <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react-dom&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> createBrowserHistory <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;history&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> customHistory <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">createBrowserHistory</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\nReactDOM<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Router</span></span> <span class=\\\"token attr-name\\\">history</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>customHistory<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span><span class=\\\"token punctuation\\\">,</span> node<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n<h2 id=\\\"Router-children-node\\\"><a href=\\\"/web/api/Router/children-node\\\" class=\\\"internal-link\\\">children: node</a></h2>\\n<p>A child element to render.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Router</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">App</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Router</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n</code></pre>\\n\",\"headers\":[{\"text\":\"history: object\",\"slug\":\"history-object\"},{\"text\":\"children: node\",\"slug\":\"children-node\"}],\"title\":{\"text\":\"<Router>\",\"slug\":\"Router\"}}","module.exports = {\"markup\":\"<h1 id=\\\"StaticRouter\\\"><a href=\\\"/web/api/StaticRouter\\\" class=\\\"internal-link\\\">&lt;StaticRouter&gt;</a></h1>\\n<p>A <a href=\\\"Router.md\\\"><code>&lt;Router&gt;</code></a> that never changes location.</p>\\n<p>This can be useful in server-side rendering scenarios when the user isn&#x2019;t actually clicking around, so the location never actually changes. Hence, the name: static. It&#x2019;s also useful in simple tests when you just need to plug in a location and make assertions on the render output.</p>\\n<p>Here&#x2019;s an example node server that sends a 302 status code for <a href=\\\"Redirect.md\\\"><code>&lt;Redirect&gt;</code></a>s and regular HTML for other requests:</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">import</span> http <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;http&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> React <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> ReactDOMServer <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react-dom/server&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> StaticRouter <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react-router&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n\\nhttp\\n  <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">createServer</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">req<span class=\\\"token punctuation\\\">,</span> res</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">// This context object contains the results of the render</span>\\n    <span class=\\\"token keyword\\\">const</span> context <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token keyword\\\">const</span> html <span class=\\\"token operator\\\">=</span> ReactDOMServer<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">renderToString</span><span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">StaticRouter</span></span> <span class=\\\"token attr-name\\\">location</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>req<span class=\\\"token punctuation\\\">.</span>url<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token attr-name\\\">context</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>context<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">App</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">StaticRouter</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token comment\\\">// context.url will contain the URL to redirect to if a &lt;Redirect&gt; was used</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>context<span class=\\\"token punctuation\\\">.</span>url<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      res<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">writeHead</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">302</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>\\n        Location<span class=\\\"token punctuation\\\">:</span> context<span class=\\\"token punctuation\\\">.</span>url\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      res<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">end</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n      res<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">write</span><span class=\\\"token punctuation\\\">(</span>html<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      res<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">end</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">listen</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">3000</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n<h2 id=\\\"StaticRouter-basename-string\\\"><a href=\\\"/web/api/StaticRouter/basename-string\\\" class=\\\"internal-link\\\">basename: string</a></h2>\\n<p>The base URL for all locations. A properly formatted basename should have a leading slash, but no trailing slash.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">StaticRouter</span></span> <span class=\\\"token attr-name\\\">basename</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/calendar<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Link</span></span> <span class=\\\"token attr-name\\\">to</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/today<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">/&gt;</span></span> <span class=\\\"token comment\\\">// renders &lt;a href=&quot;/calendar/today&quot;&gt;</span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">StaticRouter</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n</code></pre>\\n<h2 id=\\\"StaticRouter-location-string\\\"><a href=\\\"/web/api/StaticRouter/location-string\\\" class=\\\"internal-link\\\">location: string</a></h2>\\n<p>The URL the server received, probably <code>req.url</code> on a node server.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">StaticRouter</span></span> <span class=\\\"token attr-name\\\">location</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>req<span class=\\\"token punctuation\\\">.</span>url<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">App</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">StaticRouter</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n</code></pre>\\n<h2 id=\\\"StaticRouter-location-object\\\"><a href=\\\"/web/api/StaticRouter/location-object\\\" class=\\\"internal-link\\\">location: object</a></h2>\\n<p>A location object shaped like <code>{ pathname, search, hash, state }</code></p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">StaticRouter</span></span> <span class=\\\"token attr-name\\\">location</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">{</span> pathname<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">&quot;/bubblegum&quot;</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">App</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">StaticRouter</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n</code></pre>\\n<h2 id=\\\"StaticRouter-context-object\\\"><a href=\\\"/web/api/StaticRouter/context-object\\\" class=\\\"internal-link\\\">context: object</a></h2>\\n<p>A plain JavaScript object. During the render, components can add properties to the object to store information about the render.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">const</span> context <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">StaticRouter</span></span> <span class=\\\"token attr-name\\\">context</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>context<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">App</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">StaticRouter</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n</code></pre>\\n<p>When a <code>&lt;Route&gt;</code> matches, it will pass the context object to the component it renders as the <code>staticContext</code> prop. Check out the <a href=\\\"/web/guides/server-rendering\\\" class=\\\"internal-link\\\">Server Rendering guide</a> for more information on how to do this yourself.</p>\\n<p>After the render, these properties can be used to to configure the server&#x2019;s response.</p>\\n<pre><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>context<span class=\\\"token punctuation\\\">.</span>status <span class=\\\"token operator\\\">===</span> <span class=\\\"token string\\\">&quot;404&quot;</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">// ...</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n<h2 id=\\\"StaticRouter-children-node\\\"><a href=\\\"/web/api/StaticRouter/children-node\\\" class=\\\"internal-link\\\">children: node</a></h2>\\n<p>The child elements to render.</p>\\n<p>Note: On React &lt; 16 you must use a <a href=\\\"https://facebook.github.io/react/docs/react-api.html#reactchildrenonly\\\">single child element</a> since a render method cannot return more than one element. If you need more than one element, you might try wrapping them in an extra <code>&lt;div&gt;</code> or <code>&lt;React.Fragment&gt;</code>.</p>\\n\",\"headers\":[{\"text\":\"basename: string\",\"slug\":\"basename-string\"},{\"text\":\"location: string\",\"slug\":\"location-string\"},{\"text\":\"location: object\",\"slug\":\"location-object\"},{\"text\":\"context: object\",\"slug\":\"context-object\"},{\"text\":\"children: node\",\"slug\":\"children-node\"}],\"title\":{\"text\":\"<StaticRouter>\",\"slug\":\"StaticRouter\"}}","module.exports = {\"markup\":\"<h1 id=\\\"Switch\\\"><a href=\\\"/web/api/Switch\\\" class=\\\"internal-link\\\">&lt;Switch&gt;</a></h1>\\n<p>Renders the first child <a href=\\\"Route.md\\\"><code>&lt;Route&gt;</code></a> or <a href=\\\"Redirect.md\\\"><code>&lt;Redirect&gt;</code></a> that matches the location.</p>\\n<p><strong>How is this different than just using a bunch of <code>&lt;Route&gt;</code>s?</strong></p>\\n<p><code>&lt;Switch&gt;</code> is unique in that it renders a route <em>exclusively</em>. In contrast, every <code>&lt;Route&gt;</code> that matches the location renders <em>inclusively</em>. Consider these routes:</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> Route <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react-router&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">let</span> routes <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/about<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">About</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Route</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/:user<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">User</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Route</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">NoMatch</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Route</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n<p>If the URL is <code>/about</code>, then <code>&lt;About&gt;</code>, <code>&lt;User&gt;</code>, and <code>&lt;NoMatch&gt;</code> will all render because they all match the path. This is by design, allowing us to compose <code>&lt;Route&gt;</code>s into our apps in many ways, like sidebars and breadcrumbs, bootstrap tabs, etc.</p>\\n<p>Occasionally, however, we want to pick only one <code>&lt;Route&gt;</code> to render. If we&#x2019;re at <code>/about</code> we don&#x2019;t want to also match <code>/:user</code> (or show our &#x201C;404&#x201D; page). Here&#x2019;s how to do it with <code>Switch</code>:</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> Route<span class=\\\"token punctuation\\\">,</span> Switch <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react-router&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">let</span> routes <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Switch</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token attr-name\\\">exact</span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Home</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Route</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/about<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">About</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Route</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/:user<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">User</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Route</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">NoMatch</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Route</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Switch</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n<p>Now, if we&#x2019;re at <code>/about</code>, <code>&lt;Switch&gt;</code> will start looking for a matching <code>&lt;Route&gt;</code>. <code>&lt;Route path=&quot;/about&quot;/&gt;</code> will match and <code>&lt;Switch&gt;</code> will stop looking for matches and render <code>&lt;About&gt;</code>. Similarly, if we&#x2019;re at <code>/michael</code> then <code>&lt;User&gt;</code> will render.</p>\\n<p>This is also useful for animated transitions since the matched <code>&lt;Route&gt;</code> is rendered in the same position as the previous one.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">let</span> routes <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Fade</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Switch</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token punctuation\\\">{</span><span class=\\\"token comment\\\">/* there will only ever be one child here */</span><span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Switch</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Fade</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">let</span> routes <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Fade</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token punctuation\\\">{</span><span class=\\\"token comment\\\">/* there will always be two children here,\\n        one might render null though, making transitions\\n        a bit more cumbersome to work out */</span><span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Fade</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n<h2 id=\\\"Switch-location-object\\\"><a href=\\\"/web/api/Switch/location-object\\\" class=\\\"internal-link\\\">location: object</a></h2>\\n<p>A <a href=\\\"/web/api/location\\\" class=\\\"internal-link\\\"><code>location</code></a> object to be used for matching children elements instead of the current history location (usually the current browser URL).</p>\\n<h2 id=\\\"Switch-children-node\\\"><a href=\\\"/web/api/Switch/children-node\\\" class=\\\"internal-link\\\">children: node</a></h2>\\n<p>All children of a <code>&lt;Switch&gt;</code> should be <code>&lt;Route&gt;</code> or <code>&lt;Redirect&gt;</code> elements. Only the first child to match the current location will be rendered.</p>\\n<p><code>&lt;Route&gt;</code> elements are matched using their <code>path</code> prop and <code>&lt;Redirect&gt;</code> elements are matched using their <code>from</code> prop. A <code>&lt;Route&gt;</code> with no <code>path</code> prop or a <code>&lt;Redirect&gt;</code> with no <code>from</code> prop will always match the current location.</p>\\n<p>When you include a <code>&lt;Redirect&gt;</code> in a <code>&lt;Switch&gt;</code>, it can use any of the <code>&lt;Route&gt;</code>&apos;s location matching props: <code>path</code>, <code>exact</code>, and <code>strict</code>. <code>from</code> is just an alias for the <code>path</code> prop.</p>\\n<p>If a <code>location</code> prop is given to the <code>&lt;Switch&gt;</code>, it will override the <code>location</code> prop on the matching child element.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> Redirect<span class=\\\"token punctuation\\\">,</span> Route<span class=\\\"token punctuation\\\">,</span> Switch <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react-router&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">let</span> routes <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Switch</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token attr-name\\\">exact</span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Home</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Route</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/users<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Users</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Route</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Redirect</span></span> <span class=\\\"token attr-name\\\">from</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/accounts<span class=\\\"token punctuation\\\">&quot;</span></span> <span class=\\\"token attr-name\\\">to</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/users<span class=\\\"token punctuation\\\">&quot;</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">NoMatch</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Route</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Switch</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n\",\"headers\":[{\"text\":\"location: object\",\"slug\":\"location-object\"},{\"text\":\"children: node\",\"slug\":\"children-node\"}],\"title\":{\"text\":\"<Switch>\",\"slug\":\"Switch\"}}","module.exports = {\"markup\":\"<h1 id=\\\"generatePath\\\"><a href=\\\"/web/api/generatePath\\\" class=\\\"internal-link\\\">generatePath</a></h1>\\n<p>The <code>generatePath</code> function can be used to generate URLs to the routes. Internally the <code>path-to-regexp</code> library is used.</p>\\n<pre><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> generatePath <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react-router&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">generatePath</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;/user/:id/:entity(posts|comments)&quot;</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>\\n  id<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span>\\n  entity<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">&quot;posts&quot;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// Will return /user/1/posts</span>\\n</code></pre>\\n<p>Results of compiling paths into regular expressions are cached, so there is no overhead on generating multiple paths with the same pattern.</p>\\n<h2 id=\\\"generatePath-pattern-string\\\"><a href=\\\"/web/api/generatePath/pattern-string\\\" class=\\\"internal-link\\\">pattern: string</a></h2>\\n<p><code>generatePath</code> takes 2 arguments. The first one is a pattern provided as a path attribute to the <code>Route</code> component.</p>\\n<h2 id=\\\"generatePath-params-object\\\"><a href=\\\"/web/api/generatePath/params-object\\\" class=\\\"internal-link\\\">params: object</a></h2>\\n<p>The second argument is an object with corresponding params for the pattern to use.</p>\\n<p>If provided params and path don&#x2019;t match, an error will be thrown:</p>\\n<pre><code class=\\\"language-js\\\"><span class=\\\"token function\\\">generatePath</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;/user/:id/:entity(posts|comments)&quot;</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span> id<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">1</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// TypeError: Expected &quot;entity&quot; to be defined</span>\\n</code></pre>\\n\",\"headers\":[{\"text\":\"pattern: string\",\"slug\":\"pattern-string\"},{\"text\":\"params: object\",\"slug\":\"params-object\"}],\"title\":{\"text\":\"generatePath\",\"slug\":\"generatePath\"}}","module.exports = {\"markup\":\"<h1 id=\\\"history\\\"><a href=\\\"/web/api/history\\\" class=\\\"internal-link\\\">history</a></h1>\\n<p>The term &#x201C;history&#x201D; and &quot;<code>history</code> object&quot; in this documentation refers to <a href=\\\"%5Bhttps://github.com/remix-run/history%5D(https://github.com/remix-run/history/tree/v4)\\\">the <code>history</code> package</a>, which is one of only 2 major dependencies of React Router (besides React itself), and which provides several different implementations for managing session history in JavaScript in various environments.</p>\\n<p>The following terms are also used:</p>\\n<ul>\\n<li>&#x201C;browser history&#x201D; - A DOM-specific implementation, useful in web browsers that support the HTML5 history API</li>\\n<li>&#x201C;hash history&#x201D; - A DOM-specific implementation for legacy web browsers</li>\\n<li>&#x201C;memory history&#x201D; - An in-memory history implementation, useful in testing and non-DOM environments like React Native</li>\\n</ul>\\n<p><code>history</code> objects typically have the following properties and methods:</p>\\n<ul>\\n<li><code>length</code> - (number) The number of entries in the history stack</li>\\n<li><code>action</code> - (string) The current action (<code>PUSH</code>, <code>REPLACE</code>, or <code>POP</code>)</li>\\n<li><code>location</code> - (object) The current location. May have the following properties:\\n<ul>\\n<li><code>pathname</code> - (string) The path of the URL</li>\\n<li><code>search</code> - (string) The URL query string</li>\\n<li><code>hash</code> - (string) The URL hash fragment</li>\\n<li><code>state</code> - (object) location-specific state that was provided to e.g. <code>push(path, state)</code> when this location was pushed onto the stack. Only available in browser and memory history.</li>\\n</ul>\\n</li>\\n<li><code>push(path, [state])</code> - (function) Pushes a new entry onto the history stack</li>\\n<li><code>replace(path, [state])</code> - (function) Replaces the current entry on the history stack</li>\\n<li><code>go(n)</code> - (function) Moves the pointer in the history stack by <code>n</code> entries</li>\\n<li><code>goBack()</code> - (function) Equivalent to <code>go(-1)</code></li>\\n<li><code>goForward()</code> - (function) Equivalent to <code>go(1)</code></li>\\n<li><code>block(prompt)</code> - (function) Prevents navigation (see <a href=\\\"https://github.com/remix-run/history/blob/main/docs/blocking-transitions.md\\\">the history docs</a></li>\\n</ul>\\n<h2 id=\\\"history-history-is-mutable\\\"><a href=\\\"/web/api/history/history-is-mutable\\\" class=\\\"internal-link\\\">history is mutable</a></h2>\\n<p>The history object is mutable. Therefore it is recommended to access the <a href=\\\"/web/api/location\\\" class=\\\"internal-link\\\"><code>location</code></a> from the render props of <a href=\\\"/web/api/Route\\\" class=\\\"internal-link\\\"><code>&lt;Route&gt;</code></a>, not from <code>history.location</code>. This ensures your assumptions about React are correct in lifecycle hooks. For example:</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Comp</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">componentDidUpdate</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">prevProps</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">// will be true</span>\\n    <span class=\\\"token keyword\\\">const</span> locationChanged <span class=\\\"token operator\\\">=</span>\\n      <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">.</span>location <span class=\\\"token operator\\\">!==</span> prevProps<span class=\\\"token punctuation\\\">.</span>location<span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token comment\\\">// INCORRECT, will *always* be false because history is mutable.</span>\\n    <span class=\\\"token keyword\\\">const</span> locationChanged <span class=\\\"token operator\\\">=</span>\\n      <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">.</span>history<span class=\\\"token punctuation\\\">.</span>location <span class=\\\"token operator\\\">!==</span> prevProps<span class=\\\"token punctuation\\\">.</span>history<span class=\\\"token punctuation\\\">.</span>location<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token attr-name\\\">component</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>Comp<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n<p>Additional properties may also be present depending on the implementation you&#x2019;re using. Please refer to <a href=\\\"https://github.com/remix-run/history/tree/main/docs\\\">the history documentation</a> for more details.</p>\\n\",\"headers\":[{\"text\":\"history is mutable\",\"slug\":\"history-is-mutable\"}],\"title\":{\"text\":\"history\",\"slug\":\"history\"}}","module.exports = {\"markup\":\"<h1 id=\\\"location\\\"><a href=\\\"/web/api/location\\\" class=\\\"internal-link\\\">location</a></h1>\\n<p>Locations represent where the app is now, where you want it to go, or\\neven where it was. It looks like this:</p>\\n<pre><code class=\\\"language-js\\\"><span class=\\\"token punctuation\\\">{</span>\\n  key<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">&apos;ac3df4&apos;</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\">// not with HashHistory!</span>\\n  pathname<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">&apos;/somewhere&apos;</span><span class=\\\"token punctuation\\\">,</span>\\n  search<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">&apos;?some=search-string&apos;</span><span class=\\\"token punctuation\\\">,</span>\\n  hash<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">&apos;#howdy&apos;</span><span class=\\\"token punctuation\\\">,</span>\\n  state<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token punctuation\\\">[</span>userDefined<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n<p>The router will provide you with a location object in a few places:</p>\\n<ul>\\n<li><a href=\\\"/web/api/Route/component\\\" class=\\\"internal-link\\\">Route component</a> as <code>this.props.location</code></li>\\n<li><a href=\\\"/web/api/Route/render-func\\\" class=\\\"internal-link\\\">Route render</a> as <code>({ location }) =&gt; ()</code></li>\\n<li><a href=\\\"/web/api/Route/children-func\\\" class=\\\"internal-link\\\">Route children</a> as <code>({ location }) =&gt; ()</code></li>\\n<li><a href=\\\"/web/api/withRouter\\\" class=\\\"internal-link\\\">withRouter</a> as <code>this.props.location</code></li>\\n</ul>\\n<p>It is also found on <code>history.location</code> but you shouldn&#x2019;t use that because it&#x2019;s mutable. You can read more about that in the <a href=\\\"/web/api/history\\\" class=\\\"internal-link\\\">history</a> doc.</p>\\n<p>A location object is never mutated so you can use it in the lifecycle hooks to determine when navigation happens, this is really useful for data fetching and animation.</p>\\n<pre><code class=\\\"language-js\\\"><span class=\\\"token function\\\">componentWillReceiveProps</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">nextProps</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>nextProps<span class=\\\"token punctuation\\\">.</span>location <span class=\\\"token operator\\\">!==</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">.</span>location<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">// navigated!</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n<p>You can provide locations instead of strings to the various places that navigate:</p>\\n<ul>\\n<li>Web <a href=\\\"/web/api/Link/to\\\" class=\\\"internal-link\\\">Link to</a></li>\\n<li>Native <a href=\\\"/native/api/Link/to\\\" class=\\\"internal-link\\\">Link to</a></li>\\n<li><a href=\\\"/web/api/Redirect/to\\\" class=\\\"internal-link\\\">Redirect to</a></li>\\n<li><a href=\\\"/web/api/history/push\\\" class=\\\"internal-link\\\">history.push</a></li>\\n<li><a href=\\\"/web/api/history/push\\\" class=\\\"internal-link\\\">history.replace</a></li>\\n</ul>\\n<p>Normally you just use a string, but if you need to add some &#x201C;location state&#x201D; that will be available whenever the app returns to that specific location, you can use a location object instead. This is useful if you want to branch UI based on navigation history instead of just paths (like modals).</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token comment\\\">// usually all you need</span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Link</span></span> <span class=\\\"token attr-name\\\">to</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/somewhere<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">/&gt;</span></span>\\n\\n<span class=\\\"token comment\\\">// but you can use a location instead</span>\\n<span class=\\\"token keyword\\\">const</span> location <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  pathname<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">&apos;/somewhere&apos;</span><span class=\\\"token punctuation\\\">,</span>\\n  state<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span> fromDashboard<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span> <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Link</span></span> <span class=\\\"token attr-name\\\">to</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>location<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">/&gt;</span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Redirect</span></span> <span class=\\\"token attr-name\\\">to</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>location<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">/&gt;</span></span>\\nhistory<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">push</span><span class=\\\"token punctuation\\\">(</span>location<span class=\\\"token punctuation\\\">)</span>\\nhistory<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">replace</span><span class=\\\"token punctuation\\\">(</span>location<span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n<p>Finally, you can pass a location to the following components:</p>\\n<ul>\\n<li><a href=\\\"/web/api/Route/location\\\" class=\\\"internal-link\\\">Route</a></li>\\n<li><a href=\\\"/web/api/Switch/location\\\" class=\\\"internal-link\\\">Switch</a></li>\\n</ul>\\n<p>This will prevent them from using the actual location in the router&#x2019;s state. This is useful for animation and pending navigation, or any time you want to trick a component into rendering at a different location than the real one.</p>\\n\",\"headers\":[],\"title\":{\"text\":\"location\",\"slug\":\"location\"}}","module.exports = {\"markup\":\"<h1 id=\\\"match\\\"><a href=\\\"/web/api/match\\\" class=\\\"internal-link\\\">match</a></h1>\\n<p>A <code>match</code> object contains information about how a <code>&lt;Route path&gt;</code> matched the URL. <code>match</code> objects contain the following properties:</p>\\n<ul>\\n<li><code>params</code> - (object) Key/value pairs parsed from the URL corresponding to the dynamic segments of the path</li>\\n<li><code>isExact</code> - (boolean) <code>true</code> if the entire URL was matched (no trailing characters)</li>\\n<li><code>path</code> - (string) The path pattern used to match. Useful for building nested <code>&lt;Route&gt;</code>s</li>\\n<li><code>url</code> - (string) The matched portion of the URL. Useful for building nested <code>&lt;Link&gt;</code>s</li>\\n</ul>\\n<p>You&#x2019;ll have access to <code>match</code> objects in various places:</p>\\n<ul>\\n<li><a href=\\\"/web/api/Route/component\\\" class=\\\"internal-link\\\">Route component</a> as <code>this.props.match</code></li>\\n<li><a href=\\\"/web/api/Route/render-func\\\" class=\\\"internal-link\\\">Route render</a> as <code>({ match }) =&gt; ()</code></li>\\n<li><a href=\\\"/web/api/Route/children-func\\\" class=\\\"internal-link\\\">Route children</a> as <code>({ match }) =&gt; ()</code></li>\\n<li><a href=\\\"/web/api/withRouter\\\" class=\\\"internal-link\\\">withRouter</a> as <code>this.props.match</code></li>\\n<li><a href=\\\"/web/api/matchPath\\\" class=\\\"internal-link\\\">matchPath</a> as the return value</li>\\n<li><a href=\\\"/web/api/hooks/useroutematch\\\" class=\\\"internal-link\\\">useRouteMatch</a> as the return value</li>\\n</ul>\\n<p>If a Route does not have a <code>path</code>, and therefore always matches, you&#x2019;ll get the closest parent match. Same goes for <code>withRouter</code>.</p>\\n<h2 id=\\\"match-null-matches\\\"><a href=\\\"/web/api/match/null-matches\\\" class=\\\"internal-link\\\">null matches</a></h2>\\n<p>A <code>&lt;Route&gt;</code> that uses the <code>children</code> prop will call its <code>children</code> function even when the route&#x2019;s <code>path</code> does not match the current location. When this is the case, the <code>match</code> will be <code>null</code>. Being able to render a <code>&lt;Route&gt;</code>&apos;s contents when it does match can be useful, but certain challenges arise from this situation.</p>\\n<p>The default way to &#x201C;resolve&#x201D; URLs is to join the <code>match.url</code> string to the &#x201C;relative&#x201D; path.</p>\\n<pre><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">let</span> path <span class=\\\"token operator\\\">=</span> <span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>match<span class=\\\"token punctuation\\\">.</span>url<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">/relative-path</span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n<p>If you attempt to do this when the match is <code>null</code>, you will end up with a <code>TypeError</code>. This means that it is considered unsafe to attempt to join &#x201C;relative&#x201D; paths inside of a <code>&lt;Route&gt;</code> when using the <code>children</code> prop.</p>\\n<p>A similar, but more subtle situation occurs when you use a pathless <code>&lt;Route&gt;</code> inside of a <code>&lt;Route&gt;</code> that generates a <code>null</code> match object.</p>\\n<pre><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">// location.pathname = &apos;/matches&apos;</span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/does-not-match<span class=\\\"token punctuation\\\">&quot;</span></span>\\n  <span class=\\\"token attr-name\\\">children</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\"><span class=\\\"token punctuation\\\">{</span> match <span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token comment\\\">// match === null</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span>\\n      <span class=\\\"token attr-name\\\">render</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\"><span class=\\\"token punctuation\\\">{</span> match<span class=\\\"token punctuation\\\">:</span> pathlessMatch <span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">(</span>\\n        <span class=\\\"token comment\\\">// pathlessMatch === ???</span>\\n      <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span></span>\\n    <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span></span>\\n<span class=\\\"token punctuation\\\">/&gt;</span></span>\\n</code></pre>\\n<p>Pathless <code>&lt;Route&gt;</code>s inherit their <code>match</code> object from their parent. If their parent <code>match</code> is <code>null</code>, then their match will also be <code>null</code>. This means that a) any child routes/links will have to be absolute because there is no parent to resolve with and b) a pathless route whose parent <code>match</code> can be <code>null</code> will need to use the <code>children</code> prop to render.</p>\\n\",\"headers\":[{\"text\":\"null matches\",\"slug\":\"null-matches\"}],\"title\":{\"text\":\"match\",\"slug\":\"match\"}}","module.exports = {\"markup\":\"<h1 id=\\\"matchPath\\\"><a href=\\\"/web/api/matchPath\\\" class=\\\"internal-link\\\">matchPath</a></h1>\\n<p>This lets you use the same matching code that <code>&lt;Route&gt;</code> uses except outside of the normal render cycle, like gathering up data dependencies before rendering on the server.</p>\\n<pre><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> matchPath <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react-router&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> match <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">matchPath</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;/users/123&quot;</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>\\n  path<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">&quot;/users/:id&quot;</span><span class=\\\"token punctuation\\\">,</span>\\n  exact<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n  strict<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">false</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n<h2 id=\\\"matchPath-pathname\\\"><a href=\\\"/web/api/matchPath/pathname\\\" class=\\\"internal-link\\\">pathname</a></h2>\\n<p>The first argument is the pathname you want to match. If you&#x2019;re using\\nthis on the server with Node.js, it would be <code>req.path</code>.</p>\\n<h2 id=\\\"matchPath-props\\\"><a href=\\\"/web/api/matchPath/props\\\" class=\\\"internal-link\\\">props</a></h2>\\n<p>The second argument are the props to match against, they are identical\\nto the matching props <code>Route</code> accepts. It could also be a string or\\nan array of strings as shortcut for <code>{ path }</code>:</p>\\n<pre><code class=\\\"language-js\\\"><span class=\\\"token punctuation\\\">{</span>\\n  path<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\">// like /users/:id; either a single string or an array of strings</span>\\n  strict<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\">// optional, defaults to false</span>\\n  exact<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\">// optional, defaults to false</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n<h2 id=\\\"matchPath-returns\\\"><a href=\\\"/web/api/matchPath/returns\\\" class=\\\"internal-link\\\">returns</a></h2>\\n<p>It returns an object when provided pathname does match <code>path</code> prop.</p>\\n<pre><code class=\\\"language-js\\\"><span class=\\\"token function\\\">matchPath</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;/users/2&quot;</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>\\n  path<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">&quot;/users/:id&quot;</span><span class=\\\"token punctuation\\\">,</span>\\n  exact<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n  strict<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">//  {</span>\\n<span class=\\\"token comment\\\">//    isExact: true</span>\\n<span class=\\\"token comment\\\">//    params: {</span>\\n<span class=\\\"token comment\\\">//        id: &quot;2&quot;</span>\\n<span class=\\\"token comment\\\">//    }</span>\\n<span class=\\\"token comment\\\">//    path: &quot;/users/:id&quot;</span>\\n<span class=\\\"token comment\\\">//    url: &quot;/users/2&quot;</span>\\n<span class=\\\"token comment\\\">//  }</span>\\n</code></pre>\\n<p>It returns <code>null</code> when provided pathname does not match <code>path</code> prop.</p>\\n<pre><code class=\\\"language-js\\\"><span class=\\\"token function\\\">matchPath</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;/users&quot;</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>\\n  path<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">&quot;/users/:id&quot;</span><span class=\\\"token punctuation\\\">,</span>\\n  exact<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n  strict<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">//  null</span>\\n</code></pre>\\n\",\"headers\":[{\"text\":\"pathname\",\"slug\":\"pathname\"},{\"text\":\"props\",\"slug\":\"props\"},{\"text\":\"returns\",\"slug\":\"returns\"}],\"title\":{\"text\":\"matchPath\",\"slug\":\"matchPath\"}}","module.exports = {\"markup\":\"<h1 id=\\\"withRouter\\\"><a href=\\\"/web/api/withRouter\\\" class=\\\"internal-link\\\">withRouter</a></h1>\\n<p>You can get access to the <a href=\\\"/web/api/history\\\" class=\\\"internal-link\\\"><code>history</code></a> object&#x2019;s properties and the closest <a href=\\\"/web/api/Route\\\" class=\\\"internal-link\\\"><code>&lt;Route&gt;</code></a>&apos;s <a href=\\\"/web/api/match\\\" class=\\\"internal-link\\\"><code>match</code></a> via the <code>withRouter</code> higher-order component. <code>withRouter</code> will pass updated <code>match</code>, <code>location</code>, and <code>history</code> props to the wrapped component whenever it renders.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">import</span> React <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> PropTypes <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;prop-types&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> withRouter <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react-router&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// A simple component that shows the pathname of the current location</span>\\n<span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">ShowTheLocation</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">static</span> propTypes <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n    match<span class=\\\"token punctuation\\\">:</span> PropTypes<span class=\\\"token punctuation\\\">.</span>object<span class=\\\"token punctuation\\\">.</span>isRequired<span class=\\\"token punctuation\\\">,</span>\\n    location<span class=\\\"token punctuation\\\">:</span> PropTypes<span class=\\\"token punctuation\\\">.</span>object<span class=\\\"token punctuation\\\">.</span>isRequired<span class=\\\"token punctuation\\\">,</span>\\n    history<span class=\\\"token punctuation\\\">:</span> PropTypes<span class=\\\"token punctuation\\\">.</span>object<span class=\\\"token punctuation\\\">.</span>isRequired\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> match<span class=\\\"token punctuation\\\">,</span> location<span class=\\\"token punctuation\\\">,</span> history <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span>You are now at <span class=\\\"token punctuation\\\">{</span>location<span class=\\\"token punctuation\\\">.</span>pathname<span class=\\\"token punctuation\\\">}</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token comment\\\">// Create a new component that is &quot;connected&quot; (to borrow redux</span>\\n<span class=\\\"token comment\\\">// terminology) to the router.</span>\\n<span class=\\\"token keyword\\\">const</span> ShowTheLocationWithRouter <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">withRouter</span><span class=\\\"token punctuation\\\">(</span>ShowTheLocation<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n<h4>Important Note</h4>\\n<p><code>withRouter</code> does not subscribe to location changes like React Redux&#x2019;s <code>connect</code> does for state changes. Instead, re-renders after location changes propagate out from the <code>&lt;Router&gt;</code> component. This means that <code>withRouter</code> does <em>not</em> re-render on route transitions unless its parent component re-renders.</p>\\n<h4>Static Methods and Properties</h4>\\n<p>All non-react specific static methods and properties of the wrapped component are automatically copied to the\\n&quot;connected&quot; component.</p>\\n<h2 id=\\\"withRouter-componentwrappedcomponent\\\"><a href=\\\"/web/api/withRouter/componentwrappedcomponent\\\" class=\\\"internal-link\\\">Component.WrappedComponent</a></h2>\\n<p>The wrapped component is exposed as the static property <code>WrappedComponent</code> on the returned component, which can be used\\nfor testing the component in isolation, among other things.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token comment\\\">// MyComponent.js</span>\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token function\\\">withRouter</span><span class=\\\"token punctuation\\\">(</span>MyComponent<span class=\\\"token punctuation\\\">)</span>\\n\\n<span class=\\\"token comment\\\">// MyComponent.test.js</span>\\n<span class=\\\"token keyword\\\">import</span> MyComponent <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&apos;./MyComponent&apos;</span>\\n<span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">MyComponent.WrappedComponent</span></span> <span class=\\\"token attr-name\\\">location</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token operator\\\">...</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token attr-name\\\">...</span> <span class=\\\"token punctuation\\\">/&gt;</span></span><span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n<h2 id=\\\"withRouter-wrappedcomponentref-func\\\"><a href=\\\"/web/api/withRouter/wrappedcomponentref-func\\\" class=\\\"internal-link\\\">wrappedComponentRef: func</a></h2>\\n<p>A function that will be passed as the <code>ref</code> prop to the wrapped component.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Container</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">componentDidMount</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>component<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">doSomething</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">MyComponent</span></span> <span class=\\\"token attr-name\\\">wrappedComponentRef</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token parameter\\\">c</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>component <span class=\\\"token operator\\\">=</span> c<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n\",\"headers\":[{\"text\":\"Component.WrappedComponent\",\"slug\":\"componentwrappedcomponent\"},{\"text\":\"wrappedComponentRef: func\",\"slug\":\"wrappedcomponentref-func\"}],\"title\":{\"text\":\"withRouter\",\"slug\":\"withRouter\"}}","module.exports = \"import React from \\\"react\\\";\\nimport {\\n  BrowserRouter as Router,\\n  Switch,\\n  Route,\\n  Link\\n} from \\\"react-router-dom\\\";\\n\\n// This site has 3 pages, all of which are rendered\\n// dynamically in the browser (not server rendered).\\n//\\n// Although the page does not ever refresh, notice how\\n// React Router keeps the URL up to date as you navigate\\n// through the site. This preserves the browser history,\\n// making sure things like the back button and bookmarks\\n// work properly.\\n\\nexport default function BasicExample() {\\n  return (\\n    <Router>\\n      <div>\\n        <ul>\\n          <li>\\n            <Link to=\\\"/\\\">Home</Link>\\n          </li>\\n          <li>\\n            <Link to=\\\"/about\\\">About</Link>\\n          </li>\\n          <li>\\n            <Link to=\\\"/dashboard\\\">Dashboard</Link>\\n          </li>\\n        </ul>\\n\\n        <hr />\\n\\n        {/*\\n          A <Switch> looks through all its children <Route>\\n          elements and renders the first one whose path\\n          matches the current URL. Use a <Switch> any time\\n          you have multiple routes, but you want only one\\n          of them to render at a time\\n        */}\\n        <Switch>\\n          <Route exact path=\\\"/\\\">\\n            <Home />\\n          </Route>\\n          <Route path=\\\"/about\\\">\\n            <About />\\n          </Route>\\n          <Route path=\\\"/dashboard\\\">\\n            <Dashboard />\\n          </Route>\\n        </Switch>\\n      </div>\\n    </Router>\\n  );\\n}\\n\\n// You can think of these components as \\\"pages\\\"\\n// in your app.\\n\\nfunction Home() {\\n  return (\\n    <div>\\n      <h2>Home</h2>\\n    </div>\\n  );\\n}\\n\\nfunction About() {\\n  return (\\n    <div>\\n      <h2>About</h2>\\n    </div>\\n  );\\n}\\n\\nfunction Dashboard() {\\n  return (\\n    <div>\\n      <h2>Dashboard</h2>\\n    </div>\\n  );\\n}\\n\"","module.exports = \"import React from \\\"react\\\";\\nimport {\\n  BrowserRouter as Router,\\n  Switch,\\n  Route,\\n  Link,\\n  useParams\\n} from \\\"react-router-dom\\\";\\n\\n// Params are placeholders in the URL that begin\\n// with a colon, like the `:id` param defined in\\n// the route in this example. A similar convention\\n// is used for matching dynamic segments in other\\n// popular web frameworks like Rails and Express.\\n\\nexport default function ParamsExample() {\\n  return (\\n    <Router>\\n      <div>\\n        <h2>Accounts</h2>\\n\\n        <ul>\\n          <li>\\n            <Link to=\\\"/netflix\\\">Netflix</Link>\\n          </li>\\n          <li>\\n            <Link to=\\\"/zillow-group\\\">Zillow Group</Link>\\n          </li>\\n          <li>\\n            <Link to=\\\"/yahoo\\\">Yahoo</Link>\\n          </li>\\n          <li>\\n            <Link to=\\\"/modus-create\\\">Modus Create</Link>\\n          </li>\\n        </ul>\\n\\n        <Switch>\\n          <Route path=\\\"/:id\\\" children={<Child />} />\\n        </Switch>\\n      </div>\\n    </Router>\\n  );\\n}\\n\\nfunction Child() {\\n  // We can use the `useParams` hook here to access\\n  // the dynamic pieces of the URL.\\n  let { id } = useParams();\\n\\n  return (\\n    <div>\\n      <h3>ID: {id}</h3>\\n    </div>\\n  );\\n}\\n\"","module.exports = \"import React from \\\"react\\\";\\nimport {\\n  BrowserRouter as Router,\\n  Switch,\\n  Route,\\n  Link,\\n  useParams,\\n  useRouteMatch\\n} from \\\"react-router-dom\\\";\\n\\n// Since routes are regular React components, they\\n// may be rendered anywhere in the app, including in\\n// child elements.\\n//\\n// This helps when it's time to code-split your app\\n// into multiple bundles because code-splitting a\\n// React Router app is the same as code-splitting\\n// any other React app.\\n\\nexport default function NestingExample() {\\n  return (\\n    <Router>\\n      <div>\\n        <ul>\\n          <li>\\n            <Link to=\\\"/\\\">Home</Link>\\n          </li>\\n          <li>\\n            <Link to=\\\"/topics\\\">Topics</Link>\\n          </li>\\n        </ul>\\n\\n        <hr />\\n\\n        <Switch>\\n          <Route exact path=\\\"/\\\">\\n            <Home />\\n          </Route>\\n          <Route path=\\\"/topics\\\">\\n            <Topics />\\n          </Route>\\n        </Switch>\\n      </div>\\n    </Router>\\n  );\\n}\\n\\nfunction Home() {\\n  return (\\n    <div>\\n      <h2>Home</h2>\\n    </div>\\n  );\\n}\\n\\nfunction Topics() {\\n  // The `path` lets us build <Route> paths that are\\n  // relative to the parent route, while the `url` lets\\n  // us build relative links.\\n  let { path, url } = useRouteMatch();\\n\\n  return (\\n    <div>\\n      <h2>Topics</h2>\\n      <ul>\\n        <li>\\n          <Link to={`${url}/rendering`}>Rendering with React</Link>\\n        </li>\\n        <li>\\n          <Link to={`${url}/components`}>Components</Link>\\n        </li>\\n        <li>\\n          <Link to={`${url}/props-v-state`}>Props v. State</Link>\\n        </li>\\n      </ul>\\n\\n      <Switch>\\n        <Route exact path={path}>\\n          <h3>Please select a topic.</h3>\\n        </Route>\\n        <Route path={`${path}/:topicId`}>\\n          <Topic />\\n        </Route>\\n      </Switch>\\n    </div>\\n  );\\n}\\n\\nfunction Topic() {\\n  // The <Route> that rendered this component has a\\n  // path of `/topics/:topicId`. The `:topicId` portion\\n  // of the URL indicates a placeholder that we can\\n  // get from `useParams()`.\\n  let { topicId } = useParams();\\n\\n  return (\\n    <div>\\n      <h3>{topicId}</h3>\\n    </div>\\n  );\\n}\\n\"","module.exports = \"import React, { useContext, createContext, useState } from \\\"react\\\";\\nimport {\\n  BrowserRouter as Router,\\n  Switch,\\n  Route,\\n  Link,\\n  Redirect,\\n  useHistory,\\n  useLocation\\n} from \\\"react-router-dom\\\";\\n\\n// This example has 3 pages: a public page, a protected\\n// page, and a login screen. In order to see the protected\\n// page, you must first login. Pretty standard stuff.\\n//\\n// First, visit the public page. Then, visit the protected\\n// page. You're not yet logged in, so you are redirected\\n// to the login page. After you login, you are redirected\\n// back to the protected page.\\n//\\n// Notice the URL change each time. If you click the back\\n// button at this point, would you expect to go back to the\\n// login page? No! You're already logged in. Try it out,\\n// and you'll see you go back to the page you visited\\n// just *before* logging in, the public page.\\n\\nexport default function AuthExample() {\\n  return (\\n    <ProvideAuth>\\n      <Router>\\n        <div>\\n          <AuthButton />\\n\\n          <ul>\\n            <li>\\n              <Link to=\\\"/public\\\">Public Page</Link>\\n            </li>\\n            <li>\\n              <Link to=\\\"/protected\\\">Protected Page</Link>\\n            </li>\\n          </ul>\\n\\n          <Switch>\\n            <Route path=\\\"/public\\\">\\n              <PublicPage />\\n            </Route>\\n            <Route path=\\\"/login\\\">\\n              <LoginPage />\\n            </Route>\\n            <PrivateRoute path=\\\"/protected\\\">\\n              <ProtectedPage />\\n            </PrivateRoute>\\n          </Switch>\\n        </div>\\n      </Router>\\n    </ProvideAuth>\\n  );\\n}\\n\\nconst fakeAuth = {\\n  isAuthenticated: false,\\n  signin(cb) {\\n    fakeAuth.isAuthenticated = true;\\n    setTimeout(cb, 100); // fake async\\n  },\\n  signout(cb) {\\n    fakeAuth.isAuthenticated = false;\\n    setTimeout(cb, 100);\\n  }\\n};\\n\\n/** For more details on\\n * `authContext`, `ProvideAuth`, `useAuth` and `useProvideAuth`\\n * refer to: https://usehooks.com/useAuth/\\n */\\nconst authContext = createContext();\\n\\nfunction ProvideAuth({ children }) {\\n  const auth = useProvideAuth();\\n  return (\\n    <authContext.Provider value={auth}>\\n      {children}\\n    </authContext.Provider>\\n  );\\n}\\n\\nfunction useAuth() {\\n  return useContext(authContext);\\n}\\n\\nfunction useProvideAuth() {\\n  const [user, setUser] = useState(null);\\n\\n  const signin = cb => {\\n    return fakeAuth.signin(() => {\\n      setUser(\\\"user\\\");\\n      cb();\\n    });\\n  };\\n\\n  const signout = cb => {\\n    return fakeAuth.signout(() => {\\n      setUser(null);\\n      cb();\\n    });\\n  };\\n\\n  return {\\n    user,\\n    signin,\\n    signout\\n  };\\n}\\n\\nfunction AuthButton() {\\n  let history = useHistory();\\n  let auth = useAuth();\\n\\n  return auth.user ? (\\n    <p>\\n      Welcome!{\\\" \\\"}\\n      <button\\n        onClick={() => {\\n          auth.signout(() => history.push(\\\"/\\\"));\\n        }}\\n      >\\n        Sign out\\n      </button>\\n    </p>\\n  ) : (\\n    <p>You are not logged in.</p>\\n  );\\n}\\n\\n// A wrapper for <Route> that redirects to the login\\n// screen if you're not yet authenticated.\\nfunction PrivateRoute({ children, ...rest }) {\\n  let auth = useAuth();\\n  return (\\n    <Route\\n      {...rest}\\n      render={({ location }) =>\\n        auth.user ? (\\n          children\\n        ) : (\\n          <Redirect\\n            to={{\\n              pathname: \\\"/login\\\",\\n              state: { from: location }\\n            }}\\n          />\\n        )\\n      }\\n    />\\n  );\\n}\\n\\nfunction PublicPage() {\\n  return <h3>Public</h3>;\\n}\\n\\nfunction ProtectedPage() {\\n  return <h3>Protected</h3>;\\n}\\n\\nfunction LoginPage() {\\n  let history = useHistory();\\n  let location = useLocation();\\n  let auth = useAuth();\\n\\n  let { from } = location.state || { from: { pathname: \\\"/\\\" } };\\n  let login = () => {\\n    auth.signin(() => {\\n      history.replace(from);\\n    });\\n  };\\n\\n  return (\\n    <div>\\n      <p>You must log in to view the page at {from.pathname}</p>\\n      <button onClick={login}>Log in</button>\\n    </div>\\n  );\\n}\\n\"","module.exports = \"import React from \\\"react\\\";\\nimport {\\n  BrowserRouter as Router,\\n  Switch,\\n  Route,\\n  Link,\\n  useRouteMatch\\n} from \\\"react-router-dom\\\";\\n\\n// This example show how you could create a custom\\n// <Link> that renders something special when the URL\\n// is the same as the one the <Link> points to.\\n\\nexport default function CustomLinkExample() {\\n  return (\\n    <Router>\\n      <div>\\n        <OldSchoolMenuLink\\n          activeOnlyWhenExact={true}\\n          to=\\\"/\\\"\\n          label=\\\"Home\\\"\\n        />\\n        <OldSchoolMenuLink to=\\\"/about\\\" label=\\\"About\\\" />\\n\\n        <hr />\\n\\n        <Switch>\\n          <Route exact path=\\\"/\\\">\\n            <Home />\\n          </Route>\\n          <Route path=\\\"/about\\\">\\n            <About />\\n          </Route>\\n        </Switch>\\n      </div>\\n    </Router>\\n  );\\n}\\n\\nfunction OldSchoolMenuLink({ label, to, activeOnlyWhenExact }) {\\n  let match = useRouteMatch({\\n    path: to,\\n    exact: activeOnlyWhenExact\\n  });\\n\\n  return (\\n    <div className={match ? \\\"active\\\" : \\\"\\\"}>\\n      {match && \\\"> \\\"}\\n      <Link to={to}>{label}</Link>\\n    </div>\\n  );\\n}\\n\\nfunction Home() {\\n  return (\\n    <div>\\n      <h2>Home</h2>\\n    </div>\\n  );\\n}\\n\\nfunction About() {\\n  return (\\n    <div>\\n      <h2>About</h2>\\n    </div>\\n  );\\n}\\n\"","module.exports = \"import React, { useState } from \\\"react\\\";\\nimport {\\n  BrowserRouter as Router,\\n  Switch,\\n  Route,\\n  Link,\\n  Prompt\\n} from \\\"react-router-dom\\\";\\n\\n// Sometimes you want to prevent the user from\\n// navigating away from a page. The most common\\n// use case is when they have entered some data\\n// into a form but haven't submitted it yet, and\\n// you don't want them to lose it.\\n\\nexport default function PreventingTransitionsExample() {\\n  return (\\n    <Router>\\n      <ul>\\n        <li>\\n          <Link to=\\\"/\\\">Form</Link>\\n        </li>\\n        <li>\\n          <Link to=\\\"/one\\\">One</Link>\\n        </li>\\n        <li>\\n          <Link to=\\\"/two\\\">Two</Link>\\n        </li>\\n      </ul>\\n\\n      <Switch>\\n        <Route path=\\\"/\\\" exact children={<BlockingForm />} />\\n        <Route path=\\\"/one\\\" children={<h3>One</h3>} />\\n        <Route path=\\\"/two\\\" children={<h3>Two</h3>} />\\n      </Switch>\\n    </Router>\\n  );\\n}\\n\\nfunction BlockingForm() {\\n  let [isBlocking, setIsBlocking] = useState(false);\\n\\n  return (\\n    <form\\n      onSubmit={event => {\\n        event.preventDefault();\\n        event.target.reset();\\n        setIsBlocking(false);\\n      }}\\n    >\\n      <Prompt\\n        when={isBlocking}\\n        message={location =>\\n          `Are you sure you want to go to ${location.pathname}`\\n        }\\n      />\\n\\n      <p>\\n        Blocking?{\\\" \\\"}\\n        {isBlocking ? \\\"Yes, click a link or the back button\\\" : \\\"Nope\\\"}\\n      </p>\\n\\n      <p>\\n        <input\\n          size=\\\"50\\\"\\n          placeholder=\\\"type something to block transitions\\\"\\n          onChange={event => {\\n            setIsBlocking(event.target.value.length > 0);\\n          }}\\n        />\\n      </p>\\n\\n      <p>\\n        <button>Submit to stop blocking</button>\\n      </p>\\n    </form>\\n  );\\n}\\n\"","module.exports = \"import React from \\\"react\\\";\\nimport {\\n  BrowserRouter as Router,\\n  Route,\\n  Link,\\n  Switch,\\n  Redirect,\\n  useLocation\\n} from \\\"react-router-dom\\\";\\n\\n// You can use the last <Route> in a <Switch> as a kind of\\n// \\\"fallback\\\" route, to catch 404 errors.\\n//\\n// There are a few useful things to note about this example:\\n//\\n// - A <Switch> renders the first child <Route> that matches\\n// - A <Redirect> may be used to redirect old URLs to new ones\\n// - A <Route path=\\\"*> always matches\\n\\nexport default function NoMatchExample() {\\n  return (\\n    <Router>\\n      <div>\\n        <ul>\\n          <li>\\n            <Link to=\\\"/\\\">Home</Link>\\n          </li>\\n          <li>\\n            <Link to=\\\"/old-match\\\">Old Match, to be redirected</Link>\\n          </li>\\n          <li>\\n            <Link to=\\\"/will-match\\\">Will Match</Link>\\n          </li>\\n          <li>\\n            <Link to=\\\"/will-not-match\\\">Will Not Match</Link>\\n          </li>\\n          <li>\\n            <Link to=\\\"/also/will/not/match\\\">Also Will Not Match</Link>\\n          </li>\\n        </ul>\\n\\n        <Switch>\\n          <Route exact path=\\\"/\\\">\\n            <Home />\\n          </Route>\\n          <Route path=\\\"/old-match\\\">\\n            <Redirect to=\\\"/will-match\\\" />\\n          </Route>\\n          <Route path=\\\"/will-match\\\">\\n            <WillMatch />\\n          </Route>\\n          <Route path=\\\"*\\\">\\n            <NoMatch />\\n          </Route>\\n        </Switch>\\n      </div>\\n    </Router>\\n  );\\n}\\n\\nfunction Home() {\\n  return <h3>Home</h3>;\\n}\\n\\nfunction WillMatch() {\\n  return <h3>Matched!</h3>;\\n}\\n\\nfunction NoMatch() {\\n  let location = useLocation();\\n\\n  return (\\n    <div>\\n      <h3>\\n        No match for <code>{location.pathname}</code>\\n      </h3>\\n    </div>\\n  );\\n}\\n\"","module.exports = \"import React from \\\"react\\\";\\nimport {\\n  BrowserRouter as Router,\\n  Switch,\\n  Route,\\n  Link,\\n  Redirect,\\n  useParams,\\n  useRouteMatch\\n} from \\\"react-router-dom\\\";\\n\\n// Sometimes you don't know all the possible routes\\n// for your application up front; for example, when\\n// building a file-system browsing UI or determining\\n// URLs dynamically based on data. In these situations,\\n// it helps to have a dynamic router that is able\\n// to generate routes as needed at runtime.\\n//\\n// This example lets you drill down into a friends\\n// list recursively, viewing each user's friend list\\n// along the way. As you drill down, notice each segment\\n// being added to the URL. You can copy/paste this link\\n// to someone else and they will see the same UI.\\n//\\n// Then click the back button and watch the last\\n// segment of the URL disappear along with the last\\n// friend list.\\n\\nexport default function RecursiveExample() {\\n  return (\\n    <Router>\\n      <Switch>\\n        <Route path=\\\"/:id\\\">\\n          <Person />\\n        </Route>\\n        <Route path=\\\"/\\\">\\n          <Redirect to=\\\"/0\\\" />\\n        </Route>\\n      </Switch>\\n    </Router>\\n  );\\n}\\n\\nfunction Person() {\\n  let { url } = useRouteMatch();\\n  let { id } = useParams();\\n  let person = find(parseInt(id));\\n\\n  return (\\n    <div>\\n      <h3>{person.name}’s Friends</h3>\\n\\n      <ul>\\n        {person.friends.map(id => (\\n          <li key={id}>\\n            <Link to={`${url}/${id}`}>{find(id).name}</Link>\\n          </li>\\n        ))}\\n      </ul>\\n\\n      <Switch>\\n        <Route path={`${url}/:id`}>\\n          <Person />\\n        </Route>\\n      </Switch>\\n    </div>\\n  );\\n}\\n\\nconst PEEPS = [\\n  { id: 0, name: \\\"Michelle\\\", friends: [1, 2, 3] },\\n  { id: 1, name: \\\"Sean\\\", friends: [0, 3] },\\n  { id: 2, name: \\\"Kim\\\", friends: [0, 1, 3] },\\n  { id: 3, name: \\\"David\\\", friends: [1, 2] }\\n];\\n\\nfunction find(id) {\\n  return PEEPS.find(p => p.id === id);\\n}\\n\"","module.exports = \"import React from \\\"react\\\";\\nimport {\\n  BrowserRouter as Router,\\n  Switch,\\n  Route,\\n  Link\\n} from \\\"react-router-dom\\\";\\n\\n// Each logical \\\"route\\\" has two components, one for\\n// the sidebar and one for the main area. We want to\\n// render both of them in different places when the\\n// path matches the current URL.\\n\\n// We are going to use this route config in 2\\n// spots: once for the sidebar and once in the main\\n// content section. All routes are in the same\\n// order they would appear in a <Switch>.\\nconst routes = [\\n  {\\n    path: \\\"/\\\",\\n    exact: true,\\n    sidebar: () => <div>home!</div>,\\n    main: () => <h2>Home</h2>\\n  },\\n  {\\n    path: \\\"/bubblegum\\\",\\n    sidebar: () => <div>bubblegum!</div>,\\n    main: () => <h2>Bubblegum</h2>\\n  },\\n  {\\n    path: \\\"/shoelaces\\\",\\n    sidebar: () => <div>shoelaces!</div>,\\n    main: () => <h2>Shoelaces</h2>\\n  }\\n];\\n\\nexport default function SidebarExample() {\\n  return (\\n    <Router>\\n      <div style={{ display: \\\"flex\\\" }}>\\n        <div\\n          style={{\\n            padding: \\\"10px\\\",\\n            width: \\\"40%\\\",\\n            background: \\\"#f0f0f0\\\"\\n          }}\\n        >\\n          <ul style={{ listStyleType: \\\"none\\\", padding: 0 }}>\\n            <li>\\n              <Link to=\\\"/\\\">Home</Link>\\n            </li>\\n            <li>\\n              <Link to=\\\"/bubblegum\\\">Bubblegum</Link>\\n            </li>\\n            <li>\\n              <Link to=\\\"/shoelaces\\\">Shoelaces</Link>\\n            </li>\\n          </ul>\\n\\n          <Switch>\\n            {routes.map((route, index) => (\\n              // You can render a <Route> in as many places\\n              // as you want in your app. It will render along\\n              // with any other <Route>s that also match the URL.\\n              // So, a sidebar or breadcrumbs or anything else\\n              // that requires you to render multiple things\\n              // in multiple places at the same URL is nothing\\n              // more than multiple <Route>s.\\n              <Route\\n                key={index}\\n                path={route.path}\\n                exact={route.exact}\\n                children={<route.sidebar />}\\n              />\\n            ))}\\n          </Switch>\\n        </div>\\n\\n        <div style={{ flex: 1, padding: \\\"10px\\\" }}>\\n          <Switch>\\n            {routes.map((route, index) => (\\n              // Render more <Route>s with the same paths as\\n              // above, but different components this time.\\n              <Route\\n                key={index}\\n                path={route.path}\\n                exact={route.exact}\\n                children={<route.main />}\\n              />\\n            ))}\\n          </Switch>\\n        </div>\\n      </div>\\n    </Router>\\n  );\\n}\\n\"","module.exports = \"import \\\"./styles.css\\\";\\n\\nimport React from \\\"react\\\";\\nimport {\\n  TransitionGroup,\\n  CSSTransition\\n} from \\\"react-transition-group\\\";\\nimport {\\n  BrowserRouter as Router,\\n  Switch,\\n  Route,\\n  Link,\\n  Redirect,\\n  useLocation,\\n  useParams\\n} from \\\"react-router-dom\\\";\\n\\nexport default function AnimationExample() {\\n  return (\\n    <Router>\\n      <Switch>\\n        <Route exact path=\\\"/\\\">\\n          <Redirect to=\\\"/hsl/10/90/50\\\" />\\n        </Route>\\n        <Route path=\\\"*\\\">\\n          <AnimationApp />\\n        </Route>\\n      </Switch>\\n    </Router>\\n  );\\n}\\n\\nfunction AnimationApp() {\\n  let location = useLocation();\\n\\n  return (\\n    <div style={styles.fill}>\\n      <ul style={styles.nav}>\\n        <NavLink to=\\\"/hsl/10/90/50\\\">Red</NavLink>\\n        <NavLink to=\\\"/hsl/120/100/40\\\">Green</NavLink>\\n        <NavLink to=\\\"/rgb/33/150/243\\\">Blue</NavLink>\\n        <NavLink to=\\\"/rgb/240/98/146\\\">Pink</NavLink>\\n      </ul>\\n\\n      <div style={styles.content}>\\n        <TransitionGroup>\\n          {/*\\n            This is no different than other usage of\\n            <CSSTransition>, just make sure to pass\\n            `location` to `Switch` so it can match\\n            the old location as it animates out.\\n          */}\\n          <CSSTransition\\n            key={location.pathname}\\n            classNames=\\\"fade\\\"\\n            timeout={300}\\n          >\\n            <Switch location={location}>\\n              <Route path=\\\"/hsl/:h/:s/:l\\\" children={<HSL />} />\\n              <Route path=\\\"/rgb/:r/:g/:b\\\" children={<RGB />} />\\n            </Switch>\\n          </CSSTransition>\\n        </TransitionGroup>\\n      </div>\\n    </div>\\n  );\\n}\\n\\nfunction NavLink(props) {\\n  return (\\n    <li style={styles.navItem}>\\n      <Link {...props} style={{ color: \\\"inherit\\\" }} />\\n    </li>\\n  );\\n}\\n\\nfunction HSL() {\\n  let { h, s, l } = useParams();\\n\\n  return (\\n    <div\\n      style={{\\n        ...styles.fill,\\n        ...styles.hsl,\\n        background: `hsl(${h}, ${s}%, ${l}%)`\\n      }}\\n    >\\n      hsl({h}, {s}%, {l}%)\\n    </div>\\n  );\\n}\\n\\nfunction RGB() {\\n  let { r, g, b } = useParams();\\n\\n  return (\\n    <div\\n      style={{\\n        ...styles.fill,\\n        ...styles.rgb,\\n        background: `rgb(${r}, ${g}, ${b})`\\n      }}\\n    >\\n      rgb({r}, {g}, {b})\\n    </div>\\n  );\\n}\\n\\nconst styles = {};\\n\\nstyles.fill = {\\n  position: \\\"absolute\\\",\\n  left: 0,\\n  right: 0,\\n  top: 0,\\n  bottom: 0\\n};\\n\\nstyles.content = {\\n  ...styles.fill,\\n  top: \\\"40px\\\",\\n  textAlign: \\\"center\\\"\\n};\\n\\nstyles.nav = {\\n  padding: 0,\\n  margin: 0,\\n  position: \\\"absolute\\\",\\n  top: 0,\\n  height: \\\"40px\\\",\\n  width: \\\"100%\\\",\\n  display: \\\"flex\\\"\\n};\\n\\nstyles.navItem = {\\n  textAlign: \\\"center\\\",\\n  flex: 1,\\n  listStyleType: \\\"none\\\",\\n  padding: \\\"10px\\\"\\n};\\n\\nstyles.hsl = {\\n  ...styles.fill,\\n  color: \\\"white\\\",\\n  paddingTop: \\\"20px\\\",\\n  fontSize: \\\"30px\\\"\\n};\\n\\nstyles.rgb = {\\n  ...styles.fill,\\n  color: \\\"white\\\",\\n  paddingTop: \\\"20px\\\",\\n  fontSize: \\\"30px\\\"\\n};\\n\"","module.exports = \"import React from \\\"react\\\";\\nimport {\\n  BrowserRouter as Router,\\n  Switch,\\n  Route,\\n  Link\\n} from \\\"react-router-dom\\\";\\n\\n// Some folks find value in a centralized route config.\\n// A route config is just data. React is great at mapping\\n// data into components, and <Route> is a component.\\n\\n// Our route config is just an array of logical \\\"routes\\\"\\n// with `path` and `component` props, ordered the same\\n// way you'd do inside a `<Switch>`.\\nconst routes = [\\n  {\\n    path: \\\"/sandwiches\\\",\\n    component: Sandwiches\\n  },\\n  {\\n    path: \\\"/tacos\\\",\\n    component: Tacos,\\n    routes: [\\n      {\\n        path: \\\"/tacos/bus\\\",\\n        component: Bus\\n      },\\n      {\\n        path: \\\"/tacos/cart\\\",\\n        component: Cart\\n      }\\n    ]\\n  }\\n];\\n\\nexport default function RouteConfigExample() {\\n  return (\\n    <Router>\\n      <div>\\n        <ul>\\n          <li>\\n            <Link to=\\\"/tacos\\\">Tacos</Link>\\n          </li>\\n          <li>\\n            <Link to=\\\"/sandwiches\\\">Sandwiches</Link>\\n          </li>\\n        </ul>\\n\\n        <Switch>\\n          {routes.map((route, i) => (\\n            <RouteWithSubRoutes key={i} {...route} />\\n          ))}\\n        </Switch>\\n      </div>\\n    </Router>\\n  );\\n}\\n\\n// A special wrapper for <Route> that knows how to\\n// handle \\\"sub\\\"-routes by passing them in a `routes`\\n// prop to the component it renders.\\nfunction RouteWithSubRoutes(route) {\\n  return (\\n    <Route\\n      path={route.path}\\n      render={props => (\\n        // pass the sub-routes down to keep nesting\\n        <route.component {...props} routes={route.routes} />\\n      )}\\n    />\\n  );\\n}\\n\\nfunction Sandwiches() {\\n  return <h2>Sandwiches</h2>;\\n}\\n\\nfunction Tacos({ routes }) {\\n  return (\\n    <div>\\n      <h2>Tacos</h2>\\n      <ul>\\n        <li>\\n          <Link to=\\\"/tacos/bus\\\">Bus</Link>\\n        </li>\\n        <li>\\n          <Link to=\\\"/tacos/cart\\\">Cart</Link>\\n        </li>\\n      </ul>\\n\\n      <Switch>\\n        {routes.map((route, i) => (\\n          <RouteWithSubRoutes key={i} {...route} />\\n        ))}\\n      </Switch>\\n    </div>\\n  );\\n}\\n\\nfunction Bus() {\\n  return <h3>Bus</h3>;\\n}\\n\\nfunction Cart() {\\n  return <h3>Cart</h3>;\\n}\\n\"","module.exports = \"import React from \\\"react\\\";\\nimport {\\n  BrowserRouter as Router,\\n  Switch,\\n  Route,\\n  Link,\\n  useHistory,\\n  useLocation,\\n  useParams\\n} from \\\"react-router-dom\\\";\\n\\n// This example shows how to render two different screens\\n// (or the same screen in a different context) at the same URL,\\n// depending on how you got there.\\n//\\n// Click the \\\"featured images\\\" and see them full screen. Then\\n// \\\"visit the gallery\\\" and click on the colors. Note the URL and\\n// the component are the same as before but now we see them\\n// inside a modal on top of the gallery screen.\\n\\nexport default function ModalGalleryExample() {\\n  return (\\n    <Router>\\n      <ModalSwitch />\\n    </Router>\\n  );\\n}\\n\\nfunction ModalSwitch() {\\n  let location = useLocation();\\n\\n  // This piece of state is set when one of the\\n  // gallery links is clicked. The `background` state\\n  // is the location that we were at when one of\\n  // the gallery links was clicked. If it's there,\\n  // use it as the location for the <Switch> so\\n  // we show the gallery in the background, behind\\n  // the modal.\\n  let background = location.state && location.state.background;\\n\\n  return (\\n    <div>\\n      <Switch location={background || location}>\\n        <Route exact path=\\\"/\\\" children={<Home />} />\\n        <Route path=\\\"/gallery\\\" children={<Gallery />} />\\n        <Route path=\\\"/img/:id\\\" children={<ImageView />} />\\n      </Switch>\\n\\n      {/* Show the modal when a background page is set */}\\n      {background && <Route path=\\\"/img/:id\\\" children={<Modal />} />}\\n    </div>\\n  );\\n}\\n\\nconst IMAGES = [\\n  { id: 0, title: \\\"Dark Orchid\\\", color: \\\"DarkOrchid\\\" },\\n  { id: 1, title: \\\"Lime Green\\\", color: \\\"LimeGreen\\\" },\\n  { id: 2, title: \\\"Tomato\\\", color: \\\"Tomato\\\" },\\n  { id: 3, title: \\\"Seven Ate Nine\\\", color: \\\"#789\\\" },\\n  { id: 4, title: \\\"Crimson\\\", color: \\\"Crimson\\\" }\\n];\\n\\nfunction Thumbnail({ color }) {\\n  return (\\n    <div\\n      style={{\\n        width: 50,\\n        height: 50,\\n        background: color\\n      }}\\n    />\\n  );\\n}\\n\\nfunction Image({ color }) {\\n  return (\\n    <div\\n      style={{\\n        width: \\\"100%\\\",\\n        height: 400,\\n        background: color\\n      }}\\n    />\\n  );\\n}\\n\\nfunction Home() {\\n  return (\\n    <div>\\n      <Link to=\\\"/gallery\\\">Visit the Gallery</Link>\\n      <h2>Featured Images</h2>\\n      <ul>\\n        <li>\\n          <Link to=\\\"/img/2\\\">Tomato</Link>\\n        </li>\\n        <li>\\n          <Link to=\\\"/img/4\\\">Crimson</Link>\\n        </li>\\n      </ul>\\n    </div>\\n  );\\n}\\n\\nfunction Gallery() {\\n  let location = useLocation();\\n\\n  return (\\n    <div>\\n      {IMAGES.map(i => (\\n        <Link\\n          key={i.id}\\n          to={{\\n            pathname: `/img/${i.id}`,\\n            // This is the trick! This link sets\\n            // the `background` in location state.\\n            state: { background: location }\\n          }}\\n        >\\n          <Thumbnail color={i.color} />\\n          <p>{i.title}</p>\\n        </Link>\\n      ))}\\n    </div>\\n  );\\n}\\n\\nfunction ImageView() {\\n  let { id } = useParams();\\n  let image = IMAGES[parseInt(id, 10)];\\n\\n  if (!image) return <div>Image not found</div>;\\n\\n  return (\\n    <div>\\n      <h1>{image.title}</h1>\\n      <Image color={image.color} />\\n    </div>\\n  );\\n}\\n\\nfunction Modal() {\\n  let history = useHistory();\\n  let { id } = useParams();\\n  let image = IMAGES[parseInt(id, 10)];\\n\\n  if (!image) return null;\\n\\n  let back = e => {\\n    e.stopPropagation();\\n    history.goBack();\\n  };\\n\\n  return (\\n    <div\\n      onClick={back}\\n      style={{\\n        position: \\\"absolute\\\",\\n        top: 0,\\n        left: 0,\\n        bottom: 0,\\n        right: 0,\\n        background: \\\"rgba(0, 0, 0, 0.15)\\\"\\n      }}\\n    >\\n      <div\\n        className=\\\"modal\\\"\\n        style={{\\n          position: \\\"absolute\\\",\\n          background: \\\"#fff\\\",\\n          top: 25,\\n          left: \\\"10%\\\",\\n          right: \\\"10%\\\",\\n          padding: 15,\\n          border: \\\"2px solid #444\\\"\\n        }}\\n      >\\n        <h1>{image.title}</h1>\\n        <Image color={image.color} />\\n        <button type=\\\"button\\\" onClick={back}>\\n          Close\\n        </button>\\n      </div>\\n    </div>\\n  );\\n}\\n\"","module.exports = \"import React, { Component } from \\\"react\\\";\\nimport { StaticRouter as Router, Route } from \\\"react-router-dom\\\";\\n\\n// This example renders a route within a StaticRouter and populates its\\n// staticContext, which it then prints out. In the real world you would\\n// use the StaticRouter for server-side rendering:\\n//\\n// import express from \\\"express\\\";\\n// import ReactDOMServer from \\\"react-dom/server\\\";\\n//\\n// const app = express()\\n//\\n// app.get('*', (req, res) => {\\n//   let staticContext = {}\\n//\\n//   let html = ReactDOMServer.renderToString(\\n//     <StaticRouter location={req.url} context={staticContext}>\\n//       <App /> (includes the RouteStatus component below e.g. for 404 errors)\\n//     </StaticRouter>\\n//   );\\n//\\n//   res.status(staticContext.statusCode || 200).send(html);\\n// });\\n//\\n// app.listen(process.env.PORT || 3000);\\n\\nfunction RouteStatus(props) {\\n  return (\\n    <Route\\n      render={({ staticContext }) => {\\n        // we have to check if staticContext exists\\n        // because it will be undefined if rendered through a BrowserRouter\\n        if (staticContext) {\\n          staticContext.statusCode = props.statusCode;\\n        }\\n\\n        return <div>{props.children}</div>;\\n      }}\\n    />\\n  );\\n}\\n\\nfunction PrintContext(props) {\\n  return <p>Static context: {JSON.stringify(props.staticContext)}</p>;\\n}\\n\\nexport default class StaticRouterExample extends Component {\\n  // This is the context object that we pass to the StaticRouter.\\n  // It can be modified by routes to provide additional information\\n  // for the server-side render\\n  staticContext = {};\\n\\n  render() {\\n    return (\\n      <Router location=\\\"/foo\\\" context={this.staticContext}>\\n        <div>\\n          <RouteStatus statusCode={404}>\\n            <p>Route with statusCode 404</p>\\n            <PrintContext staticContext={this.staticContext} />\\n          </RouteStatus>\\n        </div>\\n      </Router>\\n    );\\n  }\\n}\\n\"","module.exports = \"import React from \\\"react\\\";\\nimport {\\n  BrowserRouter as Router,\\n  Link,\\n  useLocation\\n} from \\\"react-router-dom\\\";\\n\\n// React Router does not have any opinions about\\n// how you should parse URL query strings.\\n//\\n// If you use simple key=value query strings and\\n// you do not need to support IE 11, you can use\\n// the browser's built-in URLSearchParams API.\\n//\\n// If your query strings contain array or object\\n// syntax, you'll probably need to bring your own\\n// query parsing function.\\n\\nexport default function QueryParamsExample() {\\n  return (\\n    <Router>\\n      <QueryParamsDemo />\\n    </Router>\\n  );\\n}\\n\\n// A custom hook that builds on useLocation to parse\\n// the query string for you.\\nfunction useQuery() {\\n  const { search } = useLocation();\\n\\n  return React.useMemo(() => new URLSearchParams(search), [search]);\\n}\\n\\nfunction QueryParamsDemo() {\\n  let query = useQuery();\\n\\n  return (\\n    <div>\\n      <div>\\n        <h2>Accounts</h2>\\n        <ul>\\n          <li>\\n            <Link to=\\\"/account?name=netflix\\\">Netflix</Link>\\n          </li>\\n          <li>\\n            <Link to=\\\"/account?name=zillow-group\\\">Zillow Group</Link>\\n          </li>\\n          <li>\\n            <Link to=\\\"/account?name=yahoo\\\">Yahoo</Link>\\n          </li>\\n          <li>\\n            <Link to=\\\"/account?name=modus-create\\\">Modus Create</Link>\\n          </li>\\n        </ul>\\n\\n        <Child name={query.get(\\\"name\\\")} />\\n      </div>\\n    </div>\\n  );\\n}\\n\\nfunction Child({ name }) {\\n  return (\\n    <div>\\n      {name ? (\\n        <h3>\\n          The <code>name</code> in the query string is &quot;{name}\\n          &quot;\\n        </h3>\\n      ) : (\\n        <h3>There is no name in the query string</h3>\\n      )}\\n    </div>\\n  );\\n}\\n\"","module.exports = {\"markup\":\"<h1 id=\\\"quick-start\\\"><a href=\\\"/web/guides/quick-start\\\" class=\\\"internal-link\\\">Quick Start</a></h1>\\n<p>To get started with React Router in a web app, you&#x2019;ll need a React web app. If you need to create one, we recommend you try <a href=\\\"https://github.com/facebook/create-react-app\\\">Create React App</a>. It&#x2019;s a popular tool that works really well with React Router.</p>\\n<p>First, install <code>create-react-app</code> and make a new project with it.</p>\\n<pre><code class=\\\"language-sh\\\">npx create-react-app demo-app\\n<span class=\\\"token builtin class-name\\\">cd</span> demo-app\\n</code></pre>\\n<h2 id=\\\"quick-start-installation\\\"><a href=\\\"/web/guides/quick-start/installation\\\" class=\\\"internal-link\\\">Installation</a></h2>\\n<p>You can install React Router from <a href=\\\"https://npm.im/react-router-dom\\\">the public npm registry</a> with either <code>npm</code> or <a href=\\\"https://yarnpkg.com\\\"><code>yarn</code></a>. Since we&#x2019;re building a web app, we&#x2019;ll use <code>react-router-dom</code> in this guide.</p>\\n<pre><code class=\\\"language-sh\\\"><span class=\\\"token function\\\">yarn</span> <span class=\\\"token function\\\">add</span> react-router-dom\\n</code></pre>\\n<p>Next, copy/paste either of the following examples into <code>src/App.js</code>.</p>\\n<h2 id=\\\"quick-start-1st-example-basic-routing\\\"><a href=\\\"/web/guides/quick-start/1st-example-basic-routing\\\" class=\\\"internal-link\\\">1st Example: Basic Routing</a></h2>\\n<p>In this example we have 3 &#x201C;pages&#x201D; handled by the router: a home page, an about page, and a users page. As you click around on the different <code>&lt;Link&gt;</code>s, the router renders the matching <code>&lt;Route&gt;</code>.</p>\\n<p>Note: Behind the scenes a <code>&lt;Link&gt;</code> renders an <code>&lt;a&gt;</code> with a real <code>href</code>, so people using the keyboard for navigation or screen readers will still be able to use this app.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">import</span> React <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span>\\n  BrowserRouter <span class=\\\"token keyword\\\">as</span> Router<span class=\\\"token punctuation\\\">,</span>\\n  Switch<span class=\\\"token punctuation\\\">,</span>\\n  Route<span class=\\\"token punctuation\\\">,</span>\\n  Link\\n<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react-router-dom&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">App</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Router</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>nav</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n          <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>ul</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n            <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>li</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n              <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Link</span></span> <span class=\\\"token attr-name\\\">to</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>Home<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Link</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n            <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>li</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n            <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>li</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n              <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Link</span></span> <span class=\\\"token attr-name\\\">to</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/about<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>About<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Link</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n            <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>li</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n            <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>li</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n              <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Link</span></span> <span class=\\\"token attr-name\\\">to</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/users<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>Users<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Link</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n            <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>li</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n          <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>ul</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>nav</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n\\n        <span class=\\\"token punctuation\\\">{</span><span class=\\\"token comment\\\">/* A &lt;Switch&gt; looks through its children &lt;Route&gt;s and\\n            renders the first one that matches the current URL. */</span><span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Switch</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n          <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/about<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n            <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">About</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n          <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Route</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n          <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/users<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n            <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Users</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n          <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Route</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n          <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n            <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Home</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n          <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Route</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Switch</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Router</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">Home</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>h2</span><span class=\\\"token punctuation\\\">&gt;</span></span>Home<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>h2</span><span class=\\\"token punctuation\\\">&gt;</span></span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">About</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>h2</span><span class=\\\"token punctuation\\\">&gt;</span></span>About<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>h2</span><span class=\\\"token punctuation\\\">&gt;</span></span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">Users</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>h2</span><span class=\\\"token punctuation\\\">&gt;</span></span>Users<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>h2</span><span class=\\\"token punctuation\\\">&gt;</span></span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n<h2 id=\\\"quick-start-2nd-example-nested-routing\\\"><a href=\\\"/web/guides/quick-start/2nd-example-nested-routing\\\" class=\\\"internal-link\\\">2nd Example: Nested Routing</a></h2>\\n<p>This example shows how nested routing works. The route <code>/topics</code> loads the <code>Topics</code> component, which renders any further <code>&lt;Route&gt;</code>&apos;s conditionally on the paths <code>:id</code> value.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">import</span> React <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span>\\n  BrowserRouter <span class=\\\"token keyword\\\">as</span> Router<span class=\\\"token punctuation\\\">,</span>\\n  Switch<span class=\\\"token punctuation\\\">,</span>\\n  Route<span class=\\\"token punctuation\\\">,</span>\\n  Link<span class=\\\"token punctuation\\\">,</span>\\n  useRouteMatch<span class=\\\"token punctuation\\\">,</span>\\n  useParams\\n<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react-router-dom&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">App</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Router</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>ul</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n          <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>li</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n            <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Link</span></span> <span class=\\\"token attr-name\\\">to</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>Home<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Link</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n          <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>li</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n          <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>li</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n            <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Link</span></span> <span class=\\\"token attr-name\\\">to</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/about<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>About<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Link</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n          <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>li</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n          <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>li</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n            <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Link</span></span> <span class=\\\"token attr-name\\\">to</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/topics<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>Topics<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Link</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n          <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>li</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>ul</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Switch</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n          <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/about<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n            <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">About</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n          <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Route</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n          <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/topics<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n            <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Topics</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n          <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Route</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n          <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n            <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Home</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n          <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Route</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Switch</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Router</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">Home</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>h2</span><span class=\\\"token punctuation\\\">&gt;</span></span>Home<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>h2</span><span class=\\\"token punctuation\\\">&gt;</span></span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">About</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>h2</span><span class=\\\"token punctuation\\\">&gt;</span></span>About<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>h2</span><span class=\\\"token punctuation\\\">&gt;</span></span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">Topics</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">let</span> match <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useRouteMatch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>h2</span><span class=\\\"token punctuation\\\">&gt;</span></span>Topics<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>h2</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>ul</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>li</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n          <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Link</span></span> <span class=\\\"token attr-name\\\">to</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>match<span class=\\\"token punctuation\\\">.</span>url<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">/components</span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>Components<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Link</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>li</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>li</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n          <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Link</span></span> <span class=\\\"token attr-name\\\">to</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>match<span class=\\\"token punctuation\\\">.</span>url<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">/props-v-state</span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n            Props v<span class=\\\"token punctuation\\\">.</span> State\\n          <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Link</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>li</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>ul</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n\\n      <span class=\\\"token punctuation\\\">{</span><span class=\\\"token comment\\\">/* The Topics page has its own &lt;Switch&gt; with more routes\\n          that build on the /topics URL path. You can think of the\\n          2nd &lt;Route&gt; here as an &quot;index&quot; page for all topics, or\\n          the page that is shown when no topic is selected */</span><span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Switch</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>match<span class=\\\"token punctuation\\\">.</span>path<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">/:topicId</span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n          <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Topic</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Route</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>match<span class=\\\"token punctuation\\\">.</span>path<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n          <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>h3</span><span class=\\\"token punctuation\\\">&gt;</span></span>Please select a topic<span class=\\\"token punctuation\\\">.</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>h3</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Route</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Switch</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">Topic</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">let</span> <span class=\\\"token punctuation\\\">{</span> topicId <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useParams</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>h3</span><span class=\\\"token punctuation\\\">&gt;</span></span>Requested topic <span class=\\\"token constant\\\">ID</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>topicId<span class=\\\"token punctuation\\\">}</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>h3</span><span class=\\\"token punctuation\\\">&gt;</span></span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n<h2 id=\\\"quick-start-keep-going\\\"><a href=\\\"/web/guides/quick-start/keep-going\\\" class=\\\"internal-link\\\">Keep Going!</a></h2>\\n<p>Hopefully these examples give you a feel for what it&#x2019;s like to create a web app with React Router. Keep reading to learn more about <a href=\\\"/web/guides/primary-components\\\" class=\\\"internal-link\\\">the primary components</a> in React Router!</p>\\n\",\"headers\":[{\"text\":\"Installation\",\"slug\":\"installation\"},{\"text\":\"1st Example: Basic Routing\",\"slug\":\"1st-example-basic-routing\"},{\"text\":\"2nd Example: Nested Routing\",\"slug\":\"2nd-example-nested-routing\"},{\"text\":\"Keep Going!\",\"slug\":\"keep-going\"}],\"title\":{\"text\":\"Quick Start\",\"slug\":\"quick-start\"}}","module.exports = {\"markup\":\"<h1 id=\\\"primary-components\\\"><a href=\\\"/web/guides/primary-components\\\" class=\\\"internal-link\\\">Primary Components</a></h1>\\n<p>There are three primary categories of components in React Router:</p>\\n<ul>\\n<li>routers, like <code>&lt;BrowserRouter&gt;</code> and <code>&lt;HashRouter&gt;</code></li>\\n<li>route matchers, like <code>&lt;Route&gt;</code> and <code>&lt;Switch&gt;</code></li>\\n<li>and navigation, like <code>&lt;Link&gt;</code>, <code>&lt;NavLink&gt;</code>, and <code>&lt;Redirect&gt;</code></li>\\n</ul>\\n<p>We also like to think of the navigation components as &#x201C;route changers&#x201D;.</p>\\n<p>All of the components that you use in a web application should be imported from <code>react-router-dom</code>.</p>\\n<pre><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> BrowserRouter<span class=\\\"token punctuation\\\">,</span> Route<span class=\\\"token punctuation\\\">,</span> Link <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react-router-dom&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n<h2 id=\\\"primary-components-routers\\\"><a href=\\\"/web/guides/primary-components/routers\\\" class=\\\"internal-link\\\">Routers</a></h2>\\n<p>At the core of every React Router application should be a router component. For web projects, <code>react-router-dom</code> provides <code>&lt;BrowserRouter&gt;</code> and <code>&lt;HashRouter&gt;</code> routers. The main difference between the two is the way they store the URL and communicate with your web server.</p>\\n<ul>\\n<li>A <code>&lt;BrowserRouter&gt;</code> uses regular URL paths. These are generally the best-looking URLs, but they require your server to be configured correctly. Specifically, your web server needs to serve the same page at all URLs that are managed client-side by React Router. Create React App supports this out of the box in development, and <a href=\\\"https://create-react-app.dev/docs/deployment#serving-apps-with-client-side-routing\\\">comes with instructions</a> on how to configure your production server as well.</li>\\n<li>A <code>&lt;HashRouter&gt;</code> stores the current location in <a href=\\\"https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/hash\\\">the <code>hash</code> portion of the URL</a>, so the URL looks something like <code>http://example.com/#/your/page</code>. Since the hash is never sent to the server, this means that no special server configuration is needed.</li>\\n</ul>\\n<p>To use a router, just make sure it is rendered at the root of your element hierarchy. Typically you&#x2019;ll wrap your top-level <code>&lt;App&gt;</code> element in a router, like this:</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">import</span> React <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> ReactDOM <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react-dom&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> BrowserRouter <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react-router-dom&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">App</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>h1</span><span class=\\\"token punctuation\\\">&gt;</span></span>Hello React Router<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>h1</span><span class=\\\"token punctuation\\\">&gt;</span></span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\nReactDOM<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">BrowserRouter</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">App</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">BrowserRouter</span></span><span class=\\\"token punctuation\\\">&gt;</span></span><span class=\\\"token punctuation\\\">,</span>\\n  document<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getElementById</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;root&quot;</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n<h2 id=\\\"primary-components-route-matchers\\\"><a href=\\\"/web/guides/primary-components/route-matchers\\\" class=\\\"internal-link\\\">Route Matchers</a></h2>\\n<p>There are two route matching components: <code>Switch</code> and <code>Route</code>. When a <code>&lt;Switch&gt;</code> is rendered, it searches through its <code>children</code> <code>&lt;Route&gt;</code> elements to find one whose <code>path</code> matches the current URL. When it finds one, it renders that <code>&lt;Route&gt;</code> and ignores all others. This means that you should put <code>&lt;Route&gt;</code>s with more specific (typically longer) <code>path</code>s <strong>before</strong> less-specific ones.</p>\\n<p>If no <code>&lt;Route&gt;</code> matches, the <code>&lt;Switch&gt;</code> renders nothing (<code>null</code>).</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">import</span> React <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> ReactDOM <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react-dom&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span>\\n  BrowserRouter <span class=\\\"token keyword\\\">as</span> Router<span class=\\\"token punctuation\\\">,</span>\\n  Switch<span class=\\\"token punctuation\\\">,</span>\\n  Route\\n<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react-router-dom&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">App</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Switch</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n        <span class=\\\"token punctuation\\\">{</span><span class=\\\"token comment\\\">/* If the current URL is /about, this route is rendered\\n            while the rest are ignored */</span><span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/about<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n          <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">About</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Route</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n\\n        <span class=\\\"token punctuation\\\">{</span><span class=\\\"token comment\\\">/* Note how these two routes are ordered. The more specific\\n            path=&quot;/contact/:id&quot; comes before path=&quot;/contact&quot; so that\\n            route will render when viewing an individual contact */</span><span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/contact/:id<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n          <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Contact</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Route</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/contact<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n          <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">AllContacts</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Route</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n\\n        <span class=\\\"token punctuation\\\">{</span><span class=\\\"token comment\\\">/* If none of the previous routes render anything,\\n            this route acts as a fallback.\\n\\n            Important: A route with path=&quot;/&quot; will *always* match\\n            the URL because all URLs begin with a /. So that&apos;s\\n            why we put this one last of all */</span><span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n          <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Home</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Route</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Switch</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\nReactDOM<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Router</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">App</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Router</span></span><span class=\\\"token punctuation\\\">&gt;</span></span><span class=\\\"token punctuation\\\">,</span>\\n  document<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getElementById</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;root&quot;</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n<p>One important thing to note is that a <code>&lt;Route path&gt;</code> matches the <strong>beginning</strong> of the URL, not the whole thing. So a <code>&lt;Route path=&quot;/&quot;&gt;</code> will <strong>always</strong> match the URL. Because of this, we typically put this <code>&lt;Route&gt;</code> last in our <code>&lt;Switch&gt;</code>. Another possible solution is to use <code>&lt;Route exact path=&quot;/&quot;&gt;</code> which <strong>does</strong> match the entire URL.</p>\\n<p>Note: Although React Router does support rendering <code>&lt;Route&gt;</code> elements outside of a <code>&lt;Switch&gt;</code>, as of version 5.1 we recommend you use <a href=\\\"/packages/react-router/docs/api/hooks.md#useroutematch\\\">the <code>useRouteMatch</code> hook</a> instead. Additionally, we do not recommend you render a <code>&lt;Route&gt;</code> without a <code>path</code> and instead suggest you use <a href=\\\"/packages/react-router/docs/api/hooks.md\\\">a hook</a> to get access to whatever variables you need.</p>\\n<h2 id=\\\"primary-components-navigation-or-route-changers\\\"><a href=\\\"/web/guides/primary-components/navigation-or-route-changers\\\" class=\\\"internal-link\\\">Navigation (or Route Changers)</a></h2>\\n<p>React Router provides a <code>&lt;Link&gt;</code> component to create links in your application. Wherever you render a <code>&lt;Link&gt;</code>, an anchor (<code>&lt;a&gt;</code>) will be rendered in your HTML document.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Link</span></span> <span class=\\\"token attr-name\\\">to</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>Home<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Link</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n<span class=\\\"token comment\\\">// &lt;a href=&quot;/&quot;&gt;Home&lt;/a&gt;</span>\\n</code></pre>\\n<p>The <code>&lt;NavLink&gt;</code> is a special type of <code>&lt;Link&gt;</code> that can style itself as &#x201C;active&#x201D; when its <code>to</code> prop matches the current location.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">NavLink</span></span> <span class=\\\"token attr-name\\\">to</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/react<span class=\\\"token punctuation\\\">&quot;</span></span> <span class=\\\"token attr-name\\\">activeClassName</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>hurray<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  React\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">NavLink</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n\\n<span class=\\\"token comment\\\">// When the URL is /react, this renders:</span>\\n<span class=\\\"token comment\\\">// &lt;a href=&quot;/react&quot; className=&quot;hurray&quot;&gt;React&lt;/a&gt;</span>\\n\\n<span class=\\\"token comment\\\">// When it&apos;s something else:</span>\\n<span class=\\\"token comment\\\">// &lt;a href=&quot;/react&quot;&gt;React&lt;/a&gt;</span>\\n</code></pre>\\n<p>Any time that you want to force navigation, you can render a <code>&lt;Redirect&gt;</code>. When a <code>&lt;Redirect&gt;</code> renders, it will navigate using its <code>to</code> prop.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Redirect</span></span> <span class=\\\"token attr-name\\\">to</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/login<span class=\\\"token punctuation\\\">&quot;</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n</code></pre>\\n\",\"headers\":[{\"text\":\"Routers\",\"slug\":\"routers\"},{\"text\":\"Route Matchers\",\"slug\":\"route-matchers\"},{\"text\":\"Navigation (or Route Changers)\",\"slug\":\"navigation-or-route-changers\"}],\"title\":{\"text\":\"Primary Components\",\"slug\":\"primary-components\"}}","module.exports = {\"markup\":\"<h1 id=\\\"server-rendering\\\"><a href=\\\"/web/guides/server-rendering\\\" class=\\\"internal-link\\\">Server Rendering</a></h1>\\n<p>Rendering on the server is a bit different since it&#x2019;s all stateless. The basic idea is that we wrap the app in a stateless <a href=\\\"/web/api/StaticRouter\\\" class=\\\"internal-link\\\"><code>&lt;StaticRouter&gt;</code></a> instead of a <a href=\\\"/web/api/BrowserRouter\\\" class=\\\"internal-link\\\"><code>&lt;BrowserRouter&gt;</code></a>. We pass in the requested url from the server so the routes can match and a <code>context</code> prop we&#x2019;ll discuss next.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token comment\\\">// client</span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">BrowserRouter</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">App</span></span><span class=\\\"token punctuation\\\">/&gt;</span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">BrowserRouter</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n\\n<span class=\\\"token comment\\\">// server (not the complete story)</span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">StaticRouter</span></span>\\n  <span class=\\\"token attr-name\\\">location</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>req<span class=\\\"token punctuation\\\">.</span>url<span class=\\\"token punctuation\\\">}</span></span>\\n  <span class=\\\"token attr-name\\\">context</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>context<span class=\\\"token punctuation\\\">}</span></span>\\n<span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">App</span></span><span class=\\\"token punctuation\\\">/&gt;</span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">StaticRouter</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n</code></pre>\\n<p>When you render a <a href=\\\"/web/api/Redirect\\\" class=\\\"internal-link\\\"><code>&lt;Redirect&gt;</code></a> on the client, the browser history changes state and we get the new screen. In a static server environment we can&#x2019;t change the app state. Instead, we use the <code>context</code> prop to find out what the result of rendering was. If we find a <code>context.url</code>, then we know the app redirected. This allows us to send a proper redirect from the server.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">const</span> context <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> markup <span class=\\\"token operator\\\">=</span> ReactDOMServer<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">renderToString</span><span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">StaticRouter</span></span> <span class=\\\"token attr-name\\\">location</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>req<span class=\\\"token punctuation\\\">.</span>url<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token attr-name\\\">context</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>context<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">App</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">StaticRouter</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>context<span class=\\\"token punctuation\\\">.</span>url<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">// Somewhere a `&lt;Redirect&gt;` was rendered</span>\\n  <span class=\\\"token function\\\">redirect</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">301</span><span class=\\\"token punctuation\\\">,</span> context<span class=\\\"token punctuation\\\">.</span>url<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">// we&apos;re good, send the response</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n<h2 id=\\\"server-rendering-adding-app-specific-context-information\\\"><a href=\\\"/web/guides/server-rendering/adding-app-specific-context-information\\\" class=\\\"internal-link\\\">Adding app specific context information</a></h2>\\n<p>The router only ever adds <code>context.url</code>. But you may want some redirects to be 301 and others 302. Or maybe you&#x2019;d like to send a 404 response if some specific branch of UI is rendered, or a 401 if they aren&#x2019;t authorized. The context prop is yours, so you can mutate it. Here&#x2019;s a way to distinguish between 301 and 302 redirects:</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">RedirectWithStatus</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\"><span class=\\\"token punctuation\\\">{</span> <span class=\\\"token keyword\\\">from</span><span class=\\\"token punctuation\\\">,</span> to<span class=\\\"token punctuation\\\">,</span> status <span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span>\\n      <span class=\\\"token attr-name\\\">render</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\"><span class=\\\"token punctuation\\\">{</span> staticContext <span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token comment\\\">// there is no `staticContext` on the client, so</span>\\n        <span class=\\\"token comment\\\">// we need to guard against that here</span>\\n        <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>staticContext<span class=\\\"token punctuation\\\">)</span> staticContext<span class=\\\"token punctuation\\\">.</span>status <span class=\\\"token operator\\\">=</span> status<span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">return</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Redirect</span></span> <span class=\\\"token attr-name\\\">from</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">from</span><span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token attr-name\\\">to</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>to<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></span>\\n    <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token comment\\\">// somewhere in your app</span>\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">App</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Switch</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token punctuation\\\">{</span><span class=\\\"token comment\\\">/* some other routes */</span><span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">RedirectWithStatus</span></span> <span class=\\\"token attr-name\\\">status</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token number\\\">301</span><span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token attr-name\\\">from</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/users<span class=\\\"token punctuation\\\">&quot;</span></span> <span class=\\\"token attr-name\\\">to</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/profiles<span class=\\\"token punctuation\\\">&quot;</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">RedirectWithStatus</span></span>\\n        <span class=\\\"token attr-name\\\">status</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token number\\\">302</span><span class=\\\"token punctuation\\\">}</span></span>\\n        <span class=\\\"token attr-name\\\">from</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/courses<span class=\\\"token punctuation\\\">&quot;</span></span>\\n        <span class=\\\"token attr-name\\\">to</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/dashboard<span class=\\\"token punctuation\\\">&quot;</span></span>\\n      <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Switch</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token comment\\\">// on the server</span>\\n<span class=\\\"token keyword\\\">const</span> context <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> markup <span class=\\\"token operator\\\">=</span> ReactDOMServer<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">renderToString</span><span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">StaticRouter</span></span> <span class=\\\"token attr-name\\\">context</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>context<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">App</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">StaticRouter</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>context<span class=\\\"token punctuation\\\">.</span>url<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">// can use the `context.status` that</span>\\n  <span class=\\\"token comment\\\">// we added in RedirectWithStatus</span>\\n  <span class=\\\"token function\\\">redirect</span><span class=\\\"token punctuation\\\">(</span>context<span class=\\\"token punctuation\\\">.</span>status<span class=\\\"token punctuation\\\">,</span> context<span class=\\\"token punctuation\\\">.</span>url<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n<h2 id=\\\"server-rendering-404-401-or-any-other-status\\\"><a href=\\\"/web/guides/server-rendering/404-401-or-any-other-status\\\" class=\\\"internal-link\\\">404, 401, or any other status</a></h2>\\n<p>We can do the same thing as above. Create a component that adds some context and render it anywhere in the app to get a different status code.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">Status</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\"><span class=\\\"token punctuation\\\">{</span> code<span class=\\\"token punctuation\\\">,</span> children <span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span>\\n      <span class=\\\"token attr-name\\\">render</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\"><span class=\\\"token punctuation\\\">{</span> staticContext <span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>staticContext<span class=\\\"token punctuation\\\">)</span> staticContext<span class=\\\"token punctuation\\\">.</span>status <span class=\\\"token operator\\\">=</span> code<span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">return</span> children<span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></span>\\n    <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n<p>Now you can render a <code>Status</code> anywhere in the app that you want to add the code to <code>staticContext</code>.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">NotFound</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Status</span></span> <span class=\\\"token attr-name\\\">code</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token number\\\">404</span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>h1</span><span class=\\\"token punctuation\\\">&gt;</span></span>Sorry<span class=\\\"token punctuation\\\">,</span> can&#x2019;t find that<span class=\\\"token punctuation\\\">.</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>h1</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Status</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">App</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Switch</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/about<span class=\\\"token punctuation\\\">&quot;</span></span> <span class=\\\"token attr-name\\\">component</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>About<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/dashboard<span class=\\\"token punctuation\\\">&quot;</span></span> <span class=\\\"token attr-name\\\">component</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>Dashboard<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token attr-name\\\">component</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>NotFound<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Switch</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n<h2 id=\\\"server-rendering-putting-it-all-together\\\"><a href=\\\"/web/guides/server-rendering/putting-it-all-together\\\" class=\\\"internal-link\\\">Putting it all together</a></h2>\\n<p>This isn&#x2019;t a real app, but it shows all of the general pieces you&#x2019;ll\\nneed to put it all together.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">import</span> http <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;http&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> React <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> ReactDOMServer <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react-dom/server&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> StaticRouter <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react-router-dom&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">import</span> App <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;./App.js&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n\\nhttp\\n  <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">createServer</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">req<span class=\\\"token punctuation\\\">,</span> res</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> context <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token keyword\\\">const</span> html <span class=\\\"token operator\\\">=</span> ReactDOMServer<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">renderToString</span><span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">StaticRouter</span></span> <span class=\\\"token attr-name\\\">location</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>req<span class=\\\"token punctuation\\\">.</span>url<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token attr-name\\\">context</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>context<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">App</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">StaticRouter</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>context<span class=\\\"token punctuation\\\">.</span>url<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      res<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">writeHead</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">301</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>\\n        Location<span class=\\\"token punctuation\\\">:</span> context<span class=\\\"token punctuation\\\">.</span>url\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      res<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">end</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n      res<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">write</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">\\n      &lt;!doctype html&gt;\\n      &lt;div id=&quot;app&quot;&gt;</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>html<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">&lt;/div&gt;\\n    </span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      res<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">end</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">listen</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">3000</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n<p>And then the client:</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">import</span> ReactDOM <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react-dom&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> BrowserRouter <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react-router-dom&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">import</span> App <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;./App.js&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n\\nReactDOM<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">BrowserRouter</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">App</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">BrowserRouter</span></span><span class=\\\"token punctuation\\\">&gt;</span></span><span class=\\\"token punctuation\\\">,</span>\\n  document<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getElementById</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;app&quot;</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n<h2 id=\\\"server-rendering-data-loading\\\"><a href=\\\"/web/guides/server-rendering/data-loading\\\" class=\\\"internal-link\\\">Data Loading</a></h2>\\n<p>There are so many different approaches to this, and there&#x2019;s no clear best practice yet, so we seek to be composable with any approach, and not prescribe or lean toward one or the other. We&#x2019;re confident the router can fit inside the constraints of your application.</p>\\n<p>The primary constraint is that you want to load data before you render. React Router exports the <code>matchPath</code> static function that it uses internally to match locations to routes. You can use this function on the server to help determine what your data dependencies will be before rendering.</p>\\n<p>The gist of this approach relies on a static route config used to both render your routes and match against before rendering to determine data dependencies.</p>\\n<pre><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">const</span> routes <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span>\\n  <span class=\\\"token punctuation\\\">{</span>\\n    path<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">&quot;/&quot;</span><span class=\\\"token punctuation\\\">,</span>\\n    component<span class=\\\"token punctuation\\\">:</span> Root<span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token function-variable function\\\">loadData</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token function\\\">getSomeData</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token comment\\\">// etc.</span>\\n<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n<p>Then use this config to render your routes in the app:</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> routes <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;./routes.js&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">App</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Switch</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token punctuation\\\">{</span>routes<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">map</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">route</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">(</span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token spread\\\"><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">...</span><span class=\\\"token attr-value\\\">route</span><span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n      <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Switch</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n<p>Then on the server you&#x2019;d have something like:</p>\\n<pre><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> matchPath <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react-router-dom&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// inside a request</span>\\n<span class=\\\"token keyword\\\">const</span> promises <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// use `some` to imitate `&lt;Switch&gt;` behavior of selecting only</span>\\n<span class=\\\"token comment\\\">// the first to match</span>\\nroutes<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">some</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">route</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">// use `matchPath` here</span>\\n  <span class=\\\"token keyword\\\">const</span> match <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">matchPath</span><span class=\\\"token punctuation\\\">(</span>req<span class=\\\"token punctuation\\\">.</span>path<span class=\\\"token punctuation\\\">,</span> route<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>match<span class=\\\"token punctuation\\\">)</span> promises<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">push</span><span class=\\\"token punctuation\\\">(</span>route<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">loadData</span><span class=\\\"token punctuation\\\">(</span>match<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">return</span> match<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\nPromise<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">all</span><span class=\\\"token punctuation\\\">(</span>promises<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">data</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">// do something w/ the data so the client</span>\\n  <span class=\\\"token comment\\\">// can access it then render the app</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n<p>And finally, the client will need to pick up the data. Again, we aren&#x2019;t in the business of prescribing a data loading pattern for your app, but these are the touch points you&#x2019;ll need to implement.</p>\\n\",\"headers\":[{\"text\":\"Adding app specific context information\",\"slug\":\"adding-app-specific-context-information\"},{\"text\":\"404, 401, or any other status\",\"slug\":\"404-401-or-any-other-status\"},{\"text\":\"Putting it all together\",\"slug\":\"putting-it-all-together\"},{\"text\":\"Data Loading\",\"slug\":\"data-loading\"}],\"title\":{\"text\":\"Server Rendering\",\"slug\":\"server-rendering\"}}","module.exports = {\"markup\":\"<h1 id=\\\"code-splitting\\\"><a href=\\\"/web/guides/code-splitting\\\" class=\\\"internal-link\\\">Code Splitting</a></h1>\\n<p>One great feature of the web is that we don&#x2019;t have to make our visitors download the entire app before they can use it. You can think of code splitting as incrementally downloading the app. To accomplish this we&#x2019;ll use <a href=\\\"https://webpack.js.org/\\\">webpack</a>, <a href=\\\"https://babeljs.io/docs/plugins/syntax-dynamic-import/\\\"><code>@babel/plugin-syntax-dynamic-import</code></a>, and <a href=\\\"https://github.com/smooth-code/loadable-components\\\"><code>loadable-components</code></a>.</p>\\n<p><a href=\\\"https://webpack.js.org/\\\">webpack</a> has built-in support for <a href=\\\"https://github.com/tc39/proposal-dynamic-import\\\">dynamic imports</a>; however, if you are using <a href=\\\"https://babeljs.io/\\\">Babel</a> (e.g., to compile JSX to JavaScript) then you will need to use the <a href=\\\"https://babeljs.io/docs/plugins/syntax-dynamic-import/\\\"><code>@babel/plugin-syntax-dynamic-import</code></a> plugin. This is a syntax-only plugin, meaning Babel won&#x2019;t do any additional transformations. The plugin simply allows Babel to parse dynamic imports so webpack can bundle them as a code split. Your <code>.babelrc</code> should look something like this:</p>\\n<pre><code class=\\\"language-json\\\"><span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token property\\\">&quot;presets&quot;</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">&quot;@babel/preset-react&quot;</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">&quot;plugins&quot;</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">&quot;@babel/plugin-syntax-dynamic-import&quot;</span><span class=\\\"token punctuation\\\">]</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n<p><a href=\\\"https://github.com/smooth-code/loadable-components\\\"><code>loadable-components</code></a> is a library for loading components with dynamic imports. It handles all sorts of edge cases automatically and makes code splitting simple! Here&#x2019;s an example of how to use <a href=\\\"https://github.com/smooth-code/loadable-components\\\"><code>loadable-components</code></a>:</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">import</span> loadable <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;@loadable/component&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> Loading <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;./Loading.js&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> LoadableComponent <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">loadable</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token keyword\\\">import</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;./Dashboard.js&quot;</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>\\n  fallback<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Loading</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">LoadableDashboard</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">LoadableComponent</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n<p>That&#x2019;s all there is to it! Simply use <code>LoadableDashboard</code> (or whatever you named your component) and it will automatically be loaded and rendered when you use it in your application. The <code>fallback</code> is a placeholder component to show while the real component is loading.</p>\\n<p>Full documentation is available <a href=\\\"https://www.smooth-code.com/open-source/loadable-components/docs/getting-started/\\\">here</a></p>\\n<h2 id=\\\"code-splitting-code-splitting-and-server-side-rendering\\\"><a href=\\\"/web/guides/code-splitting/code-splitting-and-server-side-rendering\\\" class=\\\"internal-link\\\">Code Splitting and Server-Side Rendering</a></h2>\\n<p><a href=\\\"https://github.com/smooth-code/loadable-components\\\"><code>loadable-components</code></a> includes <a href=\\\"https://www.smooth-code.com/open-source/loadable-components/docs/server-side-rendering/\\\">a guide for server-side rendering</a>.</p>\\n\",\"headers\":[{\"text\":\"Code Splitting and Server-Side Rendering\",\"slug\":\"code-splitting-and-server-side-rendering\"}],\"title\":{\"text\":\"Code Splitting\",\"slug\":\"code-splitting\"}}","module.exports = {\"markup\":\"<h1 id=\\\"scroll-restoration\\\"><a href=\\\"/web/guides/scroll-restoration\\\" class=\\\"internal-link\\\">Scroll Restoration</a></h1>\\n<p>In earlier versions of React Router we provided out-of-the-box support for scroll restoration and people have been asking for it ever since. Hopefully this document helps you get what you need out of the scroll bar and routing!</p>\\n<p>Browsers are starting to handle scroll restoration with <code>history.pushState</code> on their own in the same manner they handle it with normal browser navigation. It already works in chrome and it&#x2019;s really great. <a href=\\\"https://majido.github.io/scroll-restoration-proposal/history-based-api.html#web-idl\\\">Here&#x2019;s the Scroll Restoration Spec</a>.</p>\\n<p>Because browsers are starting to handle the &#x201C;default case&#x201D; and apps have varying scrolling needs (like this website!), we don&#x2019;t ship with default scroll management. This guide should help you implement whatever scrolling needs you have.</p>\\n<h2 id=\\\"scroll-restoration-scroll-to-top\\\"><a href=\\\"/web/guides/scroll-restoration/scroll-to-top\\\" class=\\\"internal-link\\\">Scroll to top</a></h2>\\n<p>Most of the time all you need is to &#x201C;scroll to the top&#x201D; because you have a long content page, that when navigated to, stays scrolled down. This is straightforward to handle with a <code>&lt;ScrollToTop&gt;</code> component that will scroll the window up on every navigation:</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> useEffect <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> useLocation <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react-router-dom&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">ScrollToTop</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> pathname <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useLocation</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token function\\\">useEffect</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">{</span>\\n    window<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">scrollTo</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">[</span>pathname<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n<p>If you aren&#x2019;t running React 16.8 yet, you can do the same thing with a <code>React.Component</code> subclass:</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">import</span> React <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> withRouter <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react-router-dom&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">ScrollToTop</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">componentDidUpdate</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">prevProps</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">.</span>location<span class=\\\"token punctuation\\\">.</span>pathname <span class=\\\"token operator\\\">!==</span> prevProps<span class=\\\"token punctuation\\\">.</span>location<span class=\\\"token punctuation\\\">.</span>pathname\\n    <span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      window<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">scrollTo</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token function\\\">withRouter</span><span class=\\\"token punctuation\\\">(</span>ScrollToTop<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n<p>Then render it at the top of your app, but below Router</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">App</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Router</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">ScrollToTop</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">App</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Router</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n<p>If you have a tab interface connected to the router, then you probably don&#x2019;t want to be scrolling to the top when they switch tabs. Instead, how about a <code>&lt;ScrollToTopOnMount&gt;</code> in the specific places you need it?</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> useEffect <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">ScrollToTopOnMount</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">useEffect</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">{</span>\\n    window<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">scrollTo</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token comment\\\">// Render this somewhere using:</span>\\n<span class=\\\"token comment\\\">// &lt;Route path=&quot;...&quot; children={&lt;LongContent /&gt;} /&gt;</span>\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">LongContent</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">ScrollToTopOnMount</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>h1</span><span class=\\\"token punctuation\\\">&gt;</span></span>Here is my long content page<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>h1</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>p</span><span class=\\\"token punctuation\\\">&gt;</span></span><span class=\\\"token operator\\\">...</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>p</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n<p>Again, if you aren&#x2019;t running React 16.8 yet, you can do the same thing with a <code>React.Component</code> subclass:</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">import</span> React <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">ScrollToTopOnMount</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">componentDidMount</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    window<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">scrollTo</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token comment\\\">// Render this somewhere using:</span>\\n<span class=\\\"token comment\\\">// &lt;Route path=&quot;...&quot; children={&lt;LongContent /&gt;} /&gt;</span>\\n<span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">LongContent</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">ScrollToTopOnMount</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>h1</span><span class=\\\"token punctuation\\\">&gt;</span></span>Here is my long content page<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>h1</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>p</span><span class=\\\"token punctuation\\\">&gt;</span></span><span class=\\\"token operator\\\">...</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>p</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n<h2 id=\\\"scroll-restoration-generic-solution\\\"><a href=\\\"/web/guides/scroll-restoration/generic-solution\\\" class=\\\"internal-link\\\">Generic Solution</a></h2>\\n<p>For a generic solution (and what browsers are starting to implement natively) we&#x2019;re talking about two things:</p>\\n<ol>\\n<li>Scrolling up on navigation so you don&#x2019;t start a new screen scrolled to the bottom</li>\\n<li>Restoring scroll positions of the window and overflow elements on &#x201C;back&#x201D; and &#x201C;forward&#x201D; clicks (but not Link clicks!)</li>\\n</ol>\\n<p>At one point we were wanting to ship a generic API. Here&#x2019;s what we were headed toward:</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Router</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">ScrollRestoration</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>h1</span><span class=\\\"token punctuation\\\">&gt;</span></span>App<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>h1</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">RestoredScroll</span></span> <span class=\\\"token attr-name\\\">id</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>bunny<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span> <span class=\\\"token attr-name\\\">style</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">{</span> height<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">&quot;200px&quot;</span><span class=\\\"token punctuation\\\">,</span> overflow<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">&quot;auto&quot;</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n          <span class=\\\"token constant\\\">I</span> will overflow\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">RestoredScroll</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">ScrollRestoration</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Router</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n</code></pre>\\n<p>First, <code>ScrollRestoration</code> would scroll the window up on navigation. Second, it would use <code>location.key</code> to save the window scroll position <em>and</em> the scroll positions of <code>RestoredScroll</code> components to <code>sessionStorage</code>. Then, when <code>ScrollRestoration</code> or <code>RestoredScroll</code> components mount, they could look up their position from <code>sessionsStorage</code>.</p>\\n<p>The tricky part was defining an &#x201C;opt-out&#x201D; API for when you don&#x2019;t want the window scroll to be managed. For example, if you have some tab navigation floating inside the content of your page you probably <em>don&#x2019;t</em> want to scroll to the top (the tabs might be scrolled out of view!).</p>\\n<p>When we learned that Chrome manages scroll position for us now, and realized that different apps are going to have different scrolling needs, we kind of lost the belief that we needed to provide something&#x2013;especially when people just want to scroll to the top (which you saw is straight-forward to add to your app on your own).</p>\\n<p>Based on this, we no longer feel strongly enough to do the work ourselves (like you we have limited time!). But, we&#x2019;d love to help anybody who feels inclined to implement a generic solution. A solid solution could even live in the project. Hit us up if you get started on it :)</p>\\n\",\"headers\":[{\"text\":\"Scroll to top\",\"slug\":\"scroll-to-top\"},{\"text\":\"Generic Solution\",\"slug\":\"generic-solution\"}],\"title\":{\"text\":\"Scroll Restoration\",\"slug\":\"scroll-restoration\"}}","module.exports = {\"markup\":\"<h1 id=\\\"philosophy\\\"><a href=\\\"/web/guides/philosophy\\\" class=\\\"internal-link\\\">Philosophy</a></h1>\\n<p>This guide&#x2019;s purpose is to explain the mental model to have when using React Router. We call it &#x201C;Dynamic Routing&#x201D;, which is quite different from the &#x201C;Static Routing&#x201D; you&#x2019;re probably more familiar with.</p>\\n<h2 id=\\\"philosophy-static-routing\\\"><a href=\\\"/web/guides/philosophy/static-routing\\\" class=\\\"internal-link\\\">Static Routing</a></h2>\\n<p>If you&#x2019;ve used Rails, Express, Ember, Angular etc. you&#x2019;ve used static routing. In these frameworks, you declare your routes as part of your app&#x2019;s initialization before any rendering takes place. React Router pre-v4 was also static (mostly). Let&#x2019;s take a look at how to configure routes in express:</p>\\n<pre><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">// Express Style routing:</span>\\napp<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">get</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;/&quot;</span><span class=\\\"token punctuation\\\">,</span> handleIndex<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\napp<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">get</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;/invoices&quot;</span><span class=\\\"token punctuation\\\">,</span> handleInvoices<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\napp<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">get</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;/invoices/:id&quot;</span><span class=\\\"token punctuation\\\">,</span> handleInvoice<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\napp<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">get</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;/invoices/:id/edit&quot;</span><span class=\\\"token punctuation\\\">,</span> handleInvoiceEdit<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\napp<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">listen</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n<p>Note how the routes are declared before the app listens. The client side routers we&#x2019;ve used are similar. In Angular you declare your routes up front and then import them to the top-level <code>AppModule</code> before rendering:</p>\\n<pre><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">// Angular Style routing:</span>\\n<span class=\\\"token keyword\\\">const</span> appRoutes<span class=\\\"token punctuation\\\">:</span> Routes <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span>\\n  <span class=\\\"token punctuation\\\">{</span>\\n    path<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">&quot;crisis-center&quot;</span><span class=\\\"token punctuation\\\">,</span>\\n    component<span class=\\\"token punctuation\\\">:</span> CrisisListComponent\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">{</span>\\n    path<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">&quot;hero/:id&quot;</span><span class=\\\"token punctuation\\\">,</span>\\n    component<span class=\\\"token punctuation\\\">:</span> HeroDetailComponent\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">{</span>\\n    path<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">&quot;heroes&quot;</span><span class=\\\"token punctuation\\\">,</span>\\n    component<span class=\\\"token punctuation\\\">:</span> HeroListComponent<span class=\\\"token punctuation\\\">,</span>\\n    data<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span> title<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">&quot;Heroes List&quot;</span> <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">{</span>\\n    path<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">&quot;&quot;</span><span class=\\\"token punctuation\\\">,</span>\\n    redirectTo<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">&quot;/heroes&quot;</span><span class=\\\"token punctuation\\\">,</span>\\n    pathMatch<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">&quot;full&quot;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">{</span>\\n    path<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">&quot;**&quot;</span><span class=\\\"token punctuation\\\">,</span>\\n    component<span class=\\\"token punctuation\\\">:</span> PageNotFoundComponent\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n\\n@<span class=\\\"token function\\\">NgModule</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n  imports<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span>RouterModule<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">forRoot</span><span class=\\\"token punctuation\\\">(</span>appRoutes<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">]</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">AppModule</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n<p>Ember has a conventional <code>routes.js</code> file that the build reads and\\nimports into the application for you. Again, this happens before\\nyour app renders.</p>\\n<pre><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">// Ember Style Router:</span>\\nRouter<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">map</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">route</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;about&quot;</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">route</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;contact&quot;</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">route</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;rentals&quot;</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">route</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;show&quot;</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span> path<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">&quot;/:rental_id&quot;</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> Router<span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n<p>Though the APIs are different, they all share the model of &#x201C;static routes&#x201D;. React Router also followed that lead up until v4.</p>\\n<p>To be successful with React Router, you need to forget all that! :O</p>\\n<h2 id=\\\"philosophy-backstory\\\"><a href=\\\"/web/guides/philosophy/backstory\\\" class=\\\"internal-link\\\">Backstory</a></h2>\\n<p>To be candid, we were pretty frustrated with the direction we&#x2019;d taken React Router by v2. We (Michael and Ryan) felt limited by the API, recognized we were reimplementing parts of React (lifecycles, and more), and it just didn&#x2019;t match the mental model React has given us for composing UI.</p>\\n<p>We were walking through the hallway of a hotel just before a workshop discussing what to do about it. We asked each other: &#x201C;What would it look like if we built the router using the patterns we teach in our workshops?&#x201D;</p>\\n<p>It was only a matter of hours into development that we had a proof-of-concept that we knew was the future we wanted for routing. We ended up with API that wasn&#x2019;t &#x201C;outside&#x201D; of React, an API that composed, or naturally fell into place, with the rest of React. We think you&#x2019;ll love it.</p>\\n<h2 id=\\\"philosophy-dynamic-routing\\\"><a href=\\\"/web/guides/philosophy/dynamic-routing\\\" class=\\\"internal-link\\\">Dynamic Routing</a></h2>\\n<p>When we say dynamic routing, we mean routing that takes place <strong>as your app is rendering</strong>, not in a configuration or convention outside of a running app. That means almost everything is a component in React Router. Here&#x2019;s a 60 second review of the API to see how it works:</p>\\n<p>First, grab yourself a <code>Router</code> component for the environment you&#x2019;re targeting and render it at the top of your app.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token comment\\\">// react-native</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> NativeRouter <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react-router-native&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// react-dom (what we&apos;ll use here)</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> BrowserRouter <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react-router-dom&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n\\nReactDOM<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">BrowserRouter</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">App</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">BrowserRouter</span></span><span class=\\\"token punctuation\\\">&gt;</span></span><span class=\\\"token punctuation\\\">,</span>\\n  el\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n<p>Next, grab the link component to link to a new location:</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">App</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>nav</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Link</span></span> <span class=\\\"token attr-name\\\">to</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/dashboard<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>Dashboard<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Link</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>nav</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n<p>Finally, render a <code>Route</code> to show some UI when the user visits\\n<code>/dashboard</code>.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">App</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>nav</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Link</span></span> <span class=\\\"token attr-name\\\">to</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/dashboard<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>Dashboard<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Link</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>nav</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/dashboard<span class=\\\"token punctuation\\\">&quot;</span></span> <span class=\\\"token attr-name\\\">component</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>Dashboard<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n<p>The <code>Route</code> will render <code>&lt;Dashboard {...props}/&gt;</code> where <code>props</code> are some router specific things that look like <code>{ match, location, history }</code>. If the user is <strong>not</strong> at <code>/dashboard</code> then the <code>Route</code> will render <code>null</code>. That&#x2019;s pretty much all there is to it.</p>\\n<h2 id=\\\"philosophy-nested-routes\\\"><a href=\\\"/web/guides/philosophy/nested-routes\\\" class=\\\"internal-link\\\">Nested Routes</a></h2>\\n<p>Lots of routers have some concept of &#x201C;nested routes&#x201D;. If you&#x2019;ve used versions of React Router previous to v4, you&#x2019;ll know it did too! When you move from a static route configuration to dynamic, rendered routes, how do you &#x201C;nest routes&#x201D;? Well, how do you nest a <code>div</code>?</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">App</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">BrowserRouter</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token punctuation\\\">{</span><span class=\\\"token comment\\\">/* here&apos;s a div */</span><span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token punctuation\\\">{</span><span class=\\\"token comment\\\">/* here&apos;s a Route */</span><span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/tacos<span class=\\\"token punctuation\\\">&quot;</span></span> <span class=\\\"token attr-name\\\">component</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>Tacos<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">BrowserRouter</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// when the url matches `/tacos` this component renders</span>\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">Tacos</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\"><span class=\\\"token punctuation\\\">{</span> match <span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token comment\\\">// here&apos;s a nested div</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token punctuation\\\">{</span><span class=\\\"token comment\\\">/* here&apos;s a nested Route,\\n        match.url helps us make a relative path */</span><span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>match<span class=\\\"token punctuation\\\">.</span>url <span class=\\\"token operator\\\">+</span> <span class=\\\"token string\\\">&quot;/carnitas&quot;</span><span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token attr-name\\\">component</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>Carnitas<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n<p>See how the router has no &#x201C;nesting&#x201D; API? <code>Route</code> is just a component, just like <code>div</code>. So to nest a <code>Route</code> or a <code>div</code>, you just &#x2026; do it.</p>\\n<p>Let&#x2019;s get trickier.</p>\\n<h2 id=\\\"philosophy-responsive-routes\\\"><a href=\\\"/web/guides/philosophy/responsive-routes\\\" class=\\\"internal-link\\\">Responsive Routes</a></h2>\\n<p>Consider a user navigates to <code>/invoices</code>. Your app is adaptive to different screen sizes, they have a narrow viewport, and so you only show them the list of invoices and a link to the invoice dashboard. They can navigate deeper from there.</p>\\n<pre><code class=\\\"language-asciidoc\\\">Small Screen\\nurl: /invoices\\n\\n<span class=\\\"token inline\\\"><span class=\\\"token punctuation\\\">+</span>----------------------<span class=\\\"token punctuation\\\">+</span></span>\\n|                      |\\n|      Dashboard       |\\n|                      |\\n<span class=\\\"token inline\\\"><span class=\\\"token punctuation\\\">+</span>----------------------<span class=\\\"token punctuation\\\">+</span></span>\\n|                      |\\n|      Invoice 01      |\\n|                      |\\n<span class=\\\"token inline\\\"><span class=\\\"token punctuation\\\">+</span>----------------------<span class=\\\"token punctuation\\\">+</span></span>\\n|                      |\\n|      Invoice 02      |\\n|                      |\\n<span class=\\\"token inline\\\"><span class=\\\"token punctuation\\\">+</span>----------------------<span class=\\\"token punctuation\\\">+</span></span>\\n|                      |\\n|      Invoice 03      |\\n|                      |\\n<span class=\\\"token inline\\\"><span class=\\\"token punctuation\\\">+</span>----------------------<span class=\\\"token punctuation\\\">+</span></span>\\n|                      |\\n|      Invoice 04      |\\n|                      |\\n<span class=\\\"token inline\\\"><span class=\\\"token punctuation\\\">+</span>----------------------<span class=\\\"token punctuation\\\">+</span></span>\\n</code></pre>\\n<p>On a larger screen we&#x2019;d like to show a master-detail view where the navigation is on the left and the dashboard or specific invoices show up on the right.</p>\\n<pre><code class=\\\"language-asciidoc\\\">Large Screen\\nurl: /invoices/dashboard\\n\\n<span class=\\\"token inline\\\"><span class=\\\"token punctuation\\\">+</span>----------------------<span class=\\\"token punctuation\\\">+</span></span>---------------------------+\\n|                      |                           |\\n|      Dashboard       |                           |\\n|                      |   Unpaid:             5   |\\n<span class=\\\"token inline\\\"><span class=\\\"token punctuation\\\">+</span>----------------------<span class=\\\"token punctuation\\\">+</span></span>                           |\\n|                      |   Balance:   $53,543.00   |\\n|      Invoice 01      |                           |\\n|                      |   Past Due:           2   |\\n<span class=\\\"token inline\\\"><span class=\\\"token punctuation\\\">+</span>----------------------<span class=\\\"token punctuation\\\">+</span></span>                           |\\n|                      |                           |\\n|      Invoice 02      |                           |\\n|                      |   <span class=\\\"token inline\\\"><span class=\\\"token punctuation\\\">+</span>-------------------<span class=\\\"token punctuation\\\">+</span></span>   |\\n<span class=\\\"token inline\\\"><span class=\\\"token punctuation\\\">+</span>----------------------<span class=\\\"token punctuation\\\">+</span></span>   |                   |   |\\n|                      |   |  +    +     +     |   |\\n|      Invoice 03      |   |  | +  |     |     |   |\\n|                      |   |  | |  |  +  |  +  |   |\\n<span class=\\\"token inline\\\"><span class=\\\"token punctuation\\\">+</span>----------------------<span class=\\\"token punctuation\\\">+</span></span>   |  | |  |  |  |  |  |   |\\n|                      |   <span class=\\\"token inline\\\"><span class=\\\"token punctuation\\\">+</span>--<span class=\\\"token punctuation\\\">+</span></span>-<span class=\\\"token inline\\\"><span class=\\\"token punctuation\\\">+</span>--<span class=\\\"token punctuation\\\">+</span></span>--<span class=\\\"token inline\\\"><span class=\\\"token punctuation\\\">+</span>--<span class=\\\"token punctuation\\\">+</span></span>--<span class=\\\"token inline\\\"><span class=\\\"token punctuation\\\">+</span>--<span class=\\\"token punctuation\\\">+</span></span>   |\\n|      Invoice 04      |                           |\\n|                      |                           |\\n<span class=\\\"token inline\\\"><span class=\\\"token punctuation\\\">+</span>----------------------<span class=\\\"token punctuation\\\">+</span></span>---------------------------+\\n</code></pre>\\n<p>Now pause for a minute and think about the <code>/invoices</code> url for both screen sizes. Is it even a valid route for a large screen? What should we put on the right side?</p>\\n<pre><code class=\\\"language-asciidoc\\\">Large Screen\\nurl: /invoices\\n<span class=\\\"token inline\\\"><span class=\\\"token punctuation\\\">+</span>----------------------<span class=\\\"token punctuation\\\">+</span></span>---------------------------+\\n|                      |                           |\\n|      Dashboard       |                           |\\n|                      |                           |\\n<span class=\\\"token inline\\\"><span class=\\\"token punctuation\\\">+</span>----------------------<span class=\\\"token punctuation\\\">+</span></span>                           |\\n|                      |                           |\\n|      Invoice 01      |                           |\\n|                      |                           |\\n<span class=\\\"token inline\\\"><span class=\\\"token punctuation\\\">+</span>----------------------<span class=\\\"token punctuation\\\">+</span></span>                           |\\n|                      |                           |\\n|      Invoice 02      |             ???           |\\n|                      |                           |\\n<span class=\\\"token inline\\\"><span class=\\\"token punctuation\\\">+</span>----------------------<span class=\\\"token punctuation\\\">+</span></span>                           |\\n|                      |                           |\\n|      Invoice 03      |                           |\\n|                      |                           |\\n<span class=\\\"token inline\\\"><span class=\\\"token punctuation\\\">+</span>----------------------<span class=\\\"token punctuation\\\">+</span></span>                           |\\n|                      |                           |\\n|      Invoice 04      |                           |\\n|                      |                           |\\n<span class=\\\"token inline\\\"><span class=\\\"token punctuation\\\">+</span>----------------------<span class=\\\"token punctuation\\\">+</span></span>---------------------------+\\n</code></pre>\\n<p>On a large screen, <code>/invoices</code> isn&#x2019;t a valid route, but on a small screen it is! To make things more interesting, consider somebody with a giant phone. They could be looking at <code>/invoices</code> in portrait orientation and then rotate their phone to landscape. Suddenly, we have enough room to show the master-detail UI, so you ought to redirect right then!</p>\\n<p>React Router&#x2019;s previous versions&#x2019; static routes didn&#x2019;t really have a composable answer for this. When routing is dynamic, however, you can declaratively compose this functionality. If you start thinking about routing as UI, not as static configuration, your intuition will lead you to the following code:</p>\\n<pre><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">App</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">AppLayout</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/invoices<span class=\\\"token punctuation\\\">&quot;</span></span> <span class=\\\"token attr-name\\\">component</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>Invoices<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">AppLayout</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">Invoices</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Layout</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token punctuation\\\">{</span><span class=\\\"token comment\\\">/* always show the nav */</span><span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">InvoicesNav</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Media</span></span> <span class=\\\"token attr-name\\\">query</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token constant\\\">PRETTY_SMALL</span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token punctuation\\\">{</span><span class=\\\"token parameter\\\">screenIsSmall</span> <span class=\\\"token operator\\\">=&gt;</span>\\n        screenIsSmall <span class=\\\"token operator\\\">?</span> <span class=\\\"token punctuation\\\">(</span>\\n          <span class=\\\"token comment\\\">// small screen has no redirect</span>\\n          <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Switch</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n            <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span>\\n              <span class=\\\"token attr-name\\\">exact</span>\\n              <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/invoices/dashboard<span class=\\\"token punctuation\\\">&quot;</span></span>\\n              <span class=\\\"token attr-name\\\">component</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>Dashboard<span class=\\\"token punctuation\\\">}</span></span>\\n            <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n            <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/invoices/:id<span class=\\\"token punctuation\\\">&quot;</span></span> <span class=\\\"token attr-name\\\">component</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>Invoice<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n          <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Switch</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n        <span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span>\\n          <span class=\\\"token comment\\\">// large screen does!</span>\\n          <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Switch</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n            <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span>\\n              <span class=\\\"token attr-name\\\">exact</span>\\n              <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/invoices/dashboard<span class=\\\"token punctuation\\\">&quot;</span></span>\\n              <span class=\\\"token attr-name\\\">component</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>Dashboard<span class=\\\"token punctuation\\\">}</span></span>\\n            <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n            <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/invoices/:id<span class=\\\"token punctuation\\\">&quot;</span></span> <span class=\\\"token attr-name\\\">component</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>Invoice<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n            <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Redirect</span></span> <span class=\\\"token attr-name\\\">from</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/invoices<span class=\\\"token punctuation\\\">&quot;</span></span> <span class=\\\"token attr-name\\\">to</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/invoices/dashboard<span class=\\\"token punctuation\\\">&quot;</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n          <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Switch</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n        <span class=\\\"token punctuation\\\">)</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Media</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Layout</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n<p>As the user rotates their phone from portrait to landscape, this code will automatically redirect them to the dashboard. <em>The set of valid routes change depending on the dynamic nature of a mobile device in a user&#x2019;s hands</em>.</p>\\n<p>This is just one example. There are many others we could discuss but we&#x2019;ll sum it up with this advice: To get your intuition in line with React Router&#x2019;s, think about components, not static routes. Think about how to solve the problem with React&#x2019;s declarative composability because nearly every &#x201C;React Router question&#x201D; is probably a &#x201C;React question&#x201D;.</p>\\n\",\"headers\":[{\"text\":\"Static Routing\",\"slug\":\"static-routing\"},{\"text\":\"Backstory\",\"slug\":\"backstory\"},{\"text\":\"Dynamic Routing\",\"slug\":\"dynamic-routing\"},{\"text\":\"Nested Routes\",\"slug\":\"nested-routes\"},{\"text\":\"Responsive Routes\",\"slug\":\"responsive-routes\"}],\"title\":{\"text\":\"Philosophy\",\"slug\":\"philosophy\"}}","module.exports = {\"markup\":\"<h1 id=\\\"testing\\\"><a href=\\\"/web/guides/testing\\\" class=\\\"internal-link\\\">Testing</a></h1>\\n<p>React Router relies on React context to work. This affects how you can\\ntest your components that use our components.</p>\\n<h2 id=\\\"testing-context\\\"><a href=\\\"/web/guides/testing/context\\\" class=\\\"internal-link\\\">Context</a></h2>\\n<p>If you try to unit test one of your components that renders a <code>&lt;Link&gt;</code> or a <code>&lt;Route&gt;</code>, etc. you&#x2019;ll get some errors and warnings about context. While you may be tempted to stub out the router context yourself, we recommend you wrap your unit test in one of the <code>Router</code> components: the base <code>Router</code> with a <code>history</code> prop, or a <code>&lt;StaticRouter&gt;</code>, <code>&lt;MemoryRouter&gt;</code>, or <code>&lt;BrowserRouter&gt;</code> (if <code>window.history</code> is available as a global in the test enviroment).</p>\\n<p>Using <code>MemoryRouter</code> or a custom <code>history</code> is recommended in order to be able to reset the router between tests.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Sidebar</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">Component</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">// ...</span>\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>button</span> <span class=\\\"token attr-name\\\">onClick</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>toggleExpand<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>expand<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>button</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>ul</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n          <span class=\\\"token punctuation\\\">{</span>users<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">map</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">user</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">(</span>\\n            <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>li</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n              <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Link</span></span> <span class=\\\"token attr-name\\\">to</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>user<span class=\\\"token punctuation\\\">.</span>path<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">&gt;</span></span><span class=\\\"token punctuation\\\">{</span>user<span class=\\\"token punctuation\\\">.</span>name<span class=\\\"token punctuation\\\">}</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Link</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n            <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>li</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n          <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>ul</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token comment\\\">// broken</span>\\n<span class=\\\"token function\\\">test</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;it expands when the button is clicked&quot;</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Sidebar</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token function\\\">click</span><span class=\\\"token punctuation\\\">(</span>theButton<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token function\\\">expect</span><span class=\\\"token punctuation\\\">(</span>theThingToBeOpen<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// fixed!</span>\\n<span class=\\\"token function\\\">test</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;it expands when the button is clicked&quot;</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">MemoryRouter</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Sidebar</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">MemoryRouter</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token function\\\">click</span><span class=\\\"token punctuation\\\">(</span>theButton<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token function\\\">expect</span><span class=\\\"token punctuation\\\">(</span>theThingToBeOpen<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n<h2 id=\\\"testing-starting-at-specific-routes\\\"><a href=\\\"/web/guides/testing/starting-at-specific-routes\\\" class=\\\"internal-link\\\">Starting at specific routes</a></h2>\\n<p><code>&lt;MemoryRouter&gt;</code> supports the <code>initialEntries</code> and <code>initialIndex</code> props,\\nso you can boot up an app (or any smaller part of an app) at a specific\\nlocation.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token function\\\">test</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;current user is active in sidebar&quot;</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">MemoryRouter</span></span> <span class=\\\"token attr-name\\\">initialEntries</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">&quot;/users/2&quot;</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Sidebar</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">MemoryRouter</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token function\\\">expectUserToBeActive</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n<h2 id=\\\"testing-navigating\\\"><a href=\\\"/web/guides/testing/navigating\\\" class=\\\"internal-link\\\">Navigating</a></h2>\\n<p>We have a lot of tests that the routes work when the location changes, so you probably don&#x2019;t need to test this stuff. But if you need to test navigation within your app, you can do so like this:</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token comment\\\">// app.js (a component file)</span>\\n<span class=\\\"token keyword\\\">import</span> React <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> Route<span class=\\\"token punctuation\\\">,</span> Link <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react-router-dom&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// our Subject, the App, but you can test any sub</span>\\n<span class=\\\"token comment\\\">// section of your app too</span>\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">App</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span>\\n      <span class=\\\"token attr-name\\\">exact</span>\\n      <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/<span class=\\\"token punctuation\\\">&quot;</span></span>\\n      <span class=\\\"token attr-name\\\">render</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">(</span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n          <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>h1</span><span class=\\\"token punctuation\\\">&gt;</span></span>Welcome<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>h1</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span></span>\\n    <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span>\\n      <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/dashboard<span class=\\\"token punctuation\\\">&quot;</span></span>\\n      <span class=\\\"token attr-name\\\">render</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">(</span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n          <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>h1</span><span class=\\\"token punctuation\\\">&gt;</span></span>Dashboard<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>h1</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n          <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Link</span></span> <span class=\\\"token attr-name\\\">to</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/<span class=\\\"token punctuation\\\">&quot;</span></span> <span class=\\\"token attr-name\\\">id</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>click-me<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n            Home\\n          <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Link</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span></span>\\n    <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// you can also use a renderer like &quot;@testing-library/react&quot; or &quot;enzyme/mount&quot; here</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> render<span class=\\\"token punctuation\\\">,</span> unmountComponentAtNode <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react-dom&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> act <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&apos;react-dom/test-utils&apos;</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> MemoryRouter <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react-router-dom&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// app.test.js</span>\\n<span class=\\\"token function\\\">it</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;navigates home when you click the logo&quot;</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">// in a real test a renderer like &quot;@testing-library/react&quot;</span>\\n  <span class=\\\"token comment\\\">// would take care of setting up the DOM elements</span>\\n  <span class=\\\"token keyword\\\">const</span> root <span class=\\\"token operator\\\">=</span> document<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">createElement</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&apos;div&apos;</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  document<span class=\\\"token punctuation\\\">.</span>body<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">appendChild</span><span class=\\\"token punctuation\\\">(</span>root<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token comment\\\">// Render app</span>\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">MemoryRouter</span></span> <span class=\\\"token attr-name\\\">initialEntries</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">&apos;/dashboard&apos;</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">App</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">MemoryRouter</span></span><span class=\\\"token punctuation\\\">&gt;</span></span><span class=\\\"token punctuation\\\">,</span>\\n    root\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token comment\\\">// Interact with page</span>\\n  <span class=\\\"token function\\\">act</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">// Find the link (perhaps using the text content)</span>\\n    <span class=\\\"token keyword\\\">const</span> goHomeLink <span class=\\\"token operator\\\">=</span> document<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">querySelector</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&apos;#click-me&apos;</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token comment\\\">// Click it</span>\\n    goHomeLink<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">dispatchEvent</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">MouseEvent</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;click&quot;</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span> bubbles<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token comment\\\">// Check correct page content showed up</span>\\n  <span class=\\\"token function\\\">expect</span><span class=\\\"token punctuation\\\">(</span>document<span class=\\\"token punctuation\\\">.</span>body<span class=\\\"token punctuation\\\">.</span>textContent<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">toBe</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&apos;Welcome&apos;</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n<h2 id=\\\"testing-checking-location-in-tests\\\"><a href=\\\"/web/guides/testing/checking-location-in-tests\\\" class=\\\"internal-link\\\">Checking location in tests</a></h2>\\n<p>You shouldn&#x2019;t have to access the <code>location</code> or <code>history</code> objects very often in tests, but if you do (such as to validate that new query params are set in the url bar), you can add a route that updates a variable in the test:</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token comment\\\">// app.test.js</span>\\n<span class=\\\"token function\\\">test</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;clicking filter links updates product query params&quot;</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">let</span> testHistory<span class=\\\"token punctuation\\\">,</span> testLocation<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">MemoryRouter</span></span> <span class=\\\"token attr-name\\\">initialEntries</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">&quot;/my/initial/route&quot;</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">App</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span>\\n        <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>*<span class=\\\"token punctuation\\\">&quot;</span></span>\\n        <span class=\\\"token attr-name\\\">render</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\"><span class=\\\"token punctuation\\\">{</span> history<span class=\\\"token punctuation\\\">,</span> location <span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">{</span>\\n          testHistory <span class=\\\"token operator\\\">=</span> history<span class=\\\"token punctuation\\\">;</span>\\n          testLocation <span class=\\\"token operator\\\">=</span> location<span class=\\\"token punctuation\\\">;</span>\\n          <span class=\\\"token keyword\\\">return</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></span>\\n      <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">MemoryRouter</span></span><span class=\\\"token punctuation\\\">&gt;</span></span><span class=\\\"token punctuation\\\">,</span>\\n    node\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token function\\\">act</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">// example: click a &lt;Link&gt; to /products?id=1234</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token comment\\\">// assert about url</span>\\n  <span class=\\\"token function\\\">expect</span><span class=\\\"token punctuation\\\">(</span>testLocation<span class=\\\"token punctuation\\\">.</span>pathname<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">toBe</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;/products&quot;</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> searchParams <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">URLSearchParams</span><span class=\\\"token punctuation\\\">(</span>testLocation<span class=\\\"token punctuation\\\">.</span>search<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token function\\\">expect</span><span class=\\\"token punctuation\\\">(</span>searchParams<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">has</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;id&quot;</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">toBe</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token function\\\">expect</span><span class=\\\"token punctuation\\\">(</span>searchParams<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">get</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;id&quot;</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">toEqual</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;1234&quot;</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n<h3>Alternatives</h3>\\n<ol>\\n<li>You can also use <code>BrowserRouter</code> if your test environment has the browser globals <code>window.location</code> and <code>window.history</code> (which is the default in Jest through JSDOM, but you cannot reset the history between tests).</li>\\n<li>Instead of passing a custom route to MemoryRouter, you can use the base <code>Router</code> with a <code>history</code> prop from the <a href=\\\"https://github.com/remix-run/history\\\"><code>history</code></a> package:</li>\\n</ol>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token comment\\\">// app.test.js</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> createMemoryHistory <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;history&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> Router <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react-router&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">test</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;redirects to login page&quot;</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> history <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">createMemoryHistory</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Router</span></span> <span class=\\\"token attr-name\\\">history</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>history<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">App</span></span> <span class=\\\"token attr-name\\\">signedInUser</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Router</span></span><span class=\\\"token punctuation\\\">&gt;</span></span><span class=\\\"token punctuation\\\">,</span>\\n    node\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token function\\\">expect</span><span class=\\\"token punctuation\\\">(</span>history<span class=\\\"token punctuation\\\">.</span>location<span class=\\\"token punctuation\\\">.</span>pathname<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">toBe</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;/login&quot;</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n<h2 id=\\\"testing-react-testing-library\\\"><a href=\\\"/web/guides/testing/react-testing-library\\\" class=\\\"internal-link\\\">React Testing Library</a></h2>\\n<p>See an example in the official documentation: <a href=\\\"https://testing-library.com/docs/example-react-router\\\">Testing React Router with React Testing Library</a></p>\\n\",\"headers\":[{\"text\":\"Context\",\"slug\":\"context\"},{\"text\":\"Starting at specific routes\",\"slug\":\"starting-at-specific-routes\"},{\"text\":\"Navigating\",\"slug\":\"navigating\"},{\"text\":\"Checking location in tests\",\"slug\":\"checking-location-in-tests\"},{\"text\":\"React Testing Library\",\"slug\":\"react-testing-library\"}],\"title\":{\"text\":\"Testing\",\"slug\":\"testing\"}}","module.exports = {\"markup\":\"<h1 id=\\\"deep-redux-integration\\\"><a href=\\\"/web/guides/deep-redux-integration\\\" class=\\\"internal-link\\\">Deep Redux Integration</a></h1>\\n<p>Redux is an important part of the React ecosystem. We want to make the integration of React Router and Redux as seamless as possible for people wanting to use both. To that end, some folks want to:</p>\\n<ol>\\n<li>Synchronize the routing data with, and accessed from, the store.</li>\\n<li>Be able to navigate by dispatching actions.</li>\\n<li>Have support for time travel debugging for route changes in the Redux devtools.</li>\\n</ol>\\n<p>All of this requires deeper integration.</p>\\n<p>Our recommendation is <strong>not to keep your routes in your Redux store at all</strong>. Here&#x2019;s our reasoning:</p>\\n<ol>\\n<li>Routing data is already a prop of most of your components that care about it. Whether it comes from the store or the router, your component&#x2019;s code is largely the same.</li>\\n<li>In most cases, you can use <code>Link</code>, <code>NavLink</code> and <code>Redirect</code> to perform navigation actions. Sometimes you might also need to navigate programmatically, after some asynchronous task that was originally initiated by an action. For example, you might dispatch an action when the user submits a login form. Your <a href=\\\"https://github.com/reduxjs/redux-thunk\\\">thunk</a>, <a href=\\\"https://redux-saga.js.org/\\\">saga</a> or other async handler then authenticates the credentials, <em>then</em> it needs to somehow navigate to a new page if successful. The solution here is simply to include the <code>history</code> object (provided to all route components) in the payload of the action, and your async handler can use this to navigate when appropriate.</li>\\n<li>Route changes are unlikely to matter for time travel debugging. The only obvious case is to debug issues with your router/store synchronization, and this problem goes away if you don&#x2019;t synchronize them at all.</li>\\n</ol>\\n<p>But if you feel strongly about synchronizing your routes with your store, you may want to try <a href=\\\"https://github.com/supasate/connected-react-router\\\">Connected React Router</a>, a third party binding for React Router and Redux.</p>\\n\",\"headers\":[],\"title\":{\"text\":\"Deep Redux Integration\",\"slug\":\"deep-redux-integration\"}}","module.exports = {\"markup\":\"<h1 id=\\\"static-routes\\\"><a href=\\\"/web/guides/static-routes\\\" class=\\\"internal-link\\\">Static Routes</a></h1>\\n<p>Previous versions of React Router used static routes to configure your application&#x2019;s routing. This allows for inspection and matching of routes before rendering. Since v4 moved to dynamic components instead of route configs, some previous use-cases became less obvious and tricky.</p>\\n<p>We are developing a package to work with static route configs and React Router, to continue to meet those use-cases. It is under development now but we&#x2019;d love for you to try it out and help out.</p>\\n<p><a href=\\\"https://github.com/remix-run/react-router/tree/main/packages/react-router-config\\\">React Router Config</a></p>\\n\",\"headers\":[],\"title\":{\"text\":\"Static Routes\",\"slug\":\"static-routes\"}}"],"sourceRoot":""}