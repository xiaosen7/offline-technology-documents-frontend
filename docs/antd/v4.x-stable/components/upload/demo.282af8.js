(window.webpackJsonp=window.webpackJsonp||[]).push([[207],{3909:function(Y,J,g){Y.exports={avatar:g(4787),basic:g(4788),"crop-image":g(4789),"customize-progress-bar":g(4795),defaultFileList:g(4796),directory:g(4797),"drag-sorting":g(4798),drag:g(4799),"file-type":g(4800),fileList:g(4801),"max-count":g(4802),"picture-card":g(4803),"picture-style":g(4804),"preview-file":g(4805),"transform-file":g(4806),"upload-custom-action-icon":g(4807),"upload-manually":g(4808),"upload-png-only":g(4809),"upload-with-aliyun-oss":g(4810)}},4059:function(Y,J,g){"use strict";(function(on){Object.defineProperty(J,"__esModule",{value:!0});function D(s){return typeof s=="object"&&!("toString"in s)?Object.prototype.toString.call(s).slice(8,-1):s}var mn=typeof on=="object"&&!0;function R(s,a){if(!s)throw mn?new Error("Invariant failed"):new Error(a())}J.invariant=R;var A=Object.prototype.hasOwnProperty,C=Array.prototype.splice,U=Object.prototype.toString;function N(s){return U.call(s).slice(8,-1)}var V=Object.assign||function(s,a){return Z(a).forEach(function(u){A.call(a,u)&&(s[u]=a[u])}),s},Z=typeof Object.getOwnPropertySymbols=="function"?function(s){return Object.keys(s).concat(Object.getOwnPropertySymbols(s))}:function(s){return Object.keys(s)};function O(s){return Array.isArray(s)?V(s.constructor(s.length),s):N(s)==="Map"?new Map(s):N(s)==="Set"?new Set(s):s&&typeof s=="object"?V(Object.create(Object.getPrototypeOf(s)),s):s}var B=function(){function s(){this.commands=V({},X),this.update=this.update.bind(this),this.update.extend=this.extend=this.extend.bind(this),this.update.isEquals=function(a,u){return a===u},this.update.newContext=function(){return new s().update}}return Object.defineProperty(s.prototype,"isEquals",{get:function(){return this.update.isEquals},set:function(a){this.update.isEquals=a},enumerable:!0,configurable:!0}),s.prototype.extend=function(a,u){this.commands[a]=u},s.prototype.update=function(a,u){var o=this,d=typeof u=="function"?{$apply:u}:u;Array.isArray(a)&&Array.isArray(d)||R(!Array.isArray(d),function(){return"update(): You provided an invalid spec to update(). The spec may not contain an array except as the value of $set, $push, $unshift, $splice or any custom command allowing an array value."}),R(typeof d=="object"&&d!==null,function(){return"update(): You provided an invalid spec to update(). The spec and every included key path must be plain objects containing one of the "+("following commands: "+Object.keys(o.commands).join(", ")+".")});var m=a;return Z(d).forEach(function(b){if(A.call(o.commands,b)){var S=a===m;m=o.commands[b](d[b],m,d,a),S&&o.isEquals(m,a)&&(m=a)}else{var x=N(a)==="Map"?o.update(a.get(b),d[b]):o.update(a[b],d[b]),j=N(m)==="Map"?m.get(b):m[b];(!o.isEquals(x,j)||typeof x=="undefined"&&!A.call(a,b))&&(m===a&&(m=O(a)),N(m)==="Map"?m.set(b,x):m[b]=x)}}),m},s}();J.Context=B;var X={$push:function(s,a,u){return un(a,u,"$push"),s.length?a.concat(s):a},$unshift:function(s,a,u){return un(a,u,"$unshift"),s.length?s.concat(a):a},$splice:function(s,a,u,o){return rn(a,u),s.forEach(function(d){cn(d),a===o&&d.length&&(a=O(o)),C.apply(a,d)}),a},$set:function(s,a,u){return F(u),s},$toggle:function(s,a){sn(s,"$toggle");var u=s.length?O(a):a;return s.forEach(function(o){u[o]=!a[o]}),u},$unset:function(s,a,u,o){return sn(s,"$unset"),s.forEach(function(d){Object.hasOwnProperty.call(a,d)&&(a===o&&(a=O(o)),delete a[d])}),a},$add:function(s,a,u,o){return t(a,"$add"),sn(s,"$add"),N(a)==="Map"?s.forEach(function(d){var m=d[0],b=d[1];a===o&&a.get(m)!==b&&(a=O(o)),a.set(m,b)}):s.forEach(function(d){a===o&&!a.has(d)&&(a=O(o)),a.add(d)}),a},$remove:function(s,a,u,o){return t(a,"$remove"),sn(s,"$remove"),s.forEach(function(d){a===o&&a.has(d)&&(a=O(o)),a.delete(d)}),a},$merge:function(s,a,u,o){return q(a,s),Z(s).forEach(function(d){s[d]!==a[d]&&(a===o&&(a=O(o)),a[d]=s[d])}),a},$apply:function(s,a){return kn(s),s(a)}},M=new B;J.isEquals=M.update.isEquals,J.extend=M.extend,J.default=M.update,J.default.default=Y.exports=V(J.default,J);function un(s,a,u){R(Array.isArray(s),function(){return"update(): expected target of "+D(u)+" to be an array; got "+D(s)+"."}),sn(a[u],u)}function sn(s,a){R(Array.isArray(s),function(){return"update(): expected spec of "+D(a)+" to be an array; got "+D(s)+". Did you forget to wrap your parameter in an array?"})}function rn(s,a){R(Array.isArray(s),function(){return"Expected $splice target to be an array; got "+D(s)}),cn(a.$splice)}function cn(s){R(Array.isArray(s),function(){return"update(): expected spec of $splice to be an array of arrays; got "+D(s)+". Did you forget to wrap your parameters in an array?"})}function kn(s){R(typeof s=="function",function(){return"update(): expected spec of $apply to be a function; got "+D(s)+"."})}function F(s){R(Object.keys(s).length===1,function(){return"Cannot have more than one key in an object with $set"})}function q(s,a){R(a&&typeof a=="object",function(){return"update(): $merge expects a spec of type 'object'; got "+D(a)}),R(s&&typeof s=="object",function(){return"update(): $merge expects a target of type 'object'; got "+D(s)})}function t(s,a){var u=N(s);R(u==="Map"||u==="Set",function(){return"update(): "+D(a)+" expects a target of type Set or Map; got "+D(u)})}}).call(this,g(478))},4787:function(Y,J,g){Y.exports={content:{"zh-CN":[["p","\u70B9\u51FB\u4E0A\u4F20\u7528\u6237\u5934\u50CF\uFF0C\u5E76\u4F7F\u7528 ",["code","beforeUpload"]," \u9650\u5236\u7528\u6237\u4E0A\u4F20\u7684\u56FE\u7247\u683C\u5F0F\u548C\u5927\u5C0F\u3002"],["blockquote",["p",["code","beforeUpload"]," \u7684\u8FD4\u56DE\u503C\u53EF\u4EE5\u662F\u4E00\u4E2A Promise \u4EE5\u652F\u6301\u5F02\u6B65\u5904\u7406\uFF0C\u5982\u670D\u52A1\u7AEF\u6821\u9A8C\u7B49\uFF1A",["a",{title:null,href:"https://upload-react-component.vercel.app/demo/before-upload#beforeupload"},"\u793A\u4F8B"],"\u3002"]]],"en-US":[["p","Click to upload user's avatar, and validate size and format of picture with ",["code","beforeUpload"],"."],["blockquote",["p","The return value of function ",["code","beforeUpload"]," can be a Promise to check asynchronously. ",["a",{title:null,href:"https://upload-react-component.vercel.app/demo/before-upload#beforeupload"},"demo"]]]]},meta:{order:1,title:{"zh-CN":"\u7528\u6237\u5934\u50CF","en-US":"Avatar"},filename:"components/upload/demo/avatar.md",id:"components-upload-demo-avatar"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:`import { LoadingOutlined<span class="token punctuation">,</span> PlusOutlined } from <span class="token string">'@ant-design/icons'</span><span class="token comment" spellcheck="true">;</span>
import { message<span class="token punctuation">,</span> Upload } from <span class="token string">'antd'</span><span class="token comment" spellcheck="true">;</span>
import type { UploadChangeParam } from <span class="token string">'antd/es/upload'</span><span class="token comment" spellcheck="true">;</span>
import type { RcFile<span class="token punctuation">,</span> UploadFile<span class="token punctuation">,</span> UploadProps } from <span class="token string">'antd/es/upload/interface'</span><span class="token comment" spellcheck="true">;</span>
import React<span class="token punctuation">,</span> { useState } from <span class="token string">'react'</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> getBase64 <span class="token operator">=</span> <span class="token punctuation">(</span>img<span class="token punctuation">:</span> RcFile<span class="token punctuation">,</span> callback<span class="token punctuation">:</span> <span class="token punctuation">(</span>url<span class="token punctuation">:</span> string<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> void<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
  <span class="token keyword">const</span> reader <span class="token operator">=</span> new <span class="token function">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  reader<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'load'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">callback</span><span class="token punctuation">(</span>reader<span class="token punctuation">.</span>result as string<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  reader<span class="token punctuation">.</span><span class="token function">readAsDataURL</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
}<span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> beforeUpload <span class="token operator">=</span> <span class="token punctuation">(</span>file<span class="token punctuation">:</span> RcFile<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
  <span class="token keyword">const</span> isJpgOrPng <span class="token operator">=</span> file<span class="token punctuation">.</span>type <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">'image/jpeg'</span> || file<span class="token punctuation">.</span>type <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">'image/png'</span><span class="token comment" spellcheck="true">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>!isJpgOrPng<span class="token punctuation">)</span> {
    message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">'You can only upload JPG/PNG file!'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  }
  <span class="token keyword">const</span> isLt2M <span class="token operator">=</span> file<span class="token punctuation">.</span>size <span class="token operator">/</span> <span class="token number">1024</span> <span class="token operator">/</span> <span class="token number">1024</span> <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token comment" spellcheck="true">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>!isLt2M<span class="token punctuation">)</span> {
    message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">'Image must smaller than 2MB!'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  }
  return isJpgOrPng <span class="token operator">&amp;</span><span class="token operator">&amp;</span> isLt2M<span class="token comment" spellcheck="true">;</span>
}<span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
  <span class="token keyword">const</span> <span class="token punctuation">[</span>loading<span class="token punctuation">,</span> setLoading<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>imageUrl<span class="token punctuation">,</span> setImageUrl<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>string<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> handleChange<span class="token punctuation">:</span> UploadProps<span class="token punctuation">[</span><span class="token string">'onChange'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>info<span class="token punctuation">:</span> UploadChangeParam<span class="token operator">&lt;</span>UploadFile<span class="token operator">></span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
    <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">'uploading'</span><span class="token punctuation">)</span> {
      <span class="token function">setLoading</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
      return<span class="token comment" spellcheck="true">;</span>
    }
    <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">'done'</span><span class="token punctuation">)</span> {
      <span class="token operator">/</span><span class="token operator">/</span> Get this url from response <span class="token keyword">in</span> real world<span class="token punctuation">.</span>
      <span class="token function">getBase64</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>originFileObj as RcFile<span class="token punctuation">,</span> url <span class="token operator">=</span><span class="token operator">></span> {
        <span class="token function">setLoading</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
        <span class="token function">setImageUrl</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
      }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    }
  }<span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> uploadButton <span class="token operator">=</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>div<span class="token operator">></span>
      {loading <span class="token operator">?</span> <span class="token operator">&lt;</span>LoadingOutlined <span class="token operator">/</span><span class="token operator">></span> <span class="token punctuation">:</span> <span class="token operator">&lt;</span>PlusOutlined <span class="token operator">/</span><span class="token operator">></span>}
      <span class="token operator">&lt;</span>div style<span class="token operator">=</span>{{ marginTop<span class="token punctuation">:</span> <span class="token number">8</span> }}<span class="token operator">></span>Upload<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>
  <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

  return <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>Upload
      name<span class="token operator">=</span><span class="token string">"avatar"</span>
      listType<span class="token operator">=</span><span class="token string">"picture-card"</span>
      className<span class="token operator">=</span><span class="token string">"avatar-uploader"</span>
      showUploadList<span class="token operator">=</span>{<span class="token boolean">false</span>}
      action<span class="token operator">=</span><span class="token string">"https://www.mocky.io/v2/5cc8019d300000980a055e76"</span>
      beforeUpload<span class="token operator">=</span>{beforeUpload}
      onChange<span class="token operator">=</span>{handleChange}
    <span class="token operator">></span>
      {imageUrl <span class="token operator">?</span> <span class="token operator">&lt;</span>img src<span class="token operator">=</span>{imageUrl} alt<span class="token operator">=</span><span class="token string">"avatar"</span> style<span class="token operator">=</span>{{ width<span class="token punctuation">:</span> <span class="token string">'100%'</span> }} <span class="token operator">/</span><span class="token operator">></span> <span class="token punctuation">:</span> uploadButton}
    <span class="token operator">&lt;</span><span class="token operator">/</span>Upload<span class="token operator">></span>
  <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
}<span class="token comment" spellcheck="true">;</span>

export <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>`}],highlightedCodes:{tsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> LoadingOutlined<span class="token punctuation">,</span> PlusOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> message<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> UploadChangeParam <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd/es/upload'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> RcFile<span class="token punctuation">,</span> UploadFile<span class="token punctuation">,</span> UploadProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd/es/upload/interface'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">getBase64</span> <span class="token operator">=</span> <span class="token punctuation">(</span>img<span class="token operator">:</span> RcFile<span class="token punctuation">,</span> <span class="token function-variable function">callback</span><span class="token operator">:</span> <span class="token punctuation">(</span>url<span class="token operator">:</span> string<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">void</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  reader<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'load'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">callback</span><span class="token punctuation">(</span>reader<span class="token punctuation">.</span>result <span class="token keyword">as</span> string<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  reader<span class="token punctuation">.</span><span class="token function">readAsDataURL</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">beforeUpload</span> <span class="token operator">=</span> <span class="token punctuation">(</span>file<span class="token operator">:</span> RcFile<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> isJpgOrPng <span class="token operator">=</span> file<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">'image/jpeg'</span> <span class="token operator">||</span> file<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">'image/png'</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isJpgOrPng<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">'You can only upload JPG/PNG file!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> isLt2M <span class="token operator">=</span> file<span class="token punctuation">.</span>size <span class="token operator">/</span> <span class="token number">1024</span> <span class="token operator">/</span> <span class="token number">1024</span> <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isLt2M<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">'Image must smaller than 2MB!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> isJpgOrPng <span class="token operator">&amp;&amp;</span> isLt2M<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>loading<span class="token punctuation">,</span> setLoading<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>imageUrl<span class="token punctuation">,</span> setImageUrl<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>string<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> handleChange<span class="token operator">:</span> UploadProps<span class="token punctuation">[</span><span class="token string">'onChange'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>info<span class="token operator">:</span> UploadChangeParam<span class="token operator">&lt;</span>UploadFile<span class="token operator">></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">'uploading'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">setLoading</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">'done'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// Get this url from response in real world.</span>
      <span class="token function">getBase64</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>originFileObj <span class="token keyword">as</span> RcFile<span class="token punctuation">,</span> url <span class="token operator">=></span> <span class="token punctuation">{</span>
        <span class="token function">setLoading</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setImageUrl</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> uploadButton <span class="token operator">=</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>
      <span class="token punctuation">{</span>loading <span class="token operator">?</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">LoadingOutlined</span></span> <span class="token punctuation">/></span></span> <span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">PlusOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> marginTop<span class="token operator">:</span> <span class="token number">8</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span>
      <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>avatar<span class="token punctuation">"</span></span>
      <span class="token attr-name">listType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>picture-card<span class="token punctuation">"</span></span>
      <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>avatar-uploader<span class="token punctuation">"</span></span>
      <span class="token attr-name">showUploadList</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token boolean">false</span><span class="token punctuation">}</span></span>
      <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.mocky.io/v2/5cc8019d300000980a055e76<span class="token punctuation">"</span></span>
      <span class="token attr-name">beforeUpload</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>beforeUpload<span class="token punctuation">}</span></span>
      <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleChange<span class="token punctuation">}</span></span>
    <span class="token punctuation">></span></span>
      <span class="token punctuation">{</span>imageUrl <span class="token operator">?</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>imageUrl<span class="token punctuation">}</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>avatar<span class="token punctuation">"</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> width<span class="token operator">:</span> <span class="token string">'100%'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span> <span class="token operator">:</span> uploadButton<span class="token punctuation">}</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>`,jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> LoadingOutlined<span class="token punctuation">,</span> PlusOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> message<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">getBase64</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">img<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  reader<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'load'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">callback</span><span class="token punctuation">(</span>reader<span class="token punctuation">.</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  reader<span class="token punctuation">.</span><span class="token function">readAsDataURL</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">beforeUpload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> isJpgOrPng <span class="token operator">=</span> file<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">'image/jpeg'</span> <span class="token operator">||</span> file<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">'image/png'</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isJpgOrPng<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">'You can only upload JPG/PNG file!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> isLt2M <span class="token operator">=</span> file<span class="token punctuation">.</span>size <span class="token operator">/</span> <span class="token number">1024</span> <span class="token operator">/</span> <span class="token number">1024</span> <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isLt2M<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">'Image must smaller than 2MB!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> isJpgOrPng <span class="token operator">&amp;&amp;</span> isLt2M<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>loading<span class="token punctuation">,</span> setLoading<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>imageUrl<span class="token punctuation">,</span> setImageUrl<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token function-variable function">handleChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">info</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">'uploading'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">setLoading</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">'done'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// Get this url from response in real world.</span>
      <span class="token function">getBase64</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>originFileObj<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">url</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
        <span class="token function">setLoading</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setImageUrl</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> uploadButton <span class="token operator">=</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>
      <span class="token punctuation">{</span>loading <span class="token operator">?</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">LoadingOutlined</span></span> <span class="token punctuation">/></span></span> <span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">PlusOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>
        <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
          <span class="token literal-property property">marginTop</span><span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
      <span class="token punctuation">></span></span>
        Upload
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span>
      <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>avatar<span class="token punctuation">"</span></span>
      <span class="token attr-name">listType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>picture-card<span class="token punctuation">"</span></span>
      <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>avatar-uploader<span class="token punctuation">"</span></span>
      <span class="token attr-name">showUploadList</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token boolean">false</span><span class="token punctuation">}</span></span>
      <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.mocky.io/v2/5cc8019d300000980a055e76<span class="token punctuation">"</span></span>
      <span class="token attr-name">beforeUpload</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>beforeUpload<span class="token punctuation">}</span></span>
      <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleChange<span class="token punctuation">}</span></span>
    <span class="token punctuation">></span></span>
      <span class="token punctuation">{</span>imageUrl <span class="token operator">?</span> <span class="token punctuation">(</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span>
          <span class="token attr-name">src</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>imageUrl<span class="token punctuation">}</span></span>
          <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>avatar<span class="token punctuation">"</span></span>
          <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
            <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token string">'100%'</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
        <span class="token punctuation">/></span></span>
      <span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span>
        uploadButton
      <span class="token punctuation">)</span><span class="token punctuation">}</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
`},preview:function(){var D=g(0),mn=g(41);function R(F){return R=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(q){return typeof q}:function(q){return q&&typeof Symbol=="function"&&q.constructor===Symbol&&q!==Symbol.prototype?"symbol":typeof q},R(F)}J.default=void 0;var A=g(60),C=g(13),U=V(g(0));function N(F){if(typeof WeakMap!="function")return null;var q=new WeakMap,t=new WeakMap;return(N=function(a){return a?t:q})(F)}function V(F,q){if(!q&&F&&F.__esModule)return F;if(F===null||R(F)!="object"&&typeof F!="function")return{default:F};var t=N(q);if(t&&t.has(F))return t.get(F);var s={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in F)if(u!=="default"&&Object.prototype.hasOwnProperty.call(F,u)){var o=a?Object.getOwnPropertyDescriptor(F,u):null;o&&(o.get||o.set)?Object.defineProperty(s,u,o):s[u]=F[u]}return s.default=F,t&&t.set(F,s),s}function Z(F,q){return un(F)||M(F,q)||B(F,q)||O()}function O(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function B(F,q){if(F){if(typeof F=="string")return X(F,q);var t=Object.prototype.toString.call(F).slice(8,-1);if(t==="Object"&&F.constructor&&(t=F.constructor.name),t==="Map"||t==="Set")return Array.from(F);if(t==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return X(F,q)}}function X(F,q){(q==null||q>F.length)&&(q=F.length);for(var t=0,s=new Array(q);t<q;t++)s[t]=F[t];return s}function M(F,q){var t=F==null?null:typeof Symbol!="undefined"&&F[Symbol.iterator]||F["@@iterator"];if(t!=null){var s,a,u,o,d=[],m=!0,b=!1;try{if(u=(t=t.call(F)).next,q===0){if(Object(t)!==t)return;m=!1}else for(;!(m=(s=u.call(t)).done)&&(d.push(s.value),d.length!==q);m=!0);}catch(S){b=!0,a=S}finally{try{if(!m&&t.return!=null&&(o=t.return(),Object(o)!==o))return}finally{if(b)throw a}}return d}}function un(F){if(Array.isArray(F))return F}var sn=function(q,t){var s=new FileReader;s.addEventListener("load",function(){return t(s.result)}),s.readAsDataURL(q)},rn=function(q){var t=q.type==="image/jpeg"||q.type==="image/png";t||C.message.error("You can only upload JPG/PNG file!");var s=q.size/1024/1024<2;return s||C.message.error("Image must smaller than 2MB!"),t&&s},cn=function(){var q=(0,U.useState)(!1),t=Z(q,2),s=t[0],a=t[1],u=(0,U.useState)(),o=Z(u,2),d=o[0],m=o[1],b=function(j){if(j.file.status==="uploading"){a(!0);return}j.file.status==="done"&&sn(j.file.originFileObj,function(G){a(!1),m(G)})},S=U.default.createElement("div",null,s?U.default.createElement(A.LoadingOutlined,null):U.default.createElement(A.PlusOutlined,null),U.default.createElement("div",{style:{marginTop:8}},"Upload"));return U.default.createElement(C.Upload,{name:"avatar",listType:"picture-card",className:"avatar-uploader",showUploadList:!1,action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",beforeUpload:rn,onChange:b},d?U.default.createElement("img",{src:d,alt:"avatar",style:{width:"100%"}}):S)},kn;return D.createElement(cn)}}},4788:function(Y,J,g){Y.exports={content:{"zh-CN":[["p","\u7ECF\u5178\u6B3E\u5F0F\uFF0C\u7528\u6237\u70B9\u51FB\u6309\u94AE\u5F39\u51FA\u6587\u4EF6\u9009\u62E9\u6846\u3002"]],"en-US":[["p","Classic mode. File selection dialog pops up when upload button is clicked."]]},meta:{order:0,title:{"zh-CN":"\u70B9\u51FB\u4E0A\u4F20","en-US":"Upload by clicking"},filename:"components/upload/demo/basic.md",id:"components-upload-demo-basic"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:`import { UploadOutlined } from <span class="token string">'@ant-design/icons'</span><span class="token comment" spellcheck="true">;</span>
import type { UploadProps } from <span class="token string">'antd'</span><span class="token comment" spellcheck="true">;</span>
import { Button<span class="token punctuation">,</span> message<span class="token punctuation">,</span> Upload } from <span class="token string">'antd'</span><span class="token comment" spellcheck="true">;</span>
import React from <span class="token string">'react'</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> props<span class="token punctuation">:</span> UploadProps <span class="token operator">=</span> {
  name<span class="token punctuation">:</span> <span class="token string">'file'</span><span class="token punctuation">,</span>
  action<span class="token punctuation">:</span> <span class="token string">'https://www.mocky.io/v2/5cc8019d300000980a055e76'</span><span class="token punctuation">,</span>
  headers<span class="token punctuation">:</span> {
    authorization<span class="token punctuation">:</span> <span class="token string">'authorization-text'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  <span class="token function">onChange</span><span class="token punctuation">(</span>info<span class="token punctuation">)</span> {
    <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status !<span class="token operator">==</span> <span class="token string">'uploading'</span><span class="token punctuation">)</span> {
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">,</span> info<span class="token punctuation">.</span>fileList<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    }
    <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">'done'</span><span class="token punctuation">)</span> {
      message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>\`\${info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name} file uploaded successfully\`<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    } <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">'error'</span><span class="token punctuation">)</span> {
      message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>\`\${info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name} file upload failed<span class="token punctuation">.</span>\`<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    }
  }<span class="token punctuation">,</span>
}<span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>
  <span class="token operator">&lt;</span>Upload {<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>props}<span class="token operator">></span>
    <span class="token operator">&lt;</span>Button icon<span class="token operator">=</span>{<span class="token operator">&lt;</span>UploadOutlined <span class="token operator">/</span><span class="token operator">></span>}<span class="token operator">></span>Click <span class="token keyword">to</span> Upload<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>Upload<span class="token operator">></span>
<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

export <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>`}],highlightedCodes:{tsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> UploadProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> message<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> props<span class="token operator">:</span> UploadProps <span class="token operator">=</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token string">'file'</span><span class="token punctuation">,</span>
  action<span class="token operator">:</span> <span class="token string">'https://www.mocky.io/v2/5cc8019d300000980a055e76'</span><span class="token punctuation">,</span>
  headers<span class="token operator">:</span> <span class="token punctuation">{</span>
    authorization<span class="token operator">:</span> <span class="token string">'authorization-text'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">onChange</span><span class="token punctuation">(</span>info<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">!==</span> <span class="token string">'uploading'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">,</span> info<span class="token punctuation">.</span>fileList<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">'done'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> file uploaded successfully</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">'error'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> file upload failed.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Click to Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>`,jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> message<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'file'</span><span class="token punctuation">,</span>
  <span class="token literal-property property">action</span><span class="token operator">:</span> <span class="token string">'https://www.mocky.io/v2/5cc8019d300000980a055e76'</span><span class="token punctuation">,</span>
  <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">authorization</span><span class="token operator">:</span> <span class="token string">'authorization-text'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">onChange</span><span class="token punctuation">(</span><span class="token parameter">info</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">!==</span> <span class="token string">'uploading'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">,</span> info<span class="token punctuation">.</span>fileList<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">'done'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> file uploaded successfully</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">'error'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> file upload failed.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Click to Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
`},preview:function(){var D=g(0),mn=g(41);J.default=void 0;var R=g(60),A=g(13),C=U(g(0));function U(O){return O&&O.__esModule?O:{default:O}}var N={name:"file",action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",headers:{authorization:"authorization-text"},onChange:function(B){B.file.status!=="uploading"&&console.log(B.file,B.fileList),B.file.status==="done"?A.message.success("".concat(B.file.name," file uploaded successfully")):B.file.status==="error"&&A.message.error("".concat(B.file.name," file upload failed."))}},V=function(){return C.default.createElement(A.Upload,N,C.default.createElement(A.Button,{icon:C.default.createElement(R.UploadOutlined,null)},"Click to Upload"))},Z;return D.createElement(V)}}},4789:function(Y,J,g){Y.exports={content:{"zh-CN":[["p","\u914D\u5408 ",["a",{title:null,href:"https://github.com/nanxiaobei/antd-img-crop"},"antd-img-crop"]," \u5B9E\u73B0\u4E0A\u4F20\u524D\u88C1\u5207\u56FE\u7247\u3002"]],"en-US":[["p","Use ",["a",{title:null,href:"https://github.com/nanxiaobei/antd-img-crop"},"antd-img-crop"]," to crop image before uploading."]]},meta:{order:14,title:{"zh-CN":"\u4E0A\u4F20\u524D\u88C1\u5207\u56FE\u7247","en-US":"Crop image before uploading"},filename:"components/upload/demo/crop-image.md",id:"components-upload-demo-crop-image"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:`import { Upload } from <span class="token string">'antd'</span><span class="token comment" spellcheck="true">;</span>
import ImgCrop from <span class="token string">'antd-img-crop'</span><span class="token comment" spellcheck="true">;</span>
import type { RcFile<span class="token punctuation">,</span> UploadFile<span class="token punctuation">,</span> UploadProps } from <span class="token string">'antd/es/upload/interface'</span><span class="token comment" spellcheck="true">;</span>
import React<span class="token punctuation">,</span> { useState } from <span class="token string">'react'</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
  <span class="token keyword">const</span> <span class="token punctuation">[</span>fileList<span class="token punctuation">,</span> setFileList<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>UploadFile<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    {
      uid<span class="token punctuation">:</span> <span class="token string">'-1'</span><span class="token punctuation">,</span>
      name<span class="token punctuation">:</span> <span class="token string">'image.png'</span><span class="token punctuation">,</span>
      status<span class="token punctuation">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      url<span class="token punctuation">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> onChange<span class="token punctuation">:</span> UploadProps<span class="token punctuation">[</span><span class="token string">'onChange'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>{ fileList<span class="token punctuation">:</span> newFileList }<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
    <span class="token function">setFileList</span><span class="token punctuation">(</span>newFileList<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  }<span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> onPreview <span class="token operator">=</span> async <span class="token punctuation">(</span>file<span class="token punctuation">:</span> UploadFile<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
    let src <span class="token operator">=</span> file<span class="token punctuation">.</span>url as string<span class="token comment" spellcheck="true">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>!src<span class="token punctuation">)</span> {
      src <span class="token operator">=</span> await new <span class="token function">Promise</span><span class="token punctuation">(</span>resolve <span class="token operator">=</span><span class="token operator">></span> {
        <span class="token keyword">const</span> reader <span class="token operator">=</span> new <span class="token function">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
        reader<span class="token punctuation">.</span><span class="token function">readAsDataURL</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>originFileObj as RcFile<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
        reader<span class="token punctuation">.</span>onload <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">resolve</span><span class="token punctuation">(</span>reader<span class="token punctuation">.</span>result as string<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
      }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    }
    <span class="token keyword">const</span> image <span class="token operator">=</span> new <span class="token function">Image</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    image<span class="token punctuation">.</span>src <span class="token operator">=</span> src<span class="token comment" spellcheck="true">;</span>
    <span class="token keyword">const</span> imgWindow <span class="token operator">=</span> window<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>src<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    imgWindow<span class="token operator">?</span><span class="token punctuation">.</span>document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>image<span class="token punctuation">.</span>outerHTML<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  }<span class="token comment" spellcheck="true">;</span>

  return <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>ImgCrop rotationSlider<span class="token operator">></span>
      <span class="token operator">&lt;</span>Upload
        action<span class="token operator">=</span><span class="token string">"https://www.mocky.io/v2/5cc8019d300000980a055e76"</span>
        listType<span class="token operator">=</span><span class="token string">"picture-card"</span>
        fileList<span class="token operator">=</span>{fileList}
        onChange<span class="token operator">=</span>{onChange}
        onPreview<span class="token operator">=</span>{onPreview}
      <span class="token operator">></span>
        {fileList<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">5</span> <span class="token operator">&amp;</span><span class="token operator">&amp;</span> <span class="token string">'+ Upload'</span>}
      <span class="token operator">&lt;</span><span class="token operator">/</span>Upload<span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>ImgCrop<span class="token operator">></span>
  <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
}<span class="token comment" spellcheck="true">;</span>

export <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>`}],highlightedCodes:{tsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> ImgCrop <span class="token keyword">from</span> <span class="token string">'antd-img-crop'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> RcFile<span class="token punctuation">,</span> UploadFile<span class="token punctuation">,</span> UploadProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd/es/upload/interface'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>fileList<span class="token punctuation">,</span> setFileList<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>UploadFile<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      uid<span class="token operator">:</span> <span class="token string">'-1'</span><span class="token punctuation">,</span>
      name<span class="token operator">:</span> <span class="token string">'image.png'</span><span class="token punctuation">,</span>
      status<span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      url<span class="token operator">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> onChange<span class="token operator">:</span> UploadProps<span class="token punctuation">[</span><span class="token string">'onChange'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> fileList<span class="token operator">:</span> newFileList <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token function">setFileList</span><span class="token punctuation">(</span>newFileList<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">onPreview</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>file<span class="token operator">:</span> UploadFile<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> src <span class="token operator">=</span> file<span class="token punctuation">.</span>url <span class="token keyword">as</span> string<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>src<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      src <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span>resolve <span class="token operator">=></span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        reader<span class="token punctuation">.</span><span class="token function">readAsDataURL</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>originFileObj <span class="token keyword">as</span> RcFile<span class="token punctuation">)</span><span class="token punctuation">;</span>
        reader<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">resolve</span><span class="token punctuation">(</span>reader<span class="token punctuation">.</span>result <span class="token keyword">as</span> string<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> image <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    image<span class="token punctuation">.</span>src <span class="token operator">=</span> src<span class="token punctuation">;</span>
    <span class="token keyword">const</span> imgWindow <span class="token operator">=</span> window<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>src<span class="token punctuation">)</span><span class="token punctuation">;</span>
    imgWindow<span class="token operator">?.</span>document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>image<span class="token punctuation">.</span>outerHTML<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ImgCrop</span></span> <span class="token attr-name">rotationSlider</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span>
        <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.mocky.io/v2/5cc8019d300000980a055e76<span class="token punctuation">"</span></span>
        <span class="token attr-name">listType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>picture-card<span class="token punctuation">"</span></span>
        <span class="token attr-name">fileList</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>fileList<span class="token punctuation">}</span></span>
        <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>onChange<span class="token punctuation">}</span></span>
        <span class="token attr-name">onPreview</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>onPreview<span class="token punctuation">}</span></span>
      <span class="token punctuation">></span></span>
        <span class="token punctuation">{</span>fileList<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">5</span> <span class="token operator">&amp;&amp;</span> <span class="token string">'+ Upload'</span><span class="token punctuation">}</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">ImgCrop</span></span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>`,jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> ImgCrop <span class="token keyword">from</span> <span class="token string">'antd-img-crop'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>fileList<span class="token punctuation">,</span> setFileList<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token string">'-1'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'image.png'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token function-variable function">onChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> <span class="token literal-property property">fileList</span><span class="token operator">:</span> newFileList <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token function">setFileList</span><span class="token punctuation">(</span>newFileList<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token function-variable function">onPreview</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> src <span class="token operator">=</span> file<span class="token punctuation">.</span>url<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>src<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      src <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        reader<span class="token punctuation">.</span><span class="token function">readAsDataURL</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>originFileObj<span class="token punctuation">)</span><span class="token punctuation">;</span>
        reader<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">resolve</span><span class="token punctuation">(</span>reader<span class="token punctuation">.</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> image <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    image<span class="token punctuation">.</span>src <span class="token operator">=</span> src<span class="token punctuation">;</span>
    <span class="token keyword">const</span> imgWindow <span class="token operator">=</span> window<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>src<span class="token punctuation">)</span><span class="token punctuation">;</span>
    imgWindow<span class="token operator">?.</span>document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>image<span class="token punctuation">.</span>outerHTML<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ImgCrop</span></span> <span class="token attr-name">rotationSlider</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span>
        <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.mocky.io/v2/5cc8019d300000980a055e76<span class="token punctuation">"</span></span>
        <span class="token attr-name">listType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>picture-card<span class="token punctuation">"</span></span>
        <span class="token attr-name">fileList</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>fileList<span class="token punctuation">}</span></span>
        <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>onChange<span class="token punctuation">}</span></span>
        <span class="token attr-name">onPreview</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>onPreview<span class="token punctuation">}</span></span>
      <span class="token punctuation">></span></span>
        <span class="token punctuation">{</span>fileList<span class="token punctuation">.</span>length <span class="token operator">&lt;</span> <span class="token number">5</span> <span class="token operator">&amp;&amp;</span> <span class="token string">'+ Upload'</span><span class="token punctuation">}</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">ImgCrop</span></span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
`},preview:function(){var D=g(0),mn=g(41);function R(t){return R=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(s){return typeof s}:function(s){return s&&typeof Symbol=="function"&&s.constructor===Symbol&&s!==Symbol.prototype?"symbol":typeof s},R(t)}J.default=void 0;var A=g(13),C=Z(g(4857)),U=V(g(0));function N(t){if(typeof WeakMap!="function")return null;var s=new WeakMap,a=new WeakMap;return(N=function(o){return o?a:s})(t)}function V(t,s){if(!s&&t&&t.__esModule)return t;if(t===null||R(t)!="object"&&typeof t!="function")return{default:t};var a=N(s);if(a&&a.has(t))return a.get(t);var u={__proto__:null},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var d in t)if(d!=="default"&&Object.prototype.hasOwnProperty.call(t,d)){var m=o?Object.getOwnPropertyDescriptor(t,d):null;m&&(m.get||m.set)?Object.defineProperty(u,d,m):u[d]=t[d]}return u.default=t,a&&a.set(t,u),u}function Z(t){return t&&t.__esModule?t:{default:t}}function O(){"use strict";/*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */O=function(){return s};var t,s={},a=Object.prototype,u=a.hasOwnProperty,o=Object.defineProperty||function(i,p,e){i[p]=e.value},d=typeof Symbol=="function"?Symbol:{},m=d.iterator||"@@iterator",b=d.asyncIterator||"@@asyncIterator",S=d.toStringTag||"@@toStringTag";function x(i,p,e){return Object.defineProperty(i,p,{value:e,enumerable:!0,configurable:!0,writable:!0}),i[p]}try{x({},"")}catch(i){x=function(e,y,r){return e[y]=r}}function j(i,p,e,y){var r=p&&p.prototype instanceof Un?p:Un,c=Object.create(r.prototype),h=new Tn(y||[]);return o(c,"_invoke",{value:xn(i,e,h)}),c}function G(i,p,e){try{return{type:"normal",arg:i.call(p,e)}}catch(y){return{type:"throw",arg:y}}}s.wrap=j;var K="suspendedStart",ln="suspendedYield",fn="executing",yn="completed",nn={};function Un(){}function hn(){}function _(){}var H={};x(H,m,function(){return this});var tn=Object.getPrototypeOf,pn=tn&&tn(tn(Fn([])));pn&&pn!==a&&u.call(pn,m)&&(H=pn);var W=_.prototype=Un.prototype=Object.create(H);function Pn(i){["next","throw","return"].forEach(function(p){x(i,p,function(e){return this._invoke(p,e)})})}function gn(i,p){function e(r,c,h,P){var E=G(i[r],i,c);if(E.type!=="throw"){var z=E.arg,Q=z.value;return Q&&R(Q)=="object"&&u.call(Q,"__await")?p.resolve(Q.__await).then(function(en){e("next",en,h,P)},function(en){e("throw",en,h,P)}):p.resolve(Q).then(function(en){z.value=en,h(z)},function(en){return e("throw",en,h,P)})}P(E.arg)}var y;o(this,"_invoke",{value:function(c,h){function P(){return new p(function(E,z){e(c,h,E,z)})}return y=y?y.then(P,P):P()}})}function xn(i,p,e){var y=K;return function(r,c){if(y===fn)throw new Error("Generator is already running");if(y===yn){if(r==="throw")throw c;return{value:t,done:!0}}for(e.method=r,e.arg=c;;){var h=e.delegate;if(h){var P=Ln(h,e);if(P){if(P===nn)continue;return P}}if(e.method==="next")e.sent=e._sent=e.arg;else if(e.method==="throw"){if(y===K)throw y=yn,e.arg;e.dispatchException(e.arg)}else e.method==="return"&&e.abrupt("return",e.arg);y=fn;var E=G(i,p,e);if(E.type==="normal"){if(y=e.done?yn:ln,E.arg===nn)continue;return{value:E.arg,done:e.done}}E.type==="throw"&&(y=yn,e.method="throw",e.arg=E.arg)}}}function Ln(i,p){var e=p.method,y=i.iterator[e];if(y===t)return p.delegate=null,e==="throw"&&i.iterator.return&&(p.method="return",p.arg=t,Ln(i,p),p.method==="throw")||e!=="return"&&(p.method="throw",p.arg=new TypeError("The iterator does not provide a '"+e+"' method")),nn;var r=G(y,i.iterator,p.arg);if(r.type==="throw")return p.method="throw",p.arg=r.arg,p.delegate=null,nn;var c=r.arg;return c?c.done?(p[i.resultName]=c.value,p.next=i.nextLoc,p.method!=="return"&&(p.method="next",p.arg=t),p.delegate=null,nn):c:(p.method="throw",p.arg=new TypeError("iterator result is not an object"),p.delegate=null,nn)}function $n(i){var p={tryLoc:i[0]};1 in i&&(p.catchLoc=i[1]),2 in i&&(p.finallyLoc=i[2],p.afterLoc=i[3]),this.tryEntries.push(p)}function jn(i){var p=i.completion||{};p.type="normal",delete p.arg,i.completion=p}function Tn(i){this.tryEntries=[{tryLoc:"root"}],i.forEach($n,this),this.reset(!0)}function Fn(i){if(i||i===""){var p=i[m];if(p)return p.call(i);if(typeof i.next=="function")return i;if(!isNaN(i.length)){var e=-1,y=function r(){for(;++e<i.length;)if(u.call(i,e))return r.value=i[e],r.done=!1,r;return r.value=t,r.done=!0,r};return y.next=y}}throw new TypeError(R(i)+" is not iterable")}return hn.prototype=_,o(W,"constructor",{value:_,configurable:!0}),o(_,"constructor",{value:hn,configurable:!0}),hn.displayName=x(_,S,"GeneratorFunction"),s.isGeneratorFunction=function(i){var p=typeof i=="function"&&i.constructor;return!!p&&(p===hn||(p.displayName||p.name)==="GeneratorFunction")},s.mark=function(i){return Object.setPrototypeOf?Object.setPrototypeOf(i,_):(i.__proto__=_,x(i,S,"GeneratorFunction")),i.prototype=Object.create(W),i},s.awrap=function(i){return{__await:i}},Pn(gn.prototype),x(gn.prototype,b,function(){return this}),s.AsyncIterator=gn,s.async=function(i,p,e,y,r){r===void 0&&(r=Promise);var c=new gn(j(i,p,e,y),r);return s.isGeneratorFunction(p)?c:c.next().then(function(h){return h.done?h.value:c.next()})},Pn(W),x(W,S,"Generator"),x(W,m,function(){return this}),x(W,"toString",function(){return"[object Generator]"}),s.keys=function(i){var p=Object(i),e=[];for(var y in p)e.push(y);return e.reverse(),function r(){for(;e.length;){var c=e.pop();if(c in p)return r.value=c,r.done=!1,r}return r.done=!0,r}},s.values=Fn,Tn.prototype={constructor:Tn,reset:function(p){if(this.prev=0,this.next=0,this.sent=this._sent=t,this.done=!1,this.delegate=null,this.method="next",this.arg=t,this.tryEntries.forEach(jn),!p)for(var e in this)e.charAt(0)==="t"&&u.call(this,e)&&!isNaN(+e.slice(1))&&(this[e]=t)},stop:function(){this.done=!0;var p=this.tryEntries[0].completion;if(p.type==="throw")throw p.arg;return this.rval},dispatchException:function(p){if(this.done)throw p;var e=this;function y(z,Q){return h.type="throw",h.arg=p,e.next=z,Q&&(e.method="next",e.arg=t),!!Q}for(var r=this.tryEntries.length-1;r>=0;--r){var c=this.tryEntries[r],h=c.completion;if(c.tryLoc==="root")return y("end");if(c.tryLoc<=this.prev){var P=u.call(c,"catchLoc"),E=u.call(c,"finallyLoc");if(P&&E){if(this.prev<c.catchLoc)return y(c.catchLoc,!0);if(this.prev<c.finallyLoc)return y(c.finallyLoc)}else if(P){if(this.prev<c.catchLoc)return y(c.catchLoc,!0)}else{if(!E)throw new Error("try statement without catch or finally");if(this.prev<c.finallyLoc)return y(c.finallyLoc)}}}},abrupt:function(p,e){for(var y=this.tryEntries.length-1;y>=0;--y){var r=this.tryEntries[y];if(r.tryLoc<=this.prev&&u.call(r,"finallyLoc")&&this.prev<r.finallyLoc){var c=r;break}}c&&(p==="break"||p==="continue")&&c.tryLoc<=e&&e<=c.finallyLoc&&(c=null);var h=c?c.completion:{};return h.type=p,h.arg=e,c?(this.method="next",this.next=c.finallyLoc,nn):this.complete(h)},complete:function(p,e){if(p.type==="throw")throw p.arg;return p.type==="break"||p.type==="continue"?this.next=p.arg:p.type==="return"?(this.rval=this.arg=p.arg,this.method="return",this.next="end"):p.type==="normal"&&e&&(this.next=e),nn},finish:function(p){for(var e=this.tryEntries.length-1;e>=0;--e){var y=this.tryEntries[e];if(y.finallyLoc===p)return this.complete(y.completion,y.afterLoc),jn(y),nn}},catch:function(p){for(var e=this.tryEntries.length-1;e>=0;--e){var y=this.tryEntries[e];if(y.tryLoc===p){var r=y.completion;if(r.type==="throw"){var c=r.arg;jn(y)}return c}}throw new Error("illegal catch attempt")},delegateYield:function(p,e,y){return this.delegate={iterator:Fn(p),resultName:e,nextLoc:y},this.method==="next"&&(this.arg=t),nn}},s}function B(t,s,a,u,o,d,m){try{var b=t[d](m),S=b.value}catch(x){a(x);return}b.done?s(S):Promise.resolve(S).then(u,o)}function X(t){return function(){var s=this,a=arguments;return new Promise(function(u,o){var d=t.apply(s,a);function m(S){B(d,u,o,m,b,"next",S)}function b(S){B(d,u,o,m,b,"throw",S)}m(void 0)})}}function M(t,s){return kn(t)||cn(t,s)||sn(t,s)||un()}function un(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function sn(t,s){if(t){if(typeof t=="string")return rn(t,s);var a=Object.prototype.toString.call(t).slice(8,-1);if(a==="Object"&&t.constructor&&(a=t.constructor.name),a==="Map"||a==="Set")return Array.from(t);if(a==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a))return rn(t,s)}}function rn(t,s){(s==null||s>t.length)&&(s=t.length);for(var a=0,u=new Array(s);a<s;a++)u[a]=t[a];return u}function cn(t,s){var a=t==null?null:typeof Symbol!="undefined"&&t[Symbol.iterator]||t["@@iterator"];if(a!=null){var u,o,d,m,b=[],S=!0,x=!1;try{if(d=(a=a.call(t)).next,s===0){if(Object(a)!==a)return;S=!1}else for(;!(S=(u=d.call(a)).done)&&(b.push(u.value),b.length!==s);S=!0);}catch(j){x=!0,o=j}finally{try{if(!S&&a.return!=null&&(m=a.return(),Object(m)!==m))return}finally{if(x)throw o}}return b}}function kn(t){if(Array.isArray(t))return t}var F=function(){var s=(0,U.useState)([{uid:"-1",name:"image.png",status:"done",url:"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png"}]),a=M(s,2),u=a[0],o=a[1],d=function(S){var x=S.fileList;o(x)},m=function(){var b=X(O().mark(function S(x){var j,G,K;return O().wrap(function(fn){for(;;)switch(fn.prev=fn.next){case 0:if(j=x.url,j){fn.next=5;break}return fn.next=4,new Promise(function(yn){var nn=new FileReader;nn.readAsDataURL(x.originFileObj),nn.onload=function(){return yn(nn.result)}});case 4:j=fn.sent;case 5:G=new Image,G.src=j,K=window.open(j),K==null||K.document.write(G.outerHTML);case 9:case"end":return fn.stop()}},S)}));return function(x){return b.apply(this,arguments)}}();return U.default.createElement(C.default,{rotationSlider:!0},U.default.createElement(A.Upload,{action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",listType:"picture-card",fileList:u,onChange:d,onPreview:m},u.length<5&&"+ Upload"))},q;return D.createElement(F)}}},4790:function(Y,J,g){Y.exports=g(4791)},4791:function(Y,J,g){"use strict";var on=g(4792),D=g(4793),mn=10,R=40,A=800;function C(U){var N=0,V=0,Z=0,O=0;return"detail"in U&&(V=U.detail),"wheelDelta"in U&&(V=-U.wheelDelta/120),"wheelDeltaY"in U&&(V=-U.wheelDeltaY/120),"wheelDeltaX"in U&&(N=-U.wheelDeltaX/120),"axis"in U&&U.axis===U.HORIZONTAL_AXIS&&(N=V,V=0),Z=N*mn,O=V*mn,"deltaY"in U&&(O=U.deltaY),"deltaX"in U&&(Z=U.deltaX),(Z||O)&&U.deltaMode&&(U.deltaMode==1?(Z*=R,O*=R):(Z*=A,O*=A)),Z&&!N&&(N=Z<1?-1:1),O&&!V&&(V=O<1?-1:1),{spinX:N,spinY:V,pixelX:Z,pixelY:O}}C.getEventType=function(){return on.firefox()?"DOMMouseScroll":D("wheel")?"wheel":"mousewheel"},Y.exports=C},4792:function(Y,J){var g=!1,on,D,mn,R,A,C,U,N,V,Z,O,B,X,M,un;function sn(){if(!g){g=!0;var cn=navigator.userAgent,kn=/(?:MSIE.(\d+\.\d+))|(?:(?:Firefox|GranParadiso|Iceweasel).(\d+\.\d+))|(?:Opera(?:.+Version.|.)(\d+\.\d+))|(?:AppleWebKit.(\d+(?:\.\d+)?))|(?:Trident\/\d+\.\d+.*rv:(\d+\.\d+))/.exec(cn),F=/(Mac OS X)|(Windows)|(Linux)/.exec(cn);if(B=/\b(iPhone|iP[ao]d)/.exec(cn),X=/\b(iP[ao]d)/.exec(cn),Z=/Android/i.exec(cn),M=/FBAN\/\w+;/i.exec(cn),un=/Mobile/i.exec(cn),O=!!/Win64/.exec(cn),kn){on=kn[1]?parseFloat(kn[1]):kn[5]?parseFloat(kn[5]):NaN,on&&document&&document.documentMode&&(on=document.documentMode);var q=/(?:Trident\/(\d+.\d+))/.exec(cn);C=q?parseFloat(q[1])+4:on,D=kn[2]?parseFloat(kn[2]):NaN,mn=kn[3]?parseFloat(kn[3]):NaN,R=kn[4]?parseFloat(kn[4]):NaN,R?(kn=/(?:Chrome\/(\d+\.\d+))/.exec(cn),A=kn&&kn[1]?parseFloat(kn[1]):NaN):A=NaN}else on=D=mn=A=R=NaN;if(F){if(F[1]){var t=/(?:Mac OS X (\d+(?:[._]\d+)?))/.exec(cn);U=t?parseFloat(t[1].replace("_",".")):!0}else U=!1;N=!!F[2],V=!!F[3]}else U=N=V=!1}}var rn={ie:function(){return sn()||on},ieCompatibilityMode:function(){return sn()||C>on},ie64:function(){return rn.ie()&&O},firefox:function(){return sn()||D},opera:function(){return sn()||mn},webkit:function(){return sn()||R},safari:function(){return rn.webkit()},chrome:function(){return sn()||A},windows:function(){return sn()||N},osx:function(){return sn()||U},linux:function(){return sn()||V},iphone:function(){return sn()||B},mobile:function(){return sn()||B||X||Z||un},nativeApp:function(){return sn()||M},android:function(){return sn()||Z},ipad:function(){return sn()||X}};Y.exports=rn},4793:function(Y,J,g){"use strict";var on=g(4794),D;on.canUseDOM&&(D=document.implementation&&document.implementation.hasFeature&&document.implementation.hasFeature("","")!==!0);/**
 * Checks if an event is supported in the current execution environment.
 *
 * NOTE: This will not work correctly for non-generic events such as `change`,
 * `reset`, `load`, `error`, and `select`.
 *
 * Borrows from Modernizr.
 *
 * @param {string} eventNameSuffix Event name, e.g. "click".
 * @param {?boolean} capture Check if the capture phase is supported.
 * @return {boolean} True if the event is supported.
 * @internal
 * @license Modernizr 3.0.0pre (Custom Build) | MIT
 */function mn(R,A){if(!on.canUseDOM||A&&!("addEventListener"in document))return!1;var C="on"+R,U=C in document;if(!U){var N=document.createElement("div");N.setAttribute(C,"return;"),U=typeof N[C]=="function"}return!U&&D&&R==="wheel"&&(U=document.implementation.hasFeature("Events.wheel","3.0")),U}Y.exports=mn},4794:function(Y,J,g){"use strict";var on=!!(typeof window!="undefined"&&window.document&&window.document.createElement),D={canUseDOM:on,canUseWorkers:typeof Worker!="undefined",canUseEventListeners:on&&!!(window.addEventListener||window.attachEvent),canUseViewport:on&&!!window.screen,isInWorker:!on};Y.exports=D},4795:function(Y,J,g){Y.exports={content:{"zh-CN":[["p","\u4F7F\u7528 ",["code","progress"]," \u5C5E\u6027\u81EA\u5B9A\u4E49\u8FDB\u5EA6\u6761\u6837\u5F0F\u3002"]],"en-US":[["p","Use ",["code","progress"]," for customize progress bar."]]},meta:{order:15,title:{"zh-CN":"\u81EA\u5B9A\u4E49\u8FDB\u5EA6\u6761\u6837\u5F0F","en-US":"Customize Progress Bar"},filename:"components/upload/demo/customize-progress-bar.md",id:"components-upload-demo-customize-progress-bar"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:`import { UploadOutlined } from <span class="token string">'@ant-design/icons'</span><span class="token comment" spellcheck="true">;</span>
import type { UploadProps } from <span class="token string">'antd'</span><span class="token comment" spellcheck="true">;</span>
import { Button<span class="token punctuation">,</span> message<span class="token punctuation">,</span> Upload } from <span class="token string">'antd'</span><span class="token comment" spellcheck="true">;</span>
import React from <span class="token string">'react'</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> props<span class="token punctuation">:</span> UploadProps <span class="token operator">=</span> {
  name<span class="token punctuation">:</span> <span class="token string">'file'</span><span class="token punctuation">,</span>
  action<span class="token punctuation">:</span> <span class="token string">'https://www.mocky.io/v2/5cc8019d300000980a055e76'</span><span class="token punctuation">,</span>
  headers<span class="token punctuation">:</span> {
    authorization<span class="token punctuation">:</span> <span class="token string">'authorization-text'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  <span class="token function">onChange</span><span class="token punctuation">(</span>info<span class="token punctuation">)</span> {
    <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status !<span class="token operator">==</span> <span class="token string">'uploading'</span><span class="token punctuation">)</span> {
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">,</span> info<span class="token punctuation">.</span>fileList<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    }
    <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">'done'</span><span class="token punctuation">)</span> {
      message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>\`\${info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name} file uploaded successfully\`<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    } <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">'error'</span><span class="token punctuation">)</span> {
      message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>\`\${info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name} file upload failed<span class="token punctuation">.</span>\`<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    }
  }<span class="token punctuation">,</span>
  progress<span class="token punctuation">:</span> {
    strokeColor<span class="token punctuation">:</span> {
      <span class="token string">'0%'</span><span class="token punctuation">:</span> <span class="token string">'#108ee9'</span><span class="token punctuation">,</span>
      <span class="token string">'100%'</span><span class="token punctuation">:</span> <span class="token string">'#87d068'</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
    strokeWidth<span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
    format<span class="token punctuation">:</span> percent <span class="token operator">=</span><span class="token operator">></span> percent <span class="token operator">&amp;</span><span class="token operator">&amp;</span> \`\${<span class="token function">parseFloat</span><span class="token punctuation">(</span>percent<span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>}%\`<span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
}<span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>
  <span class="token operator">&lt;</span>Upload {<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>props}<span class="token operator">></span>
    <span class="token operator">&lt;</span>Button icon<span class="token operator">=</span>{<span class="token operator">&lt;</span>UploadOutlined <span class="token operator">/</span><span class="token operator">></span>}<span class="token operator">></span>Click <span class="token keyword">to</span> Upload<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>Upload<span class="token operator">></span>
<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

export <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>`}],highlightedCodes:{tsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> UploadProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> message<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> props<span class="token operator">:</span> UploadProps <span class="token operator">=</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token string">'file'</span><span class="token punctuation">,</span>
  action<span class="token operator">:</span> <span class="token string">'https://www.mocky.io/v2/5cc8019d300000980a055e76'</span><span class="token punctuation">,</span>
  headers<span class="token operator">:</span> <span class="token punctuation">{</span>
    authorization<span class="token operator">:</span> <span class="token string">'authorization-text'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">onChange</span><span class="token punctuation">(</span>info<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">!==</span> <span class="token string">'uploading'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">,</span> info<span class="token punctuation">.</span>fileList<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">'done'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> file uploaded successfully</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">'error'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> file upload failed.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  progress<span class="token operator">:</span> <span class="token punctuation">{</span>
    strokeColor<span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token string-property property">'0%'</span><span class="token operator">:</span> <span class="token string">'#108ee9'</span><span class="token punctuation">,</span>
      <span class="token string-property property">'100%'</span><span class="token operator">:</span> <span class="token string">'#87d068'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    strokeWidth<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
    <span class="token function-variable function">format</span><span class="token operator">:</span> percent <span class="token operator">=></span> percent <span class="token operator">&amp;&amp;</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">parseFloat</span><span class="token punctuation">(</span>percent<span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">%</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Click to Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>`,jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> message<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'file'</span><span class="token punctuation">,</span>
  <span class="token literal-property property">action</span><span class="token operator">:</span> <span class="token string">'https://www.mocky.io/v2/5cc8019d300000980a055e76'</span><span class="token punctuation">,</span>
  <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">authorization</span><span class="token operator">:</span> <span class="token string">'authorization-text'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">onChange</span><span class="token punctuation">(</span><span class="token parameter">info</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">!==</span> <span class="token string">'uploading'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">,</span> info<span class="token punctuation">.</span>fileList<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">'done'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> file uploaded successfully</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">'error'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> file upload failed.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">progress</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">strokeColor</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token string-property property">'0%'</span><span class="token operator">:</span> <span class="token string">'#108ee9'</span><span class="token punctuation">,</span>
      <span class="token string-property property">'100%'</span><span class="token operator">:</span> <span class="token string">'#87d068'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">strokeWidth</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
    <span class="token function-variable function">format</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">percent</span><span class="token punctuation">)</span> <span class="token operator">=></span> percent <span class="token operator">&amp;&amp;</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">parseFloat</span><span class="token punctuation">(</span>percent<span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">%</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Click to Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
`},preview:function(){var D=g(0),mn=g(41);J.default=void 0;var R=g(60),A=g(13),C=U(g(0));function U(O){return O&&O.__esModule?O:{default:O}}var N={name:"file",action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",headers:{authorization:"authorization-text"},onChange:function(B){B.file.status!=="uploading"&&console.log(B.file,B.fileList),B.file.status==="done"?A.message.success("".concat(B.file.name," file uploaded successfully")):B.file.status==="error"&&A.message.error("".concat(B.file.name," file upload failed."))},progress:{strokeColor:{"0%":"#108ee9","100%":"#87d068"},strokeWidth:3,format:function(B){return B&&"".concat(parseFloat(B.toFixed(2)),"%")}}},V=function(){return C.default.createElement(A.Upload,N,C.default.createElement(A.Button,{icon:C.default.createElement(R.UploadOutlined,null)},"Click to Upload"))},Z;return D.createElement(V)}}},4796:function(Y,J,g){Y.exports={content:{"zh-CN":[["p","\u4F7F\u7528 ",["code","defaultFileList"]," \u8BBE\u7F6E\u5DF2\u4E0A\u4F20\u7684\u5185\u5BB9\u3002"]],"en-US":[["p","Use ",["code","defaultFileList"]," for uploaded files when page init."]]},meta:{order:2,title:{"zh-CN":"\u5DF2\u4E0A\u4F20\u7684\u6587\u4EF6\u5217\u8868","en-US":"Default Files"},filename:"components/upload/demo/defaultFileList.md",id:"components-upload-demo-defaultFileList"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:`import { UploadOutlined } from <span class="token string">'@ant-design/icons'</span><span class="token comment" spellcheck="true">;</span>
import type { UploadProps } from <span class="token string">'antd'</span><span class="token comment" spellcheck="true">;</span>
import { Button<span class="token punctuation">,</span> Upload } from <span class="token string">'antd'</span><span class="token comment" spellcheck="true">;</span>
import React from <span class="token string">'react'</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> props<span class="token punctuation">:</span> UploadProps <span class="token operator">=</span> {
  action<span class="token punctuation">:</span> <span class="token string">'https://www.mocky.io/v2/5cc8019d300000980a055e76'</span><span class="token punctuation">,</span>
  <span class="token function">onChange</span><span class="token punctuation">(</span>{ file<span class="token punctuation">,</span> fileList }<span class="token punctuation">)</span> {
    <span class="token keyword">if</span> <span class="token punctuation">(</span>file<span class="token punctuation">.</span>status !<span class="token operator">==</span> <span class="token string">'uploading'</span><span class="token punctuation">)</span> {
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> fileList<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    }
  }<span class="token punctuation">,</span>
  defaultFileList<span class="token punctuation">:</span> <span class="token punctuation">[</span>
    {
      uid<span class="token punctuation">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
      name<span class="token punctuation">:</span> <span class="token string">'xxx.png'</span><span class="token punctuation">,</span>
      status<span class="token punctuation">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      response<span class="token punctuation">:</span> <span class="token string">'Server Error 500'</span><span class="token punctuation">,</span> <span class="token operator">/</span><span class="token operator">/</span> custom error message <span class="token keyword">to</span> show
      url<span class="token punctuation">:</span> <span class="token string">'http://www.baidu.com/xxx.png'</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
    {
      uid<span class="token punctuation">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
      name<span class="token punctuation">:</span> <span class="token string">'yyy.png'</span><span class="token punctuation">,</span>
      status<span class="token punctuation">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      url<span class="token punctuation">:</span> <span class="token string">'http://www.baidu.com/yyy.png'</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
    {
      uid<span class="token punctuation">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>
      name<span class="token punctuation">:</span> <span class="token string">'zzz.png'</span><span class="token punctuation">,</span>
      status<span class="token punctuation">:</span> <span class="token string">'error'</span><span class="token punctuation">,</span>
      response<span class="token punctuation">:</span> <span class="token string">'Server Error 500'</span><span class="token punctuation">,</span> <span class="token operator">/</span><span class="token operator">/</span> custom error message <span class="token keyword">to</span> show
      url<span class="token punctuation">:</span> <span class="token string">'http://www.baidu.com/zzz.png'</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
}<span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>
  <span class="token operator">&lt;</span>Upload {<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>props}<span class="token operator">></span>
    <span class="token operator">&lt;</span>Button icon<span class="token operator">=</span>{<span class="token operator">&lt;</span>UploadOutlined <span class="token operator">/</span><span class="token operator">></span>}<span class="token operator">></span>Upload<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>Upload<span class="token operator">></span>
<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

export <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>`}],highlightedCodes:{tsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> UploadProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> props<span class="token operator">:</span> UploadProps <span class="token operator">=</span> <span class="token punctuation">{</span>
  action<span class="token operator">:</span> <span class="token string">'https://www.mocky.io/v2/5cc8019d300000980a055e76'</span><span class="token punctuation">,</span>
  <span class="token function">onChange</span><span class="token punctuation">(</span><span class="token punctuation">{</span> file<span class="token punctuation">,</span> fileList <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>file<span class="token punctuation">.</span>status <span class="token operator">!==</span> <span class="token string">'uploading'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> fileList<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  defaultFileList<span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      uid<span class="token operator">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
      name<span class="token operator">:</span> <span class="token string">'xxx.png'</span><span class="token punctuation">,</span>
      status<span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      response<span class="token operator">:</span> <span class="token string">'Server Error 500'</span><span class="token punctuation">,</span> <span class="token comment">// custom error message to show</span>
      url<span class="token operator">:</span> <span class="token string">'http://www.baidu.com/xxx.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      uid<span class="token operator">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
      name<span class="token operator">:</span> <span class="token string">'yyy.png'</span><span class="token punctuation">,</span>
      status<span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      url<span class="token operator">:</span> <span class="token string">'http://www.baidu.com/yyy.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      uid<span class="token operator">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>
      name<span class="token operator">:</span> <span class="token string">'zzz.png'</span><span class="token punctuation">,</span>
      status<span class="token operator">:</span> <span class="token string">'error'</span><span class="token punctuation">,</span>
      response<span class="token operator">:</span> <span class="token string">'Server Error 500'</span><span class="token punctuation">,</span> <span class="token comment">// custom error message to show</span>
      url<span class="token operator">:</span> <span class="token string">'http://www.baidu.com/zzz.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>`,jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">action</span><span class="token operator">:</span> <span class="token string">'https://www.mocky.io/v2/5cc8019d300000980a055e76'</span><span class="token punctuation">,</span>
  <span class="token function">onChange</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> file<span class="token punctuation">,</span> fileList <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>file<span class="token punctuation">.</span>status <span class="token operator">!==</span> <span class="token string">'uploading'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> fileList<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">defaultFileList</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'xxx.png'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">response</span><span class="token operator">:</span> <span class="token string">'Server Error 500'</span><span class="token punctuation">,</span>
      <span class="token comment">// custom error message to show</span>
      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">'http://www.baidu.com/xxx.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'yyy.png'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">'http://www.baidu.com/yyy.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'zzz.png'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">'error'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">response</span><span class="token operator">:</span> <span class="token string">'Server Error 500'</span><span class="token punctuation">,</span>
      <span class="token comment">// custom error message to show</span>
      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">'http://www.baidu.com/zzz.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
`},preview:function(){var D=g(0),mn=g(41);J.default=void 0;var R=g(60),A=g(13),C=U(g(0));function U(O){return O&&O.__esModule?O:{default:O}}var N={action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",onChange:function(B){var X=B.file,M=B.fileList;X.status!=="uploading"&&console.log(X,M)},defaultFileList:[{uid:"1",name:"xxx.png",status:"done",response:"Server Error 500",url:"http://www.baidu.com/xxx.png"},{uid:"2",name:"yyy.png",status:"done",url:"http://www.baidu.com/yyy.png"},{uid:"3",name:"zzz.png",status:"error",response:"Server Error 500",url:"http://www.baidu.com/zzz.png"}]},V=function(){return C.default.createElement(A.Upload,N,C.default.createElement(A.Button,{icon:C.default.createElement(R.UploadOutlined,null)},"Upload"))},Z;return D.createElement(V)}}},4797:function(Y,J,g){Y.exports={content:{"zh-CN":[["p","\u652F\u6301\u4E0A\u4F20\u4E00\u4E2A\u6587\u4EF6\u5939\u91CC\u7684\u6240\u6709\u6587\u4EF6\u3002"]],"en-US":[["p","You can select and upload a whole directory."]]},meta:{order:6,title:{"zh-CN":"\u6587\u4EF6\u5939\u4E0A\u4F20","en-US":"Upload directory"},filename:"components/upload/demo/directory.md",id:"components-upload-demo-directory"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:`import { UploadOutlined } from <span class="token string">'@ant-design/icons'</span><span class="token comment" spellcheck="true">;</span>
import { Button<span class="token punctuation">,</span> Upload } from <span class="token string">'antd'</span><span class="token comment" spellcheck="true">;</span>
import React from <span class="token string">'react'</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>
  <span class="token operator">&lt;</span>Upload action<span class="token operator">=</span><span class="token string">"https://www.mocky.io/v2/5cc8019d300000980a055e76"</span> directory<span class="token operator">></span>
    <span class="token operator">&lt;</span>Button icon<span class="token operator">=</span>{<span class="token operator">&lt;</span>UploadOutlined <span class="token operator">/</span><span class="token operator">></span>}<span class="token operator">></span>Upload Directory<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>Upload<span class="token operator">></span>
<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

export <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>`}],highlightedCodes:{tsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.mocky.io/v2/5cc8019d300000980a055e76<span class="token punctuation">"</span></span> <span class="token attr-name">directory</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Upload Directory<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>`,jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.mocky.io/v2/5cc8019d300000980a055e76<span class="token punctuation">"</span></span> <span class="token attr-name">directory</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Upload Directory<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
`},preview:function(){var D=g(0),mn=g(41);J.default=void 0;var R=g(60),A=g(13),C=U(g(0));function U(Z){return Z&&Z.__esModule?Z:{default:Z}}var N=function(){return C.default.createElement(A.Upload,{action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",directory:!0},C.default.createElement(A.Button,{icon:C.default.createElement(R.UploadOutlined,null)},"Upload Directory"))},V;return D.createElement(N)}}},4798:function(Y,J,g){Y.exports={content:{"zh-CN":[["p","\u4F7F\u7528 ",["code","itemRender"]," \uFF0C\u6211\u4EEC\u53EF\u4EE5\u96C6\u6210 react-dnd \u6765\u5B9E\u73B0\u5BF9\u4E0A\u4F20\u5217\u8868\u62D6\u62FD\u6392\u5E8F\u3002"]],"en-US":[["p","By using ",["code","itemRender"],", we can integrate upload with react-dnd to implement drag sorting of uploadList."]]},meta:{order:13,title:{"zh-CN":"\u4E0A\u4F20\u5217\u8868\u62D6\u62FD\u6392\u5E8F","en-US":"Drag sorting of uploadList"},filename:"components/upload/demo/drag-sorting.md",id:"components-upload-demo-drag-sorting"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:`import { UploadOutlined } from <span class="token string">'@ant-design/icons'</span><span class="token comment" spellcheck="true">;</span>
import { Button<span class="token punctuation">,</span> Tooltip<span class="token punctuation">,</span> Upload } from <span class="token string">'antd'</span><span class="token comment" spellcheck="true">;</span>
import type { UploadFile<span class="token punctuation">,</span> UploadProps } from <span class="token string">'antd/es/upload/interface'</span><span class="token comment" spellcheck="true">;</span>
import update from <span class="token string">'immutability-helper'</span><span class="token comment" spellcheck="true">;</span>
import React<span class="token punctuation">,</span> { useCallback<span class="token punctuation">,</span> useRef<span class="token punctuation">,</span> useState } from <span class="token string">'react'</span><span class="token comment" spellcheck="true">;</span>
import { DndProvider<span class="token punctuation">,</span> useDrag<span class="token punctuation">,</span> useDrop } from <span class="token string">'react-dnd'</span><span class="token comment" spellcheck="true">;</span>
import { HTML5Backend } from <span class="token string">'react-dnd-html5-backend'</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> type <span class="token operator">=</span> <span class="token string">'DragableUploadList'</span><span class="token comment" spellcheck="true">;</span>

interface DragableUploadListItemProps {
  originNode<span class="token punctuation">:</span> React<span class="token punctuation">.</span>ReactElement<span class="token operator">&lt;</span>any<span class="token punctuation">,</span> string | React<span class="token punctuation">.</span>JSXElementConstructor<span class="token operator">&lt;</span>any<span class="token operator">></span><span class="token operator">></span><span class="token comment" spellcheck="true">;</span>
  file<span class="token punctuation">:</span> UploadFile<span class="token comment" spellcheck="true">;</span>
  fileList<span class="token punctuation">:</span> UploadFile<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>
  moveRow<span class="token punctuation">:</span> <span class="token punctuation">(</span>dragIndex<span class="token punctuation">:</span> any<span class="token punctuation">,</span> hoverIndex<span class="token punctuation">:</span> any<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> void<span class="token comment" spellcheck="true">;</span>
}

<span class="token keyword">const</span> DragableUploadListItem <span class="token operator">=</span> <span class="token punctuation">(</span>{
  originNode<span class="token punctuation">,</span>
  moveRow<span class="token punctuation">,</span>
  file<span class="token punctuation">,</span>
  fileList<span class="token punctuation">,</span>
}<span class="token punctuation">:</span> DragableUploadListItemProps<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
  <span class="token keyword">const</span> ref <span class="token operator">=</span> useRef<span class="token operator">&lt;</span>HTMLDivElement<span class="token operator">></span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  <span class="token keyword">const</span> index <span class="token operator">=</span> fileList<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>{ isOver<span class="token punctuation">,</span> dropClassName }<span class="token punctuation">,</span> drop<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useDrop</span><span class="token punctuation">(</span>{
    accept<span class="token punctuation">:</span> type<span class="token punctuation">,</span>
    collect<span class="token punctuation">:</span> monitor <span class="token operator">=</span><span class="token operator">></span> {
      <span class="token keyword">const</span> { index<span class="token punctuation">:</span> dragIndex } <span class="token operator">=</span> monitor<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span> || {}<span class="token comment" spellcheck="true">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>dragIndex <span class="token operator">==</span><span class="token operator">=</span> index<span class="token punctuation">)</span> {
        return {}<span class="token comment" spellcheck="true">;</span>
      }
      return {
        isOver<span class="token punctuation">:</span> monitor<span class="token punctuation">.</span><span class="token function">isOver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        dropClassName<span class="token punctuation">:</span> dragIndex <span class="token operator">&lt;</span> index <span class="token operator">?</span> <span class="token string">' drop-over-downward'</span> <span class="token punctuation">:</span> <span class="token string">' drop-over-upward'</span><span class="token punctuation">,</span>
      }<span class="token comment" spellcheck="true">;</span>
    }<span class="token punctuation">,</span>
    drop<span class="token punctuation">:</span> <span class="token punctuation">(</span>item<span class="token punctuation">:</span> any<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
      <span class="token function">moveRow</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>index<span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    }<span class="token punctuation">,</span>
  }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span><span class="token punctuation">,</span> drag<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useDrag</span><span class="token punctuation">(</span>{
    type<span class="token punctuation">,</span>
    item<span class="token punctuation">:</span> { index }<span class="token punctuation">,</span>
    collect<span class="token punctuation">:</span> monitor <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>{
      isDragging<span class="token punctuation">:</span> monitor<span class="token punctuation">.</span><span class="token function">isDragging</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    }<span class="token punctuation">)</span><span class="token punctuation">,</span>
  }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  <span class="token function">drop</span><span class="token punctuation">(</span><span class="token function">drag</span><span class="token punctuation">(</span>ref<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  <span class="token keyword">const</span> errorNode <span class="token operator">=</span> <span class="token operator">&lt;</span>Tooltip title<span class="token operator">=</span><span class="token string">"Upload Error"</span><span class="token operator">></span>{originNode<span class="token punctuation">.</span>props<span class="token punctuation">.</span>children}<span class="token operator">&lt;</span><span class="token operator">/</span>Tooltip<span class="token operator">></span><span class="token comment" spellcheck="true">;</span>
  return <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>div
      ref<span class="token operator">=</span>{ref}
      className<span class="token operator">=</span>{\`ant<span class="token operator">-</span>upload<span class="token operator">-</span>draggable<span class="token operator">-</span>list<span class="token operator">-</span>item \${isOver <span class="token operator">?</span> dropClassName <span class="token punctuation">:</span> <span class="token string">''</span>}\`}
      style<span class="token operator">=</span>{{ cursor<span class="token punctuation">:</span> <span class="token string">'move'</span> }}
    <span class="token operator">></span>
      {file<span class="token punctuation">.</span>status <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">'error'</span> <span class="token operator">?</span> errorNode <span class="token punctuation">:</span> originNode}
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>
  <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
}<span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
  <span class="token keyword">const</span> <span class="token punctuation">[</span>fileList<span class="token punctuation">,</span> setFileList<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>UploadFile<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    {
      uid<span class="token punctuation">:</span> <span class="token string">'-1'</span><span class="token punctuation">,</span>
      name<span class="token punctuation">:</span> <span class="token string">'image1.png'</span><span class="token punctuation">,</span>
      status<span class="token punctuation">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      url<span class="token punctuation">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
    {
      uid<span class="token punctuation">:</span> <span class="token string">'-2'</span><span class="token punctuation">,</span>
      name<span class="token punctuation">:</span> <span class="token string">'image2.png'</span><span class="token punctuation">,</span>
      status<span class="token punctuation">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      url<span class="token punctuation">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
    {
      uid<span class="token punctuation">:</span> <span class="token string">'-3'</span><span class="token punctuation">,</span>
      name<span class="token punctuation">:</span> <span class="token string">'image3.png'</span><span class="token punctuation">,</span>
      status<span class="token punctuation">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      url<span class="token punctuation">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
    {
      uid<span class="token punctuation">:</span> <span class="token string">'-4'</span><span class="token punctuation">,</span>
      name<span class="token punctuation">:</span> <span class="token string">'image4.png'</span><span class="token punctuation">,</span>
      status<span class="token punctuation">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      url<span class="token punctuation">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
    {
      uid<span class="token punctuation">:</span> <span class="token string">'-5'</span><span class="token punctuation">,</span>
      name<span class="token punctuation">:</span> <span class="token string">'image.png'</span><span class="token punctuation">,</span>
      status<span class="token punctuation">:</span> <span class="token string">'error'</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> moveRow <span class="token operator">=</span> <span class="token function">useCallback</span><span class="token punctuation">(</span>
    <span class="token punctuation">(</span>dragIndex<span class="token punctuation">:</span> number<span class="token punctuation">,</span> hoverIndex<span class="token punctuation">:</span> number<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
      <span class="token keyword">const</span> dragRow <span class="token operator">=</span> fileList<span class="token punctuation">[</span>dragIndex<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>
      <span class="token function">setFileList</span><span class="token punctuation">(</span>
        <span class="token function">update</span><span class="token punctuation">(</span>fileList<span class="token punctuation">,</span> {
          <span class="token variable">$splice</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>
            <span class="token punctuation">[</span>dragIndex<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token punctuation">[</span>hoverIndex<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> dragRow<span class="token punctuation">]</span><span class="token punctuation">,</span>
          <span class="token punctuation">]</span><span class="token punctuation">,</span>
        }<span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    }<span class="token punctuation">,</span>
    <span class="token punctuation">[</span>fileList<span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> onChange<span class="token punctuation">:</span> UploadProps<span class="token punctuation">[</span><span class="token string">'onChange'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>{ fileList<span class="token punctuation">:</span> newFileList }<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
    <span class="token function">setFileList</span><span class="token punctuation">(</span>newFileList<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  }<span class="token comment" spellcheck="true">;</span>

  return <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>DndProvider backend<span class="token operator">=</span>{HTML5Backend}<span class="token operator">></span>
      <span class="token operator">&lt;</span>Upload
        action<span class="token operator">=</span><span class="token string">"https://www.mocky.io/v2/5cc8019d300000980a055e76"</span>
        fileList<span class="token operator">=</span>{fileList}
        onChange<span class="token operator">=</span>{onChange}
        itemRender<span class="token operator">=</span>{<span class="token punctuation">(</span>originNode<span class="token punctuation">,</span> file<span class="token punctuation">,</span> currFileList<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>
          <span class="token operator">&lt;</span>DragableUploadListItem
            originNode<span class="token operator">=</span>{originNode}
            file<span class="token operator">=</span>{file}
            fileList<span class="token operator">=</span>{currFileList}
            moveRow<span class="token operator">=</span>{moveRow}
          <span class="token operator">/</span><span class="token operator">></span>
        <span class="token punctuation">)</span>}
      <span class="token operator">></span>
        <span class="token operator">&lt;</span>Button icon<span class="token operator">=</span>{<span class="token operator">&lt;</span>UploadOutlined <span class="token operator">/</span><span class="token operator">></span>}<span class="token operator">></span>Click <span class="token keyword">to</span> Upload<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>Upload<span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>DndProvider<span class="token operator">></span>
  <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
}<span class="token comment" spellcheck="true">;</span>

export <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>`}],highlightedCodes:{tsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Tooltip<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> UploadFile<span class="token punctuation">,</span> UploadProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd/es/upload/interface'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> update <span class="token keyword">from</span> <span class="token string">'immutability-helper'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useCallback<span class="token punctuation">,</span> useRef<span class="token punctuation">,</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> DndProvider<span class="token punctuation">,</span> useDrag<span class="token punctuation">,</span> useDrop <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react-dnd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> HTML5Backend <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react-dnd-html5-backend'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> type <span class="token operator">=</span> <span class="token string">'DragableUploadList'</span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">DragableUploadListItemProps</span> <span class="token punctuation">{</span>
  originNode<span class="token operator">:</span> React<span class="token punctuation">.</span>ReactElement<span class="token operator">&lt;</span>any<span class="token punctuation">,</span> string <span class="token operator">|</span> React<span class="token punctuation">.</span>JSXElementConstructor<span class="token operator">&lt;</span>any<span class="token operator">>></span><span class="token punctuation">;</span>
  file<span class="token operator">:</span> UploadFile<span class="token punctuation">;</span>
  fileList<span class="token operator">:</span> UploadFile<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token function-variable function">moveRow</span><span class="token operator">:</span> <span class="token punctuation">(</span>dragIndex<span class="token operator">:</span> any<span class="token punctuation">,</span> hoverIndex<span class="token operator">:</span> any<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">void</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">DragableUploadListItem</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
  originNode<span class="token punctuation">,</span>
  moveRow<span class="token punctuation">,</span>
  file<span class="token punctuation">,</span>
  fileList<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token operator">:</span> DragableUploadListItemProps<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> ref <span class="token operator">=</span> useRef<span class="token operator">&lt;</span>HTMLDivElement<span class="token operator">></span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> index <span class="token operator">=</span> fileList<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> isOver<span class="token punctuation">,</span> dropClassName <span class="token punctuation">}</span><span class="token punctuation">,</span> drop<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useDrop</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    accept<span class="token operator">:</span> type<span class="token punctuation">,</span>
    <span class="token function-variable function">collect</span><span class="token operator">:</span> monitor <span class="token operator">=></span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> <span class="token punctuation">{</span> index<span class="token operator">:</span> dragIndex <span class="token punctuation">}</span> <span class="token operator">=</span> monitor<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>dragIndex <span class="token operator">===</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span>
        isOver<span class="token operator">:</span> monitor<span class="token punctuation">.</span><span class="token function">isOver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        dropClassName<span class="token operator">:</span> dragIndex <span class="token operator">&lt;</span> index <span class="token operator">?</span> <span class="token string">' drop-over-downward'</span> <span class="token operator">:</span> <span class="token string">' drop-over-upward'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">drop</span><span class="token operator">:</span> <span class="token punctuation">(</span>item<span class="token operator">:</span> any<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
      <span class="token function">moveRow</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>index<span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span><span class="token punctuation">,</span> drag<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useDrag</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    type<span class="token punctuation">,</span>
    item<span class="token operator">:</span> <span class="token punctuation">{</span> index <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">collect</span><span class="token operator">:</span> monitor <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
      isDragging<span class="token operator">:</span> monitor<span class="token punctuation">.</span><span class="token function">isDragging</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">drop</span><span class="token punctuation">(</span><span class="token function">drag</span><span class="token punctuation">(</span>ref<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> errorNode <span class="token operator">=</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Tooltip</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Upload Error<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token punctuation">{</span>originNode<span class="token punctuation">.</span>props<span class="token punctuation">.</span>children<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Tooltip</span></span><span class="token punctuation">></span></span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>
      <span class="token attr-name">ref</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>ref<span class="token punctuation">}</span></span>
      <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">ant-upload-draggable-list-item </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>isOver <span class="token operator">?</span> dropClassName <span class="token operator">:</span> <span class="token string">''</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">}</span></span>
      <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> cursor<span class="token operator">:</span> <span class="token string">'move'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
    <span class="token punctuation">></span></span>
      <span class="token punctuation">{</span>file<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">'error'</span> <span class="token operator">?</span> errorNode <span class="token operator">:</span> originNode<span class="token punctuation">}</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>fileList<span class="token punctuation">,</span> setFileList<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>UploadFile<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      uid<span class="token operator">:</span> <span class="token string">'-1'</span><span class="token punctuation">,</span>
      name<span class="token operator">:</span> <span class="token string">'image1.png'</span><span class="token punctuation">,</span>
      status<span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      url<span class="token operator">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      uid<span class="token operator">:</span> <span class="token string">'-2'</span><span class="token punctuation">,</span>
      name<span class="token operator">:</span> <span class="token string">'image2.png'</span><span class="token punctuation">,</span>
      status<span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      url<span class="token operator">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      uid<span class="token operator">:</span> <span class="token string">'-3'</span><span class="token punctuation">,</span>
      name<span class="token operator">:</span> <span class="token string">'image3.png'</span><span class="token punctuation">,</span>
      status<span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      url<span class="token operator">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      uid<span class="token operator">:</span> <span class="token string">'-4'</span><span class="token punctuation">,</span>
      name<span class="token operator">:</span> <span class="token string">'image4.png'</span><span class="token punctuation">,</span>
      status<span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      url<span class="token operator">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      uid<span class="token operator">:</span> <span class="token string">'-5'</span><span class="token punctuation">,</span>
      name<span class="token operator">:</span> <span class="token string">'image.png'</span><span class="token punctuation">,</span>
      status<span class="token operator">:</span> <span class="token string">'error'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> moveRow <span class="token operator">=</span> <span class="token function">useCallback</span><span class="token punctuation">(</span>
    <span class="token punctuation">(</span>dragIndex<span class="token operator">:</span> number<span class="token punctuation">,</span> hoverIndex<span class="token operator">:</span> number<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> dragRow <span class="token operator">=</span> fileList<span class="token punctuation">[</span>dragIndex<span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token function">setFileList</span><span class="token punctuation">(</span>
        <span class="token function">update</span><span class="token punctuation">(</span>fileList<span class="token punctuation">,</span> <span class="token punctuation">{</span>
          $splice<span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token punctuation">[</span>dragIndex<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token punctuation">[</span>hoverIndex<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> dragRow<span class="token punctuation">]</span><span class="token punctuation">,</span>
          <span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span>fileList<span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> onChange<span class="token operator">:</span> UploadProps<span class="token punctuation">[</span><span class="token string">'onChange'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> fileList<span class="token operator">:</span> newFileList <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token function">setFileList</span><span class="token punctuation">(</span>newFileList<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">DndProvider</span></span> <span class="token attr-name">backend</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>HTML5Backend<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span>
        <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.mocky.io/v2/5cc8019d300000980a055e76<span class="token punctuation">"</span></span>
        <span class="token attr-name">fileList</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>fileList<span class="token punctuation">}</span></span>
        <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>onChange<span class="token punctuation">}</span></span>
        <span class="token attr-name">itemRender</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span>originNode<span class="token punctuation">,</span> file<span class="token punctuation">,</span> currFileList<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">DragableUploadListItem</span></span>
            <span class="token attr-name">originNode</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>originNode<span class="token punctuation">}</span></span>
            <span class="token attr-name">file</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>file<span class="token punctuation">}</span></span>
            <span class="token attr-name">fileList</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>currFileList<span class="token punctuation">}</span></span>
            <span class="token attr-name">moveRow</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>moveRow<span class="token punctuation">}</span></span>
          <span class="token punctuation">/></span></span>
        <span class="token punctuation">)</span><span class="token punctuation">}</span></span>
      <span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Click to Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">DndProvider</span></span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>`,jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Tooltip<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> update <span class="token keyword">from</span> <span class="token string">'immutability-helper'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useCallback<span class="token punctuation">,</span> useRef<span class="token punctuation">,</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> DndProvider<span class="token punctuation">,</span> useDrag<span class="token punctuation">,</span> useDrop <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react-dnd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> HTML5Backend <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react-dnd-html5-backend'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> type <span class="token operator">=</span> <span class="token string">'DragableUploadList'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">DragableUploadListItem</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> originNode<span class="token punctuation">,</span> moveRow<span class="token punctuation">,</span> file<span class="token punctuation">,</span> fileList <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> ref <span class="token operator">=</span> <span class="token function">useRef</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> index <span class="token operator">=</span> fileList<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> isOver<span class="token punctuation">,</span> dropClassName <span class="token punctuation">}</span><span class="token punctuation">,</span> drop<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useDrop</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">accept</span><span class="token operator">:</span> type<span class="token punctuation">,</span>
    <span class="token function-variable function">collect</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">monitor</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token literal-property property">index</span><span class="token operator">:</span> dragIndex <span class="token punctuation">}</span> <span class="token operator">=</span> monitor<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>dragIndex <span class="token operator">===</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">isOver</span><span class="token operator">:</span> monitor<span class="token punctuation">.</span><span class="token function">isOver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token literal-property property">dropClassName</span><span class="token operator">:</span> dragIndex <span class="token operator">&lt;</span> index <span class="token operator">?</span> <span class="token string">' drop-over-downward'</span> <span class="token operator">:</span> <span class="token string">' drop-over-upward'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">drop</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
      <span class="token function">moveRow</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>index<span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span><span class="token punctuation">,</span> drag<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useDrag</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    type<span class="token punctuation">,</span>
    <span class="token literal-property property">item</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      index<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">collect</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">monitor</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">isDragging</span><span class="token operator">:</span> monitor<span class="token punctuation">.</span><span class="token function">isDragging</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">drop</span><span class="token punctuation">(</span><span class="token function">drag</span><span class="token punctuation">(</span>ref<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> errorNode <span class="token operator">=</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Tooltip</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Upload Error<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token punctuation">{</span>originNode<span class="token punctuation">.</span>props<span class="token punctuation">.</span>children<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Tooltip</span></span><span class="token punctuation">></span></span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>
      <span class="token attr-name">ref</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>ref<span class="token punctuation">}</span></span>
      <span class="token attr-name">className</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">ant-upload-draggable-list-item </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>isOver <span class="token operator">?</span> dropClassName <span class="token operator">:</span> <span class="token string">''</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">}</span></span>
      <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
        <span class="token literal-property property">cursor</span><span class="token operator">:</span> <span class="token string">'move'</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
    <span class="token punctuation">></span></span>
      <span class="token punctuation">{</span>file<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">'error'</span> <span class="token operator">?</span> errorNode <span class="token operator">:</span> originNode<span class="token punctuation">}</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>fileList<span class="token punctuation">,</span> setFileList<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token string">'-1'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'image1.png'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token string">'-2'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'image2.png'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token string">'-3'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'image3.png'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token string">'-4'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'image4.png'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token string">'-5'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'image.png'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">'error'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> moveRow <span class="token operator">=</span> <span class="token function">useCallback</span><span class="token punctuation">(</span>
    <span class="token punctuation">(</span><span class="token parameter">dragIndex<span class="token punctuation">,</span> hoverIndex</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> dragRow <span class="token operator">=</span> fileList<span class="token punctuation">[</span>dragIndex<span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token function">setFileList</span><span class="token punctuation">(</span>
        <span class="token function">update</span><span class="token punctuation">(</span>fileList<span class="token punctuation">,</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">$splice</span><span class="token operator">:</span> <span class="token punctuation">[</span>
            <span class="token punctuation">[</span>dragIndex<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token punctuation">[</span>hoverIndex<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> dragRow<span class="token punctuation">]</span><span class="token punctuation">,</span>
          <span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span>fileList<span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token function-variable function">onChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> <span class="token literal-property property">fileList</span><span class="token operator">:</span> newFileList <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token function">setFileList</span><span class="token punctuation">(</span>newFileList<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">DndProvider</span></span> <span class="token attr-name">backend</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>HTML5Backend<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span>
        <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.mocky.io/v2/5cc8019d300000980a055e76<span class="token punctuation">"</span></span>
        <span class="token attr-name">fileList</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>fileList<span class="token punctuation">}</span></span>
        <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>onChange<span class="token punctuation">}</span></span>
        <span class="token attr-name">itemRender</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">originNode<span class="token punctuation">,</span> file<span class="token punctuation">,</span> currFileList</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">DragableUploadListItem</span></span>
            <span class="token attr-name">originNode</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>originNode<span class="token punctuation">}</span></span>
            <span class="token attr-name">file</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>file<span class="token punctuation">}</span></span>
            <span class="token attr-name">fileList</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>currFileList<span class="token punctuation">}</span></span>
            <span class="token attr-name">moveRow</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>moveRow<span class="token punctuation">}</span></span>
          <span class="token punctuation">/></span></span>
        <span class="token punctuation">)</span><span class="token punctuation">}</span></span>
      <span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Click to Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">DndProvider</span></span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
`},preview:function(){var D=g(0),mn=g(41);function R(a){return R=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(u){return typeof u}:function(u){return u&&typeof Symbol=="function"&&u.constructor===Symbol&&u!==Symbol.prototype?"symbol":typeof u},R(a)}J.default=void 0;var A=g(60),C=g(13),U=X(g(4059)),N=B(g(0)),V=g(4063),Z=g(4064);function O(a){if(typeof WeakMap!="function")return null;var u=new WeakMap,o=new WeakMap;return(O=function(m){return m?o:u})(a)}function B(a,u){if(!u&&a&&a.__esModule)return a;if(a===null||R(a)!="object"&&typeof a!="function")return{default:a};var o=O(u);if(o&&o.has(a))return o.get(a);var d={__proto__:null},m=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var b in a)if(b!=="default"&&Object.prototype.hasOwnProperty.call(a,b)){var S=m?Object.getOwnPropertyDescriptor(a,b):null;S&&(S.get||S.set)?Object.defineProperty(d,b,S):d[b]=a[b]}return d.default=a,o&&o.set(a,d),d}function X(a){return a&&a.__esModule?a:{default:a}}function M(a,u){return kn(a)||cn(a,u)||sn(a,u)||un()}function un(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function sn(a,u){if(a){if(typeof a=="string")return rn(a,u);var o=Object.prototype.toString.call(a).slice(8,-1);if(o==="Object"&&a.constructor&&(o=a.constructor.name),o==="Map"||o==="Set")return Array.from(a);if(o==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o))return rn(a,u)}}function rn(a,u){(u==null||u>a.length)&&(u=a.length);for(var o=0,d=new Array(u);o<u;o++)d[o]=a[o];return d}function cn(a,u){var o=a==null?null:typeof Symbol!="undefined"&&a[Symbol.iterator]||a["@@iterator"];if(o!=null){var d,m,b,S,x=[],j=!0,G=!1;try{if(b=(o=o.call(a)).next,u===0){if(Object(o)!==o)return;j=!1}else for(;!(j=(d=b.call(o)).done)&&(x.push(d.value),x.length!==u);j=!0);}catch(K){G=!0,m=K}finally{try{if(!j&&o.return!=null&&(S=o.return(),Object(S)!==S))return}finally{if(G)throw m}}return x}}function kn(a){if(Array.isArray(a))return a}var F="DragableUploadList",q=function(u){var o=u.originNode,d=u.moveRow,m=u.file,b=u.fileList,S=(0,N.useRef)(null),x=b.indexOf(m),j=(0,V.useDrop)({accept:F,collect:function(tn){var pn=tn.getItem()||{},W=pn.index;return W===x?{}:{isOver:tn.isOver(),dropClassName:W<x?" drop-over-downward":" drop-over-upward"}},drop:function(tn){d(tn.index,x)}}),G=M(j,2),K=G[0],ln=K.isOver,fn=K.dropClassName,yn=G[1],nn=(0,V.useDrag)({type:F,item:{index:x},collect:function(tn){return{isDragging:tn.isDragging()}}}),Un=M(nn,2),hn=Un[1];yn(hn(S));var _=N.default.createElement(C.Tooltip,{title:"Upload Error"},o.props.children);return N.default.createElement("div",{ref:S,className:"ant-upload-draggable-list-item ".concat(ln?fn:""),style:{cursor:"move"}},m.status==="error"?_:o)},t=function(){var u=(0,N.useState)([{uid:"-1",name:"image1.png",status:"done",url:"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png"},{uid:"-2",name:"image2.png",status:"done",url:"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png"},{uid:"-3",name:"image3.png",status:"done",url:"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png"},{uid:"-4",name:"image4.png",status:"done",url:"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png"},{uid:"-5",name:"image.png",status:"error"}]),o=M(u,2),d=o[0],m=o[1],b=(0,N.useCallback)(function(x,j){var G=d[x];m((0,U.default)(d,{$splice:[[x,1],[j,0,G]]}))},[d]),S=function(j){var G=j.fileList;m(G)};return N.default.createElement(V.DndProvider,{backend:Z.HTML5Backend},N.default.createElement(C.Upload,{action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",fileList:d,onChange:S,itemRender:function(j,G,K){return N.default.createElement(q,{originNode:j,file:G,fileList:K,moveRow:b})}},N.default.createElement(C.Button,{icon:N.default.createElement(A.UploadOutlined,null)},"Click to Upload")))},s;return D.createElement(t)},style:`#components-upload-demo-drag-sorting .ant-upload-draggable-list-item {
  border-top: 2px dashed rgba(0, 0, 0, 0);
  border-bottom: 2px dashed rgba(0, 0, 0, 0);
}
#components-upload-demo-drag-sorting .ant-upload-draggable-list-item.drop-over-downward {
  border-bottom-color: #1890ff;
}
#components-upload-demo-drag-sorting .ant-upload-draggable-list-item.drop-over-upward {
  border-top-color: #1890ff;
}`,highlightedStyle:`<span class="token selector"><span class="token id">#components-upload-demo-drag-sorting</span> <span class="token class">.ant-upload-draggable-list-item</span> </span><span class="token punctuation">{</span>
  <span class="token property">border-top</span><span class="token punctuation">:</span> <span class="token number">2</span>px dashed <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token property">border-bottom</span><span class="token punctuation">:</span> <span class="token number">2</span>px dashed <span class="token function">rgba</span><span class="token punctuation">(</span><span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0</span>, <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector"><span class="token id">#components-upload-demo-drag-sorting</span> <span class="token class">.ant-upload-draggable-list-item.drop-over-downward</span> </span><span class="token punctuation">{</span>
  <span class="token property">border-bottom-color</span><span class="token punctuation">:</span> <span class="token hexcode">#1890ff</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector"><span class="token id">#components-upload-demo-drag-sorting</span> <span class="token class">.ant-upload-draggable-list-item.drop-over-upward</span> </span><span class="token punctuation">{</span>
  <span class="token property">border-top-color</span><span class="token punctuation">:</span> <span class="token hexcode">#1890ff</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>`}},4799:function(Y,J,g){Y.exports={content:{"zh-CN":[["p","\u628A\u6587\u4EF6\u62D6\u5165\u6307\u5B9A\u533A\u57DF\uFF0C\u5B8C\u6210\u4E0A\u4F20\uFF0C\u540C\u6837\u652F\u6301\u70B9\u51FB\u4E0A\u4F20\u3002"],["p","\u8BBE\u7F6E ",["code","multiple"]," \u540E\uFF0C\u5728 ",["code","IE10+"]," \u53EF\u4EE5\u4E00\u6B21\u4E0A\u4F20\u591A\u4E2A\u6587\u4EF6\u3002"]],"en-US":[["p","You can drag files to a specific area, to upload. Alternatively, you can also upload by selecting."],["p","We can upload serveral files at once in modern browsers by giving the input the ",["code","multiple"]," attribute."]]},meta:{order:5,title:{"zh-CN":"\u62D6\u62FD\u4E0A\u4F20","en-US":"Drag and Drop"},filename:"components/upload/demo/drag.md",id:"components-upload-demo-drag"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:`import { InboxOutlined } from <span class="token string">'@ant-design/icons'</span><span class="token comment" spellcheck="true">;</span>
import type { UploadProps } from <span class="token string">'antd'</span><span class="token comment" spellcheck="true">;</span>
import { message<span class="token punctuation">,</span> Upload } from <span class="token string">'antd'</span><span class="token comment" spellcheck="true">;</span>
import React from <span class="token string">'react'</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> { Dragger } <span class="token operator">=</span> Upload<span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> props<span class="token punctuation">:</span> UploadProps <span class="token operator">=</span> {
  name<span class="token punctuation">:</span> <span class="token string">'file'</span><span class="token punctuation">,</span>
  multiple<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  action<span class="token punctuation">:</span> <span class="token string">'https://www.mocky.io/v2/5cc8019d300000980a055e76'</span><span class="token punctuation">,</span>
  <span class="token function">onChange</span><span class="token punctuation">(</span>info<span class="token punctuation">)</span> {
    <span class="token keyword">const</span> { status } <span class="token operator">=</span> info<span class="token punctuation">.</span>file<span class="token comment" spellcheck="true">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>status !<span class="token operator">==</span> <span class="token string">'uploading'</span><span class="token punctuation">)</span> {
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">,</span> info<span class="token punctuation">.</span>fileList<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    }
    <span class="token keyword">if</span> <span class="token punctuation">(</span>status <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">'done'</span><span class="token punctuation">)</span> {
      message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>\`\${info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name} file uploaded successfully<span class="token punctuation">.</span>\`<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    } <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>status <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">'error'</span><span class="token punctuation">)</span> {
      message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>\`\${info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name} file upload failed<span class="token punctuation">.</span>\`<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    }
  }<span class="token punctuation">,</span>
  <span class="token function">onDrop</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> {
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Dropped files'</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span>dataTransfer<span class="token punctuation">.</span>files<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  }<span class="token punctuation">,</span>
}<span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>
  <span class="token operator">&lt;</span>Dragger {<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>props}<span class="token operator">></span>
    <span class="token operator">&lt;</span>p className<span class="token operator">=</span><span class="token string">"ant-upload-drag-icon"</span><span class="token operator">></span>
      <span class="token operator">&lt;</span>InboxOutlined <span class="token operator">/</span><span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>
    <span class="token operator">&lt;</span>p className<span class="token operator">=</span><span class="token string">"ant-upload-text"</span><span class="token operator">></span>Click <span class="token operator">or</span> drag file <span class="token keyword">to</span> this area <span class="token keyword">to</span> upload<span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>
    <span class="token operator">&lt;</span>p className<span class="token operator">=</span><span class="token string">"ant-upload-hint"</span><span class="token operator">></span>
      Support <span class="token keyword">for</span> a single <span class="token operator">or</span> bulk upload<span class="token punctuation">.</span> Strictly prohibit from uploading company data <span class="token operator">or</span> other
      band files
    <span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>Dragger<span class="token operator">></span>
<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

export <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>`}],highlightedCodes:{tsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> InboxOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> UploadProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> message<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span> Dragger <span class="token punctuation">}</span> <span class="token operator">=</span> Upload<span class="token punctuation">;</span>

<span class="token keyword">const</span> props<span class="token operator">:</span> UploadProps <span class="token operator">=</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token string">'file'</span><span class="token punctuation">,</span>
  multiple<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  action<span class="token operator">:</span> <span class="token string">'https://www.mocky.io/v2/5cc8019d300000980a055e76'</span><span class="token punctuation">,</span>
  <span class="token function">onChange</span><span class="token punctuation">(</span>info<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> status <span class="token punctuation">}</span> <span class="token operator">=</span> info<span class="token punctuation">.</span>file<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>status <span class="token operator">!==</span> <span class="token string">'uploading'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">,</span> info<span class="token punctuation">.</span>fileList<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>status <span class="token operator">===</span> <span class="token string">'done'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> file uploaded successfully.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>status <span class="token operator">===</span> <span class="token string">'error'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> file upload failed.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">onDrop</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Dropped files'</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span>dataTransfer<span class="token punctuation">.</span>files<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Dragger</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ant-upload-drag-icon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">InboxOutlined</span></span> <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ant-upload-text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Click or drag file to <span class="token keyword">this</span> area to upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ant-upload-hint<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
      Support <span class="token keyword">for</span> a single or bulk upload<span class="token punctuation">.</span> Strictly prohibit from uploading company data or other
      band files
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Dragger</span></span><span class="token punctuation">></span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>`,jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> InboxOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> message<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> Dragger <span class="token punctuation">}</span> <span class="token operator">=</span> Upload<span class="token punctuation">;</span>
<span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'file'</span><span class="token punctuation">,</span>
  <span class="token literal-property property">multiple</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token literal-property property">action</span><span class="token operator">:</span> <span class="token string">'https://www.mocky.io/v2/5cc8019d300000980a055e76'</span><span class="token punctuation">,</span>
  <span class="token function">onChange</span><span class="token punctuation">(</span><span class="token parameter">info</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> status <span class="token punctuation">}</span> <span class="token operator">=</span> info<span class="token punctuation">.</span>file<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>status <span class="token operator">!==</span> <span class="token string">'uploading'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>file<span class="token punctuation">,</span> info<span class="token punctuation">.</span>fileList<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>status <span class="token operator">===</span> <span class="token string">'done'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> file uploaded successfully.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>status <span class="token operator">===</span> <span class="token string">'error'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>info<span class="token punctuation">.</span>file<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> file upload failed.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">onDrop</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Dropped files'</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span>dataTransfer<span class="token punctuation">.</span>files<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Dragger</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ant-upload-drag-icon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">InboxOutlined</span></span> <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ant-upload-text<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Click or drag file to <span class="token keyword">this</span> area to upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ant-upload-hint<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
      Support <span class="token keyword">for</span> a single or bulk upload<span class="token punctuation">.</span> Strictly prohibit from uploading company data or other
      band files
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Dragger</span></span><span class="token punctuation">></span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
`},preview:function(){var D=g(0),mn=g(41);J.default=void 0;var R=g(60),A=g(13),C=U(g(0));function U(B){return B&&B.__esModule?B:{default:B}}var N=A.Upload.Dragger,V={name:"file",multiple:!0,action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",onChange:function(X){var M=X.file.status;M!=="uploading"&&console.log(X.file,X.fileList),M==="done"?A.message.success("".concat(X.file.name," file uploaded successfully.")):M==="error"&&A.message.error("".concat(X.file.name," file upload failed."))},onDrop:function(X){console.log("Dropped files",X.dataTransfer.files)}},Z=function(){return C.default.createElement(N,V,C.default.createElement("p",{className:"ant-upload-drag-icon"},C.default.createElement(R.InboxOutlined,null)),C.default.createElement("p",{className:"ant-upload-text"},"Click or drag file to this area to upload"),C.default.createElement("p",{className:"ant-upload-hint"},"Support for a single or bulk upload. Strictly prohibit from uploading company data or other band files"))},O;return D.createElement(Z)}}},4800:function(Y,J,g){Y.exports={content:{"zh-CN":[["p","\u6839\u636E\u7C7B\u578B\u9ED8\u8BA4\u663E\u793A\u5BF9\u5E94 icon"]],"en-US":[["p","Displays the corresponding by default by type icon"]]},meta:{order:12,debug:!0,title:{"zh-CN":"\u81EA\u5B9A\u4E49\u663E\u793A icon","en-US":"custom show icon"},filename:"components/upload/demo/file-type.md",id:"components-upload-demo-file-type"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:`import {
  FileExcelTwoTone<span class="token punctuation">,</span>
  FilePdfTwoTone<span class="token punctuation">,</span>
  FileWordTwoTone<span class="token punctuation">,</span>
  LoadingOutlined<span class="token punctuation">,</span>
  PaperClipOutlined<span class="token punctuation">,</span>
  PictureTwoTone<span class="token punctuation">,</span>
  PlusOutlined<span class="token punctuation">,</span>
} from <span class="token string">'@ant-design/icons'</span><span class="token comment" spellcheck="true">;</span>
import { Modal<span class="token punctuation">,</span> Upload } from <span class="token string">'antd'</span><span class="token comment" spellcheck="true">;</span>
import type { RcFile<span class="token punctuation">,</span> UploadFile<span class="token punctuation">,</span> UploadProps } from <span class="token string">'antd/es/upload/interface'</span><span class="token comment" spellcheck="true">;</span>
import React<span class="token punctuation">,</span> { useState } from <span class="token string">'react'</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> getBase64 <span class="token operator">=</span> <span class="token punctuation">(</span>file<span class="token punctuation">:</span> RcFile<span class="token punctuation">)</span><span class="token punctuation">:</span> Promise<span class="token operator">&lt;</span>string<span class="token operator">></span> <span class="token operator">=</span><span class="token operator">></span>
  new <span class="token function">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
    <span class="token keyword">const</span> reader <span class="token operator">=</span> new <span class="token function">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    reader<span class="token punctuation">.</span><span class="token function">readAsDataURL</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    reader<span class="token punctuation">.</span>onload <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">resolve</span><span class="token punctuation">(</span>reader<span class="token punctuation">.</span>result as string<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    reader<span class="token punctuation">.</span>onerror <span class="token operator">=</span> error <span class="token operator">=</span><span class="token operator">></span> <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
  <span class="token keyword">const</span> <span class="token punctuation">[</span>previewOpen<span class="token punctuation">,</span> setPreviewOpen<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>previewImage<span class="token punctuation">,</span> setPreviewImage<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>fileList<span class="token punctuation">,</span> setFileList<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>UploadFile<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    {
      uid<span class="token punctuation">:</span> <span class="token string">'-2'</span><span class="token punctuation">,</span>
      name<span class="token punctuation">:</span> <span class="token string">'pdf.pdf'</span><span class="token punctuation">,</span>
      status<span class="token punctuation">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      url<span class="token punctuation">:</span> <span class="token string">'http://cdn07.foxitsoftware.cn/pub/foxit/cpdf/FoxitCompanyProfile.pdf'</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
    {
      uid<span class="token punctuation">:</span> <span class="token string">'-3'</span><span class="token punctuation">,</span>
      name<span class="token punctuation">:</span> <span class="token string">'doc.doc'</span><span class="token punctuation">,</span>
      status<span class="token punctuation">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      url<span class="token punctuation">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.doc'</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
    {
      uid<span class="token punctuation">:</span> <span class="token string">'-4'</span><span class="token punctuation">,</span>
      name<span class="token punctuation">:</span> <span class="token string">'image.png'</span><span class="token punctuation">,</span>
      status<span class="token punctuation">:</span> <span class="token string">'error'</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
    {
      uid<span class="token punctuation">:</span> <span class="token string">'-5'</span><span class="token punctuation">,</span>
      name<span class="token punctuation">:</span> <span class="token string">'pdf.pdf'</span><span class="token punctuation">,</span>
      status<span class="token punctuation">:</span> <span class="token string">'error'</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
    {
      uid<span class="token punctuation">:</span> <span class="token string">'-6'</span><span class="token punctuation">,</span>
      name<span class="token punctuation">:</span> <span class="token string">'doc.doc'</span><span class="token punctuation">,</span>
      status<span class="token punctuation">:</span> <span class="token string">'error'</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> handleCancel <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">setPreviewOpen</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> handlePreview <span class="token operator">=</span> async <span class="token punctuation">(</span>file<span class="token punctuation">:</span> UploadFile<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
    <span class="token keyword">if</span> <span class="token punctuation">(</span>!file<span class="token punctuation">.</span>url <span class="token operator">&amp;</span><span class="token operator">&amp;</span> !file<span class="token punctuation">.</span>preview<span class="token punctuation">)</span> {
      file<span class="token punctuation">.</span>preview <span class="token operator">=</span> await <span class="token function">getBase64</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>originFileObj as RcFile<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    }

    <span class="token function">setPreviewOpen</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    <span class="token function">setPreviewImage</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>url || <span class="token punctuation">(</span>file<span class="token punctuation">.</span>preview as string<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  }<span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> handleChange<span class="token punctuation">:</span> UploadProps<span class="token punctuation">[</span><span class="token string">'onChange'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>{ fileList<span class="token punctuation">:</span> newFileList }<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span>
    <span class="token function">setFileList</span><span class="token punctuation">(</span>newFileList<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> handleIconRender<span class="token punctuation">:</span> UploadProps<span class="token punctuation">[</span><span class="token string">'iconRender'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>file<span class="token punctuation">,</span> listType<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
    <span class="token keyword">const</span> fileSufIconList <span class="token operator">=</span> <span class="token punctuation">[</span>
      { type<span class="token punctuation">:</span> <span class="token operator">&lt;</span>FilePdfTwoTone <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span> suf<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'.pdf'</span><span class="token punctuation">]</span> }<span class="token punctuation">,</span>
      { type<span class="token punctuation">:</span> <span class="token operator">&lt;</span>FileExcelTwoTone <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span> suf<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'.xlsx'</span><span class="token punctuation">,</span> <span class="token string">'.xls'</span><span class="token punctuation">,</span> <span class="token string">'.csv'</span><span class="token punctuation">]</span> }<span class="token punctuation">,</span>
      { type<span class="token punctuation">:</span> <span class="token operator">&lt;</span>FileWordTwoTone <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span> suf<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'.doc'</span><span class="token punctuation">,</span> <span class="token string">'.docx'</span><span class="token punctuation">]</span> }<span class="token punctuation">,</span>
      {
        type<span class="token punctuation">:</span> <span class="token operator">&lt;</span>PictureTwoTone <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span>
        suf<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'.webp'</span><span class="token punctuation">,</span> <span class="token string">'.svg'</span><span class="token punctuation">,</span> <span class="token string">'.png'</span><span class="token punctuation">,</span> <span class="token string">'.gif'</span><span class="token punctuation">,</span> <span class="token string">'.jpg'</span><span class="token punctuation">,</span> <span class="token string">'.jpeg'</span><span class="token punctuation">,</span> <span class="token string">'.jfif'</span><span class="token punctuation">,</span> <span class="token string">'.bmp'</span><span class="token punctuation">,</span> <span class="token string">'.dpg'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      }<span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>
    <span class="token operator">/</span><span class="token operator">/</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> file<span class="token punctuation">,</span> listType<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    let icon <span class="token operator">=</span> file<span class="token punctuation">.</span>status <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">'uploading'</span> <span class="token operator">?</span> <span class="token operator">&lt;</span>LoadingOutlined <span class="token operator">/</span><span class="token operator">></span> <span class="token punctuation">:</span> <span class="token operator">&lt;</span>PaperClipOutlined <span class="token operator">/</span><span class="token operator">></span><span class="token comment" spellcheck="true">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>listType <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">'picture'</span> || listType <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">'picture-card'</span><span class="token punctuation">)</span> {
      <span class="token keyword">if</span> <span class="token punctuation">(</span>listType <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">'picture-card'</span> <span class="token operator">&amp;</span><span class="token operator">&amp;</span> file<span class="token punctuation">.</span>status <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">'uploading'</span><span class="token punctuation">)</span> {
        icon <span class="token operator">=</span> <span class="token operator">&lt;</span>LoadingOutlined <span class="token operator">/</span><span class="token operator">></span><span class="token comment" spellcheck="true">; // or icon = 'uploading...';</span>
      } <span class="token keyword">else</span> {
        fileSufIconList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>item <span class="token operator">=</span><span class="token operator">></span> {
          <span class="token keyword">if</span> <span class="token punctuation">(</span>item<span class="token punctuation">.</span>suf<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> {
            icon <span class="token operator">=</span> item<span class="token punctuation">.</span>type<span class="token comment" spellcheck="true">;</span>
          }
        }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
      }
    }
    return icon<span class="token comment" spellcheck="true">;</span>
  }<span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> uploadButton <span class="token operator">=</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>div<span class="token operator">></span>
      <span class="token operator">&lt;</span>PlusOutlined <span class="token operator">/</span><span class="token operator">></span>
      <span class="token operator">&lt;</span>div style<span class="token operator">=</span>{{ marginTop<span class="token punctuation">:</span> <span class="token number">8</span> }}<span class="token operator">></span>Upload<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>
  <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

  return <span class="token punctuation">(</span>
    <span class="token operator">&lt;></span>
      <span class="token operator">&lt;</span>Upload
        action<span class="token operator">=</span><span class="token string">"https://www.mocky.io/v2/5cc8019d300000980a055e76"</span>
        listType<span class="token operator">=</span><span class="token string">"picture-card"</span>
        fileList<span class="token operator">=</span>{fileList}
        onPreview<span class="token operator">=</span>{handlePreview}
        onChange<span class="token operator">=</span>{handleChange}
        iconRender<span class="token operator">=</span>{handleIconRender}
      <span class="token operator">></span>
        {fileList<span class="token punctuation">.</span>length <span class="token operator">>=</span> <span class="token number">8</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token punctuation">:</span> uploadButton}
      <span class="token operator">&lt;</span><span class="token operator">/</span>Upload<span class="token operator">></span>
      <span class="token operator">&lt;</span>Modal open<span class="token operator">=</span>{previewOpen} footer<span class="token operator">=</span>{<span class="token keyword">null</span>} onCancel<span class="token operator">=</span>{handleCancel}<span class="token operator">></span>
        <span class="token operator">&lt;</span>img alt<span class="token operator">=</span><span class="token string">"example"</span> style<span class="token operator">=</span>{{ width<span class="token punctuation">:</span> <span class="token string">'100%'</span> }} src<span class="token operator">=</span>{previewImage} <span class="token operator">/</span><span class="token operator">></span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>Modal<span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">></span>
  <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
}<span class="token comment" spellcheck="true">;</span>

export <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>`}],highlightedCodes:{tsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span>
  FileExcelTwoTone<span class="token punctuation">,</span>
  FilePdfTwoTone<span class="token punctuation">,</span>
  FileWordTwoTone<span class="token punctuation">,</span>
  LoadingOutlined<span class="token punctuation">,</span>
  PaperClipOutlined<span class="token punctuation">,</span>
  PictureTwoTone<span class="token punctuation">,</span>
  PlusOutlined<span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Modal<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> RcFile<span class="token punctuation">,</span> UploadFile<span class="token punctuation">,</span> UploadProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd/es/upload/interface'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> getBase64 <span class="token operator">=</span> <span class="token punctuation">(</span>file<span class="token operator">:</span> RcFile<span class="token punctuation">)</span><span class="token operator">:</span> Promise<span class="token operator">&lt;</span>string<span class="token operator">></span> <span class="token operator">=></span>
  <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    reader<span class="token punctuation">.</span><span class="token function">readAsDataURL</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
    reader<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">resolve</span><span class="token punctuation">(</span>reader<span class="token punctuation">.</span>result <span class="token keyword">as</span> string<span class="token punctuation">)</span><span class="token punctuation">;</span>
    reader<span class="token punctuation">.</span><span class="token function-variable function">onerror</span> <span class="token operator">=</span> error <span class="token operator">=></span> <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>previewOpen<span class="token punctuation">,</span> setPreviewOpen<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>previewImage<span class="token punctuation">,</span> setPreviewImage<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>fileList<span class="token punctuation">,</span> setFileList<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>UploadFile<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      uid<span class="token operator">:</span> <span class="token string">'-2'</span><span class="token punctuation">,</span>
      name<span class="token operator">:</span> <span class="token string">'pdf.pdf'</span><span class="token punctuation">,</span>
      status<span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      url<span class="token operator">:</span> <span class="token string">'http://cdn07.foxitsoftware.cn/pub/foxit/cpdf/FoxitCompanyProfile.pdf'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      uid<span class="token operator">:</span> <span class="token string">'-3'</span><span class="token punctuation">,</span>
      name<span class="token operator">:</span> <span class="token string">'doc.doc'</span><span class="token punctuation">,</span>
      status<span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      url<span class="token operator">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.doc'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      uid<span class="token operator">:</span> <span class="token string">'-4'</span><span class="token punctuation">,</span>
      name<span class="token operator">:</span> <span class="token string">'image.png'</span><span class="token punctuation">,</span>
      status<span class="token operator">:</span> <span class="token string">'error'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      uid<span class="token operator">:</span> <span class="token string">'-5'</span><span class="token punctuation">,</span>
      name<span class="token operator">:</span> <span class="token string">'pdf.pdf'</span><span class="token punctuation">,</span>
      status<span class="token operator">:</span> <span class="token string">'error'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      uid<span class="token operator">:</span> <span class="token string">'-6'</span><span class="token punctuation">,</span>
      name<span class="token operator">:</span> <span class="token string">'doc.doc'</span><span class="token punctuation">,</span>
      status<span class="token operator">:</span> <span class="token string">'error'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">handleCancel</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">setPreviewOpen</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">handlePreview</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>file<span class="token operator">:</span> UploadFile<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>file<span class="token punctuation">.</span>url <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>file<span class="token punctuation">.</span>preview<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      file<span class="token punctuation">.</span>preview <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getBase64</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>originFileObj <span class="token keyword">as</span> RcFile<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token function">setPreviewOpen</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">setPreviewImage</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>url <span class="token operator">||</span> <span class="token punctuation">(</span>file<span class="token punctuation">.</span>preview <span class="token keyword">as</span> string<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> handleChange<span class="token operator">:</span> UploadProps<span class="token punctuation">[</span><span class="token string">'onChange'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> fileList<span class="token operator">:</span> newFileList <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=></span>
    <span class="token function">setFileList</span><span class="token punctuation">(</span>newFileList<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> handleIconRender<span class="token operator">:</span> UploadProps<span class="token punctuation">[</span><span class="token string">'iconRender'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>file<span class="token punctuation">,</span> listType<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> fileSufIconList <span class="token operator">=</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FilePdfTwoTone</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> suf<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'.pdf'</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FileExcelTwoTone</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> suf<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'.xlsx'</span><span class="token punctuation">,</span> <span class="token string">'.xls'</span><span class="token punctuation">,</span> <span class="token string">'.csv'</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span> type<span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FileWordTwoTone</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> suf<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'.doc'</span><span class="token punctuation">,</span> <span class="token string">'.docx'</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        type<span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">PictureTwoTone</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>
        suf<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'.webp'</span><span class="token punctuation">,</span> <span class="token string">'.svg'</span><span class="token punctuation">,</span> <span class="token string">'.png'</span><span class="token punctuation">,</span> <span class="token string">'.gif'</span><span class="token punctuation">,</span> <span class="token string">'.jpg'</span><span class="token punctuation">,</span> <span class="token string">'.jpeg'</span><span class="token punctuation">,</span> <span class="token string">'.jfif'</span><span class="token punctuation">,</span> <span class="token string">'.bmp'</span><span class="token punctuation">,</span> <span class="token string">'.dpg'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token comment">// console.log(1, file, listType);</span>
    <span class="token keyword">let</span> icon <span class="token operator">=</span> file<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">'uploading'</span> <span class="token operator">?</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">LoadingOutlined</span></span> <span class="token punctuation">/></span></span> <span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">PaperClipOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>listType <span class="token operator">===</span> <span class="token string">'picture'</span> <span class="token operator">||</span> listType <span class="token operator">===</span> <span class="token string">'picture-card'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>listType <span class="token operator">===</span> <span class="token string">'picture-card'</span> <span class="token operator">&amp;&amp;</span> file<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">'uploading'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        icon <span class="token operator">=</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">LoadingOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span> <span class="token comment">// or icon = 'uploading...';</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        fileSufIconList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>item <span class="token operator">=></span> <span class="token punctuation">{</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>item<span class="token punctuation">.</span>suf<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            icon <span class="token operator">=</span> item<span class="token punctuation">.</span>type<span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> icon<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> uploadButton <span class="token operator">=</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">PlusOutlined</span></span> <span class="token punctuation">/></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> marginTop<span class="token operator">:</span> <span class="token number">8</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span>
        <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.mocky.io/v2/5cc8019d300000980a055e76<span class="token punctuation">"</span></span>
        <span class="token attr-name">listType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>picture-card<span class="token punctuation">"</span></span>
        <span class="token attr-name">fileList</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>fileList<span class="token punctuation">}</span></span>
        <span class="token attr-name">onPreview</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handlePreview<span class="token punctuation">}</span></span>
        <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleChange<span class="token punctuation">}</span></span>
        <span class="token attr-name">iconRender</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleIconRender<span class="token punctuation">}</span></span>
      <span class="token punctuation">></span></span>
        <span class="token punctuation">{</span>fileList<span class="token punctuation">.</span>length <span class="token operator">>=</span> <span class="token number">8</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> uploadButton<span class="token punctuation">}</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Modal</span></span> <span class="token attr-name">open</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>previewOpen<span class="token punctuation">}</span></span> <span class="token attr-name">footer</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">null</span><span class="token punctuation">}</span></span> <span class="token attr-name">onCancel</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleCancel<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>example<span class="token punctuation">"</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> width<span class="token operator">:</span> <span class="token string">'100%'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token attr-name">src</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>previewImage<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Modal</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>`,jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span>
  FileExcelTwoTone<span class="token punctuation">,</span>
  FilePdfTwoTone<span class="token punctuation">,</span>
  FileWordTwoTone<span class="token punctuation">,</span>
  LoadingOutlined<span class="token punctuation">,</span>
  PaperClipOutlined<span class="token punctuation">,</span>
  PictureTwoTone<span class="token punctuation">,</span>
  PlusOutlined<span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Modal<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">getBase64</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token operator">=></span>
  <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    reader<span class="token punctuation">.</span><span class="token function">readAsDataURL</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
    reader<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">resolve</span><span class="token punctuation">(</span>reader<span class="token punctuation">.</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
    reader<span class="token punctuation">.</span><span class="token function-variable function">onerror</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>previewOpen<span class="token punctuation">,</span> setPreviewOpen<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>previewImage<span class="token punctuation">,</span> setPreviewImage<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>fileList<span class="token punctuation">,</span> setFileList<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token string">'-2'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'pdf.pdf'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">'http://cdn07.foxitsoftware.cn/pub/foxit/cpdf/FoxitCompanyProfile.pdf'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token string">'-3'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'doc.doc'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.doc'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token string">'-4'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'image.png'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">'error'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token string">'-5'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'pdf.pdf'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">'error'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token string">'-6'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'doc.doc'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">'error'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token function-variable function">handleCancel</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">setPreviewOpen</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token function-variable function">handlePreview</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>file<span class="token punctuation">.</span>url <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>file<span class="token punctuation">.</span>preview<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      file<span class="token punctuation">.</span>preview <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getBase64</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>originFileObj<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">setPreviewOpen</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">setPreviewImage</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>url <span class="token operator">||</span> file<span class="token punctuation">.</span>preview<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token function-variable function">handleChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> <span class="token literal-property property">fileList</span><span class="token operator">:</span> newFileList <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">setFileList</span><span class="token punctuation">(</span>newFileList<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token function-variable function">handleIconRender</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">file<span class="token punctuation">,</span> listType</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> fileSufIconList <span class="token operator">=</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FilePdfTwoTone</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>
        <span class="token literal-property property">suf</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'.pdf'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FileExcelTwoTone</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>
        <span class="token literal-property property">suf</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'.xlsx'</span><span class="token punctuation">,</span> <span class="token string">'.xls'</span><span class="token punctuation">,</span> <span class="token string">'.csv'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">FileWordTwoTone</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>
        <span class="token literal-property property">suf</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'.doc'</span><span class="token punctuation">,</span> <span class="token string">'.docx'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">PictureTwoTone</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>
        <span class="token literal-property property">suf</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'.webp'</span><span class="token punctuation">,</span> <span class="token string">'.svg'</span><span class="token punctuation">,</span> <span class="token string">'.png'</span><span class="token punctuation">,</span> <span class="token string">'.gif'</span><span class="token punctuation">,</span> <span class="token string">'.jpg'</span><span class="token punctuation">,</span> <span class="token string">'.jpeg'</span><span class="token punctuation">,</span> <span class="token string">'.jfif'</span><span class="token punctuation">,</span> <span class="token string">'.bmp'</span><span class="token punctuation">,</span> <span class="token string">'.dpg'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token comment">// console.log(1, file, listType);</span>
    <span class="token keyword">let</span> icon <span class="token operator">=</span> file<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">'uploading'</span> <span class="token operator">?</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">LoadingOutlined</span></span> <span class="token punctuation">/></span></span> <span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">PaperClipOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>listType <span class="token operator">===</span> <span class="token string">'picture'</span> <span class="token operator">||</span> listType <span class="token operator">===</span> <span class="token string">'picture-card'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>listType <span class="token operator">===</span> <span class="token string">'picture-card'</span> <span class="token operator">&amp;&amp;</span> file<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">'uploading'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        icon <span class="token operator">=</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">LoadingOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span> <span class="token comment">// or icon = 'uploading...';</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        fileSufIconList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>item<span class="token punctuation">.</span>suf<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            icon <span class="token operator">=</span> item<span class="token punctuation">.</span>type<span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> icon<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> uploadButton <span class="token operator">=</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">PlusOutlined</span></span> <span class="token punctuation">/></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>
        <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
          <span class="token literal-property property">marginTop</span><span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
      <span class="token punctuation">></span></span>
        Upload
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span>
        <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.mocky.io/v2/5cc8019d300000980a055e76<span class="token punctuation">"</span></span>
        <span class="token attr-name">listType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>picture-card<span class="token punctuation">"</span></span>
        <span class="token attr-name">fileList</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>fileList<span class="token punctuation">}</span></span>
        <span class="token attr-name">onPreview</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handlePreview<span class="token punctuation">}</span></span>
        <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleChange<span class="token punctuation">}</span></span>
        <span class="token attr-name">iconRender</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleIconRender<span class="token punctuation">}</span></span>
      <span class="token punctuation">></span></span>
        <span class="token punctuation">{</span>fileList<span class="token punctuation">.</span>length <span class="token operator">>=</span> <span class="token number">8</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> uploadButton<span class="token punctuation">}</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Modal</span></span> <span class="token attr-name">open</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>previewOpen<span class="token punctuation">}</span></span> <span class="token attr-name">footer</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">null</span><span class="token punctuation">}</span></span> <span class="token attr-name">onCancel</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleCancel<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span>
          <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>example<span class="token punctuation">"</span></span>
          <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
            <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token string">'100%'</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
          <span class="token attr-name">src</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>previewImage<span class="token punctuation">}</span></span>
        <span class="token punctuation">/></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Modal</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
`},preview:function(){var D=g(0),mn=g(41);function R(t){return R=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(s){return typeof s}:function(s){return s&&typeof Symbol=="function"&&s.constructor===Symbol&&s!==Symbol.prototype?"symbol":typeof s},R(t)}J.default=void 0;var A=g(60),C=g(13),U=V(g(0));function N(t){if(typeof WeakMap!="function")return null;var s=new WeakMap,a=new WeakMap;return(N=function(o){return o?a:s})(t)}function V(t,s){if(!s&&t&&t.__esModule)return t;if(t===null||R(t)!="object"&&typeof t!="function")return{default:t};var a=N(s);if(a&&a.has(t))return a.get(t);var u={__proto__:null},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var d in t)if(d!=="default"&&Object.prototype.hasOwnProperty.call(t,d)){var m=o?Object.getOwnPropertyDescriptor(t,d):null;m&&(m.get||m.set)?Object.defineProperty(u,d,m):u[d]=t[d]}return u.default=t,a&&a.set(t,u),u}function Z(){"use strict";/*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */Z=function(){return s};var t,s={},a=Object.prototype,u=a.hasOwnProperty,o=Object.defineProperty||function(i,p,e){i[p]=e.value},d=typeof Symbol=="function"?Symbol:{},m=d.iterator||"@@iterator",b=d.asyncIterator||"@@asyncIterator",S=d.toStringTag||"@@toStringTag";function x(i,p,e){return Object.defineProperty(i,p,{value:e,enumerable:!0,configurable:!0,writable:!0}),i[p]}try{x({},"")}catch(i){x=function(e,y,r){return e[y]=r}}function j(i,p,e,y){var r=p&&p.prototype instanceof Un?p:Un,c=Object.create(r.prototype),h=new Tn(y||[]);return o(c,"_invoke",{value:xn(i,e,h)}),c}function G(i,p,e){try{return{type:"normal",arg:i.call(p,e)}}catch(y){return{type:"throw",arg:y}}}s.wrap=j;var K="suspendedStart",ln="suspendedYield",fn="executing",yn="completed",nn={};function Un(){}function hn(){}function _(){}var H={};x(H,m,function(){return this});var tn=Object.getPrototypeOf,pn=tn&&tn(tn(Fn([])));pn&&pn!==a&&u.call(pn,m)&&(H=pn);var W=_.prototype=Un.prototype=Object.create(H);function Pn(i){["next","throw","return"].forEach(function(p){x(i,p,function(e){return this._invoke(p,e)})})}function gn(i,p){function e(r,c,h,P){var E=G(i[r],i,c);if(E.type!=="throw"){var z=E.arg,Q=z.value;return Q&&R(Q)=="object"&&u.call(Q,"__await")?p.resolve(Q.__await).then(function(en){e("next",en,h,P)},function(en){e("throw",en,h,P)}):p.resolve(Q).then(function(en){z.value=en,h(z)},function(en){return e("throw",en,h,P)})}P(E.arg)}var y;o(this,"_invoke",{value:function(c,h){function P(){return new p(function(E,z){e(c,h,E,z)})}return y=y?y.then(P,P):P()}})}function xn(i,p,e){var y=K;return function(r,c){if(y===fn)throw new Error("Generator is already running");if(y===yn){if(r==="throw")throw c;return{value:t,done:!0}}for(e.method=r,e.arg=c;;){var h=e.delegate;if(h){var P=Ln(h,e);if(P){if(P===nn)continue;return P}}if(e.method==="next")e.sent=e._sent=e.arg;else if(e.method==="throw"){if(y===K)throw y=yn,e.arg;e.dispatchException(e.arg)}else e.method==="return"&&e.abrupt("return",e.arg);y=fn;var E=G(i,p,e);if(E.type==="normal"){if(y=e.done?yn:ln,E.arg===nn)continue;return{value:E.arg,done:e.done}}E.type==="throw"&&(y=yn,e.method="throw",e.arg=E.arg)}}}function Ln(i,p){var e=p.method,y=i.iterator[e];if(y===t)return p.delegate=null,e==="throw"&&i.iterator.return&&(p.method="return",p.arg=t,Ln(i,p),p.method==="throw")||e!=="return"&&(p.method="throw",p.arg=new TypeError("The iterator does not provide a '"+e+"' method")),nn;var r=G(y,i.iterator,p.arg);if(r.type==="throw")return p.method="throw",p.arg=r.arg,p.delegate=null,nn;var c=r.arg;return c?c.done?(p[i.resultName]=c.value,p.next=i.nextLoc,p.method!=="return"&&(p.method="next",p.arg=t),p.delegate=null,nn):c:(p.method="throw",p.arg=new TypeError("iterator result is not an object"),p.delegate=null,nn)}function $n(i){var p={tryLoc:i[0]};1 in i&&(p.catchLoc=i[1]),2 in i&&(p.finallyLoc=i[2],p.afterLoc=i[3]),this.tryEntries.push(p)}function jn(i){var p=i.completion||{};p.type="normal",delete p.arg,i.completion=p}function Tn(i){this.tryEntries=[{tryLoc:"root"}],i.forEach($n,this),this.reset(!0)}function Fn(i){if(i||i===""){var p=i[m];if(p)return p.call(i);if(typeof i.next=="function")return i;if(!isNaN(i.length)){var e=-1,y=function r(){for(;++e<i.length;)if(u.call(i,e))return r.value=i[e],r.done=!1,r;return r.value=t,r.done=!0,r};return y.next=y}}throw new TypeError(R(i)+" is not iterable")}return hn.prototype=_,o(W,"constructor",{value:_,configurable:!0}),o(_,"constructor",{value:hn,configurable:!0}),hn.displayName=x(_,S,"GeneratorFunction"),s.isGeneratorFunction=function(i){var p=typeof i=="function"&&i.constructor;return!!p&&(p===hn||(p.displayName||p.name)==="GeneratorFunction")},s.mark=function(i){return Object.setPrototypeOf?Object.setPrototypeOf(i,_):(i.__proto__=_,x(i,S,"GeneratorFunction")),i.prototype=Object.create(W),i},s.awrap=function(i){return{__await:i}},Pn(gn.prototype),x(gn.prototype,b,function(){return this}),s.AsyncIterator=gn,s.async=function(i,p,e,y,r){r===void 0&&(r=Promise);var c=new gn(j(i,p,e,y),r);return s.isGeneratorFunction(p)?c:c.next().then(function(h){return h.done?h.value:c.next()})},Pn(W),x(W,S,"Generator"),x(W,m,function(){return this}),x(W,"toString",function(){return"[object Generator]"}),s.keys=function(i){var p=Object(i),e=[];for(var y in p)e.push(y);return e.reverse(),function r(){for(;e.length;){var c=e.pop();if(c in p)return r.value=c,r.done=!1,r}return r.done=!0,r}},s.values=Fn,Tn.prototype={constructor:Tn,reset:function(p){if(this.prev=0,this.next=0,this.sent=this._sent=t,this.done=!1,this.delegate=null,this.method="next",this.arg=t,this.tryEntries.forEach(jn),!p)for(var e in this)e.charAt(0)==="t"&&u.call(this,e)&&!isNaN(+e.slice(1))&&(this[e]=t)},stop:function(){this.done=!0;var p=this.tryEntries[0].completion;if(p.type==="throw")throw p.arg;return this.rval},dispatchException:function(p){if(this.done)throw p;var e=this;function y(z,Q){return h.type="throw",h.arg=p,e.next=z,Q&&(e.method="next",e.arg=t),!!Q}for(var r=this.tryEntries.length-1;r>=0;--r){var c=this.tryEntries[r],h=c.completion;if(c.tryLoc==="root")return y("end");if(c.tryLoc<=this.prev){var P=u.call(c,"catchLoc"),E=u.call(c,"finallyLoc");if(P&&E){if(this.prev<c.catchLoc)return y(c.catchLoc,!0);if(this.prev<c.finallyLoc)return y(c.finallyLoc)}else if(P){if(this.prev<c.catchLoc)return y(c.catchLoc,!0)}else{if(!E)throw new Error("try statement without catch or finally");if(this.prev<c.finallyLoc)return y(c.finallyLoc)}}}},abrupt:function(p,e){for(var y=this.tryEntries.length-1;y>=0;--y){var r=this.tryEntries[y];if(r.tryLoc<=this.prev&&u.call(r,"finallyLoc")&&this.prev<r.finallyLoc){var c=r;break}}c&&(p==="break"||p==="continue")&&c.tryLoc<=e&&e<=c.finallyLoc&&(c=null);var h=c?c.completion:{};return h.type=p,h.arg=e,c?(this.method="next",this.next=c.finallyLoc,nn):this.complete(h)},complete:function(p,e){if(p.type==="throw")throw p.arg;return p.type==="break"||p.type==="continue"?this.next=p.arg:p.type==="return"?(this.rval=this.arg=p.arg,this.method="return",this.next="end"):p.type==="normal"&&e&&(this.next=e),nn},finish:function(p){for(var e=this.tryEntries.length-1;e>=0;--e){var y=this.tryEntries[e];if(y.finallyLoc===p)return this.complete(y.completion,y.afterLoc),jn(y),nn}},catch:function(p){for(var e=this.tryEntries.length-1;e>=0;--e){var y=this.tryEntries[e];if(y.tryLoc===p){var r=y.completion;if(r.type==="throw"){var c=r.arg;jn(y)}return c}}throw new Error("illegal catch attempt")},delegateYield:function(p,e,y){return this.delegate={iterator:Fn(p),resultName:e,nextLoc:y},this.method==="next"&&(this.arg=t),nn}},s}function O(t,s,a,u,o,d,m){try{var b=t[d](m),S=b.value}catch(x){a(x);return}b.done?s(S):Promise.resolve(S).then(u,o)}function B(t){return function(){var s=this,a=arguments;return new Promise(function(u,o){var d=t.apply(s,a);function m(S){O(d,u,o,m,b,"next",S)}function b(S){O(d,u,o,m,b,"throw",S)}m(void 0)})}}function X(t,s){return cn(t)||rn(t,s)||un(t,s)||M()}function M(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function un(t,s){if(t){if(typeof t=="string")return sn(t,s);var a=Object.prototype.toString.call(t).slice(8,-1);if(a==="Object"&&t.constructor&&(a=t.constructor.name),a==="Map"||a==="Set")return Array.from(t);if(a==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a))return sn(t,s)}}function sn(t,s){(s==null||s>t.length)&&(s=t.length);for(var a=0,u=new Array(s);a<s;a++)u[a]=t[a];return u}function rn(t,s){var a=t==null?null:typeof Symbol!="undefined"&&t[Symbol.iterator]||t["@@iterator"];if(a!=null){var u,o,d,m,b=[],S=!0,x=!1;try{if(d=(a=a.call(t)).next,s===0){if(Object(a)!==a)return;S=!1}else for(;!(S=(u=d.call(a)).done)&&(b.push(u.value),b.length!==s);S=!0);}catch(j){x=!0,o=j}finally{try{if(!S&&a.return!=null&&(m=a.return(),Object(m)!==m))return}finally{if(x)throw o}}return b}}function cn(t){if(Array.isArray(t))return t}var kn=function(s){return new Promise(function(a,u){var o=new FileReader;o.readAsDataURL(s),o.onload=function(){return a(o.result)},o.onerror=function(d){return u(d)}})},F=function(){var s=(0,U.useState)(!1),a=X(s,2),u=a[0],o=a[1],d=(0,U.useState)(""),m=X(d,2),b=m[0],S=m[1],x=(0,U.useState)([{uid:"-2",name:"pdf.pdf",status:"done",url:"http://cdn07.foxitsoftware.cn/pub/foxit/cpdf/FoxitCompanyProfile.pdf"},{uid:"-3",name:"doc.doc",status:"done",url:"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.doc"},{uid:"-4",name:"image.png",status:"error"},{uid:"-5",name:"pdf.pdf",status:"error"},{uid:"-6",name:"doc.doc",status:"error"}]),j=X(x,2),G=j[0],K=j[1],ln=function(){return o(!1)},fn=function(){var hn=B(Z().mark(function _(H){return Z().wrap(function(pn){for(;;)switch(pn.prev=pn.next){case 0:if(!(!H.url&&!H.preview)){pn.next=4;break}return pn.next=3,kn(H.originFileObj);case 3:H.preview=pn.sent;case 4:o(!0),S(H.url||H.preview);case 6:case"end":return pn.stop()}},_)}));return function(H){return hn.apply(this,arguments)}}(),yn=function(_){var H=_.fileList;return K(H)},nn=function(_,H){var tn=[{type:U.default.createElement(A.FilePdfTwoTone,null),suf:[".pdf"]},{type:U.default.createElement(A.FileExcelTwoTone,null),suf:[".xlsx",".xls",".csv"]},{type:U.default.createElement(A.FileWordTwoTone,null),suf:[".doc",".docx"]},{type:U.default.createElement(A.PictureTwoTone,null),suf:[".webp",".svg",".png",".gif",".jpg",".jpeg",".jfif",".bmp",".dpg"]}],pn=_.status==="uploading"?U.default.createElement(A.LoadingOutlined,null):U.default.createElement(A.PaperClipOutlined,null);return(H==="picture"||H==="picture-card")&&(H==="picture-card"&&_.status==="uploading"?pn=U.default.createElement(A.LoadingOutlined,null):tn.forEach(function(W){W.suf.includes(_.name.slice(_.name.lastIndexOf(".")))&&(pn=W.type)})),pn},Un=U.default.createElement("div",null,U.default.createElement(A.PlusOutlined,null),U.default.createElement("div",{style:{marginTop:8}},"Upload"));return U.default.createElement(U.default.Fragment,null,U.default.createElement(C.Upload,{action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",listType:"picture-card",fileList:G,onPreview:fn,onChange:yn,iconRender:nn},G.length>=8?null:Un),U.default.createElement(C.Modal,{open:u,footer:null,onCancel:ln},U.default.createElement("img",{alt:"example",style:{width:"100%"},src:b})))},q;return D.createElement(F)}}},4801:function(Y,J,g){Y.exports={content:{"zh-CN":[["p","\u4F7F\u7528 ",["code","fileList"]," \u5BF9\u5217\u8868\u8FDB\u884C\u5B8C\u5168\u63A7\u5236\uFF0C\u53EF\u4EE5\u5B9E\u73B0\u5404\u79CD\u81EA\u5B9A\u4E49\u529F\u80FD\uFF0C\u4EE5\u4E0B\u6F14\u793A\u4E8C\u79CD\u60C5\u51B5\uFF1A"],["ol",["li",["p","\u4E0A\u4F20\u5217\u8868\u6570\u91CF\u7684\u9650\u5236\u3002"]],["li",["p","\u8BFB\u53D6\u8FDC\u7A0B\u8DEF\u5F84\u5E76\u663E\u793A\u94FE\u63A5\u3002"]]]],"en-US":[["p","You can gain full control over filelist by configuring ",["code","fileList"],". You can accomplish all kinds of customed functions. The following shows two circumstances:"],["ol",["li",["p","limit the number of uploaded files."]],["li",["p","read from response and show file link."]]]]},meta:{order:4,title:{"zh-CN":"\u5B8C\u5168\u63A7\u5236\u7684\u4E0A\u4F20\u5217\u8868","en-US":"Complete control over file list"},filename:"components/upload/demo/fileList.md",id:"components-upload-demo-fileList"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:`import { UploadOutlined } from <span class="token string">'@ant-design/icons'</span><span class="token comment" spellcheck="true">;</span>
import type { UploadProps } from <span class="token string">'antd'</span><span class="token comment" spellcheck="true">;</span>
import { Button<span class="token punctuation">,</span> Upload } from <span class="token string">'antd'</span><span class="token comment" spellcheck="true">;</span>
import type { UploadFile } from <span class="token string">'antd/es/upload/interface'</span><span class="token comment" spellcheck="true">;</span>
import React<span class="token punctuation">,</span> { useState } from <span class="token string">'react'</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
  <span class="token keyword">const</span> <span class="token punctuation">[</span>fileList<span class="token punctuation">,</span> setFileList<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>UploadFile<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    {
      uid<span class="token punctuation">:</span> <span class="token string">'-1'</span><span class="token punctuation">,</span>
      name<span class="token punctuation">:</span> <span class="token string">'xxx.png'</span><span class="token punctuation">,</span>
      status<span class="token punctuation">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      url<span class="token punctuation">:</span> <span class="token string">'http://www.baidu.com/xxx.png'</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> handleChange<span class="token punctuation">:</span> UploadProps<span class="token punctuation">[</span><span class="token string">'onChange'</span><span class="token punctuation">]</span> <span class="token operator">=</span> info <span class="token operator">=</span><span class="token operator">></span> {
    let newFileList <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>info<span class="token punctuation">.</span>fileList<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>

    <span class="token operator">/</span><span class="token operator">/</span> <span class="token number">1</span><span class="token punctuation">.</span> Limit the number of uploaded files
    <span class="token operator">/</span><span class="token operator">/</span> Only <span class="token keyword">to</span> show two recent uploaded files<span class="token punctuation">,</span> <span class="token operator">and</span> old ones will be replaced by the new
    newFileList <span class="token operator">=</span> newFileList<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

    <span class="token operator">/</span><span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">.</span> Read from response <span class="token operator">and</span> show file link
    newFileList <span class="token operator">=</span> newFileList<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>file <span class="token operator">=</span><span class="token operator">></span> {
      <span class="token keyword">if</span> <span class="token punctuation">(</span>file<span class="token punctuation">.</span>response<span class="token punctuation">)</span> {
        <span class="token operator">/</span><span class="token operator">/</span> Component will show file<span class="token punctuation">.</span>url as link
        file<span class="token punctuation">.</span>url <span class="token operator">=</span> file<span class="token punctuation">.</span>response<span class="token punctuation">.</span>url<span class="token comment" spellcheck="true">;</span>
      }
      return file<span class="token comment" spellcheck="true">;</span>
    }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

    <span class="token function">setFileList</span><span class="token punctuation">(</span>newFileList<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  }<span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> props <span class="token operator">=</span> {
    action<span class="token punctuation">:</span> <span class="token string">'https://www.mocky.io/v2/5cc8019d300000980a055e76'</span><span class="token punctuation">,</span>
    onChange<span class="token punctuation">:</span> handleChange<span class="token punctuation">,</span>
    multiple<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  }<span class="token comment" spellcheck="true">;</span>
  return <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>Upload {<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>props} fileList<span class="token operator">=</span>{fileList}<span class="token operator">></span>
      <span class="token operator">&lt;</span>Button icon<span class="token operator">=</span>{<span class="token operator">&lt;</span>UploadOutlined <span class="token operator">/</span><span class="token operator">></span>}<span class="token operator">></span>Upload<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>Upload<span class="token operator">></span>
  <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
}<span class="token comment" spellcheck="true">;</span>

export <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>`}],highlightedCodes:{tsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> UploadProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> UploadFile <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd/es/upload/interface'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>fileList<span class="token punctuation">,</span> setFileList<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>UploadFile<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      uid<span class="token operator">:</span> <span class="token string">'-1'</span><span class="token punctuation">,</span>
      name<span class="token operator">:</span> <span class="token string">'xxx.png'</span><span class="token punctuation">,</span>
      status<span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      url<span class="token operator">:</span> <span class="token string">'http://www.baidu.com/xxx.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> handleChange<span class="token operator">:</span> UploadProps<span class="token punctuation">[</span><span class="token string">'onChange'</span><span class="token punctuation">]</span> <span class="token operator">=</span> info <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> newFileList <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>info<span class="token punctuation">.</span>fileList<span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token comment">// 1. Limit the number of uploaded files</span>
    <span class="token comment">// Only to show two recent uploaded files, and old ones will be replaced by the new</span>
    newFileList <span class="token operator">=</span> newFileList<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 2. Read from response and show file link</span>
    newFileList <span class="token operator">=</span> newFileList<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>file <span class="token operator">=></span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>file<span class="token punctuation">.</span>response<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Component will show file.url as link</span>
        file<span class="token punctuation">.</span>url <span class="token operator">=</span> file<span class="token punctuation">.</span>response<span class="token punctuation">.</span>url<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> file<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">setFileList</span><span class="token punctuation">(</span>newFileList<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>
    action<span class="token operator">:</span> <span class="token string">'https://www.mocky.io/v2/5cc8019d300000980a055e76'</span><span class="token punctuation">,</span>
    onChange<span class="token operator">:</span> handleChange<span class="token punctuation">,</span>
    multiple<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span> <span class="token attr-name">fileList</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>fileList<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>`,jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>fileList<span class="token punctuation">,</span> setFileList<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token string">'-1'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'xxx.png'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">'http://www.baidu.com/xxx.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token function-variable function">handleChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">info</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> newFileList <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>info<span class="token punctuation">.</span>fileList<span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token comment">// 1. Limit the number of uploaded files</span>
    <span class="token comment">// Only to show two recent uploaded files, and old ones will be replaced by the new</span>
    newFileList <span class="token operator">=</span> newFileList<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 2. Read from response and show file link</span>
    newFileList <span class="token operator">=</span> newFileList<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>file<span class="token punctuation">.</span>response<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// Component will show file.url as link</span>
        file<span class="token punctuation">.</span>url <span class="token operator">=</span> file<span class="token punctuation">.</span>response<span class="token punctuation">.</span>url<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> file<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">setFileList</span><span class="token punctuation">(</span>newFileList<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">action</span><span class="token operator">:</span> <span class="token string">'https://www.mocky.io/v2/5cc8019d300000980a055e76'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">onChange</span><span class="token operator">:</span> handleChange<span class="token punctuation">,</span>
    <span class="token literal-property property">multiple</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span> <span class="token attr-name">fileList</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>fileList<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
`},preview:function(){var D=g(0),mn=g(41);function R(s){return R=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(a){return typeof a}:function(a){return a&&typeof Symbol=="function"&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":typeof a},R(s)}J.default=void 0;var A=g(60),C=g(13),U=V(g(0));function N(s){if(typeof WeakMap!="function")return null;var a=new WeakMap,u=new WeakMap;return(N=function(d){return d?u:a})(s)}function V(s,a){if(!a&&s&&s.__esModule)return s;if(s===null||R(s)!="object"&&typeof s!="function")return{default:s};var u=N(a);if(u&&u.has(s))return u.get(s);var o={__proto__:null},d=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var m in s)if(m!=="default"&&Object.prototype.hasOwnProperty.call(s,m)){var b=d?Object.getOwnPropertyDescriptor(s,m):null;b&&(b.get||b.set)?Object.defineProperty(o,m,b):o[m]=s[m]}return o.default=s,u&&u.set(s,o),o}function Z(){return Z=Object.assign?Object.assign.bind():function(s){for(var a=1;a<arguments.length;a++){var u=arguments[a];for(var o in u)Object.prototype.hasOwnProperty.call(u,o)&&(s[o]=u[o])}return s},Z.apply(this,arguments)}function O(s){return M(s)||X(s)||rn(s)||B()}function B(){throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function X(s){if(typeof Symbol!="undefined"&&s[Symbol.iterator]!=null||s["@@iterator"]!=null)return Array.from(s)}function M(s){if(Array.isArray(s))return cn(s)}function un(s,a){return F(s)||kn(s,a)||rn(s,a)||sn()}function sn(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function rn(s,a){if(s){if(typeof s=="string")return cn(s,a);var u=Object.prototype.toString.call(s).slice(8,-1);if(u==="Object"&&s.constructor&&(u=s.constructor.name),u==="Map"||u==="Set")return Array.from(s);if(u==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(u))return cn(s,a)}}function cn(s,a){(a==null||a>s.length)&&(a=s.length);for(var u=0,o=new Array(a);u<a;u++)o[u]=s[u];return o}function kn(s,a){var u=s==null?null:typeof Symbol!="undefined"&&s[Symbol.iterator]||s["@@iterator"];if(u!=null){var o,d,m,b,S=[],x=!0,j=!1;try{if(m=(u=u.call(s)).next,a===0){if(Object(u)!==u)return;x=!1}else for(;!(x=(o=m.call(u)).done)&&(S.push(o.value),S.length!==a);x=!0);}catch(G){j=!0,d=G}finally{try{if(!x&&u.return!=null&&(b=u.return(),Object(b)!==b))return}finally{if(j)throw d}}return S}}function F(s){if(Array.isArray(s))return s}var q=function(){var a=(0,U.useState)([{uid:"-1",name:"xxx.png",status:"done",url:"http://www.baidu.com/xxx.png"}]),u=un(a,2),o=u[0],d=u[1],m=function(x){var j=O(x.fileList);j=j.slice(-2),j=j.map(function(G){return G.response&&(G.url=G.response.url),G}),d(j)},b={action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",onChange:m,multiple:!0};return U.default.createElement(C.Upload,Z({},b,{fileList:o}),U.default.createElement(C.Button,{icon:U.default.createElement(A.UploadOutlined,null)},"Upload"))},t;return D.createElement(q)}}},4802:function(Y,J,g){Y.exports={content:{"zh-CN":[["p","\u901A\u8FC7 ",["code","maxCount"]," \u9650\u5236\u4E0A\u4F20\u6570\u91CF\u3002\u5F53\u4E3A ",["code","1"]," \u65F6\uFF0C\u59CB\u7EC8\u7528\u6700\u65B0\u4E0A\u4F20\u7684\u4EE3\u66FF\u5F53\u524D\u3002"]],"en-US":[["p","Limit files with ",["code","maxCount"],". Will replace current one when ",["code","maxCount"]," is ",["code","1"],"."]]},meta:{order:10,title:{"zh-CN":"\u9650\u5236\u6570\u91CF","en-US":"Max Count"},filename:"components/upload/demo/max-count.md",id:"components-upload-demo-max-count"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:`import { UploadOutlined } from <span class="token string">'@ant-design/icons'</span><span class="token comment" spellcheck="true">;</span>
import { Button<span class="token punctuation">,</span> Space<span class="token punctuation">,</span> Upload } from <span class="token string">'antd'</span><span class="token comment" spellcheck="true">;</span>
import React from <span class="token string">'react'</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>
  <span class="token operator">&lt;</span>Space direction<span class="token operator">=</span><span class="token string">"vertical"</span> style<span class="token operator">=</span>{{ width<span class="token punctuation">:</span> <span class="token string">'100%'</span> }} size<span class="token operator">=</span><span class="token string">"large"</span><span class="token operator">></span>
    <span class="token operator">&lt;</span>Upload
      action<span class="token operator">=</span><span class="token string">"https://www.mocky.io/v2/5cc8019d300000980a055e76"</span>
      listType<span class="token operator">=</span><span class="token string">"picture"</span>
      maxCount<span class="token operator">=</span>{<span class="token number">1</span>}
    <span class="token operator">></span>
      <span class="token operator">&lt;</span>Button icon<span class="token operator">=</span>{<span class="token operator">&lt;</span>UploadOutlined <span class="token operator">/</span><span class="token operator">></span>}<span class="token operator">></span>Upload <span class="token punctuation">(</span>Max<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>Upload<span class="token operator">></span>
    <span class="token operator">&lt;</span>Upload
      action<span class="token operator">=</span><span class="token string">"https://www.mocky.io/v2/5cc8019d300000980a055e76"</span>
      listType<span class="token operator">=</span><span class="token string">"picture"</span>
      maxCount<span class="token operator">=</span>{<span class="token number">3</span>}
      multiple
    <span class="token operator">></span>
      <span class="token operator">&lt;</span>Button icon<span class="token operator">=</span>{<span class="token operator">&lt;</span>UploadOutlined <span class="token operator">/</span><span class="token operator">></span>}<span class="token operator">></span>Upload <span class="token punctuation">(</span>Max<span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>Upload<span class="token operator">></span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>Space<span class="token operator">></span>
<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

export <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>`}],highlightedCodes:{tsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Space<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Space</span></span> <span class="token attr-name">direction</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> width<span class="token operator">:</span> <span class="token string">'100%'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>large<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span>
      <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.mocky.io/v2/5cc8019d300000980a055e76<span class="token punctuation">"</span></span>
      <span class="token attr-name">listType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>picture<span class="token punctuation">"</span></span>
      <span class="token attr-name">maxCount</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">}</span></span>
    <span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token function">Upload</span> <span class="token punctuation">(</span>Max<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span>
      <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.mocky.io/v2/5cc8019d300000980a055e76<span class="token punctuation">"</span></span>
      <span class="token attr-name">listType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>picture<span class="token punctuation">"</span></span>
      <span class="token attr-name">maxCount</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">3</span><span class="token punctuation">}</span></span>
      <span class="token attr-name">multiple</span>
    <span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token function">Upload</span> <span class="token punctuation">(</span>Max<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Space</span></span><span class="token punctuation">></span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>`,jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Space<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Space</span></span>
    <span class="token attr-name">direction</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>vertical<span class="token punctuation">"</span></span>
    <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
      <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token string">'100%'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
    <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>large<span class="token punctuation">"</span></span>
  <span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span>
      <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.mocky.io/v2/5cc8019d300000980a055e76<span class="token punctuation">"</span></span>
      <span class="token attr-name">listType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>picture<span class="token punctuation">"</span></span>
      <span class="token attr-name">maxCount</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">}</span></span>
    <span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token function">Upload</span> <span class="token punctuation">(</span>Max<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span>
      <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.mocky.io/v2/5cc8019d300000980a055e76<span class="token punctuation">"</span></span>
      <span class="token attr-name">listType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>picture<span class="token punctuation">"</span></span>
      <span class="token attr-name">maxCount</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">3</span><span class="token punctuation">}</span></span>
      <span class="token attr-name">multiple</span>
    <span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token function">Upload</span> <span class="token punctuation">(</span>Max<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Space</span></span><span class="token punctuation">></span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
`},preview:function(){var D=g(0),mn=g(41);J.default=void 0;var R=g(60),A=g(13),C=U(g(0));function U(Z){return Z&&Z.__esModule?Z:{default:Z}}var N=function(){return C.default.createElement(A.Space,{direction:"vertical",style:{width:"100%"},size:"large"},C.default.createElement(A.Upload,{action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",listType:"picture",maxCount:1},C.default.createElement(A.Button,{icon:C.default.createElement(R.UploadOutlined,null)},"Upload (Max: 1)")),C.default.createElement(A.Upload,{action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",listType:"picture",maxCount:3,multiple:!0},C.default.createElement(A.Button,{icon:C.default.createElement(R.UploadOutlined,null)},"Upload (Max: 3)")))},V;return D.createElement(N)}}},4803:function(Y,J,g){Y.exports={content:{"zh-CN":[["p","\u7528\u6237\u53EF\u4EE5\u4E0A\u4F20\u56FE\u7247\u5E76\u5728\u5217\u8868\u4E2D\u663E\u793A\u7F29\u7565\u56FE\u3002\u5F53\u4E0A\u4F20\u7167\u7247\u6570\u5230\u8FBE\u9650\u5236\u540E\uFF0C\u4E0A\u4F20\u6309\u94AE\u6D88\u5931\u3002"]],"en-US":[["p","After users upload picture, the thumbnail will be shown in list. The upload button will disappear when count meets limitation."]]},meta:{order:3,title:{"zh-CN":"\u7167\u7247\u5899","en-US":"Pictures Wall"},filename:"components/upload/demo/picture-card.md",id:"components-upload-demo-picture-card"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:`import { PlusOutlined } from <span class="token string">'@ant-design/icons'</span><span class="token comment" spellcheck="true">;</span>
import { Modal<span class="token punctuation">,</span> Upload } from <span class="token string">'antd'</span><span class="token comment" spellcheck="true">;</span>
import type { RcFile<span class="token punctuation">,</span> UploadProps } from <span class="token string">'antd/es/upload'</span><span class="token comment" spellcheck="true">;</span>
import type { UploadFile } from <span class="token string">'antd/es/upload/interface'</span><span class="token comment" spellcheck="true">;</span>
import React<span class="token punctuation">,</span> { useState } from <span class="token string">'react'</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> getBase64 <span class="token operator">=</span> <span class="token punctuation">(</span>file<span class="token punctuation">:</span> RcFile<span class="token punctuation">)</span><span class="token punctuation">:</span> Promise<span class="token operator">&lt;</span>string<span class="token operator">></span> <span class="token operator">=</span><span class="token operator">></span>
  new <span class="token function">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
    <span class="token keyword">const</span> reader <span class="token operator">=</span> new <span class="token function">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    reader<span class="token punctuation">.</span><span class="token function">readAsDataURL</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    reader<span class="token punctuation">.</span>onload <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">resolve</span><span class="token punctuation">(</span>reader<span class="token punctuation">.</span>result as string<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    reader<span class="token punctuation">.</span>onerror <span class="token operator">=</span> error <span class="token operator">=</span><span class="token operator">></span> <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
  <span class="token keyword">const</span> <span class="token punctuation">[</span>previewOpen<span class="token punctuation">,</span> setPreviewOpen<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>previewImage<span class="token punctuation">,</span> setPreviewImage<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>previewTitle<span class="token punctuation">,</span> setPreviewTitle<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>fileList<span class="token punctuation">,</span> setFileList<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>UploadFile<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    {
      uid<span class="token punctuation">:</span> <span class="token string">'-1'</span><span class="token punctuation">,</span>
      name<span class="token punctuation">:</span> <span class="token string">'image.png'</span><span class="token punctuation">,</span>
      status<span class="token punctuation">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      url<span class="token punctuation">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
    {
      uid<span class="token punctuation">:</span> <span class="token string">'-2'</span><span class="token punctuation">,</span>
      name<span class="token punctuation">:</span> <span class="token string">'image.png'</span><span class="token punctuation">,</span>
      status<span class="token punctuation">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      url<span class="token punctuation">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
    {
      uid<span class="token punctuation">:</span> <span class="token string">'-3'</span><span class="token punctuation">,</span>
      name<span class="token punctuation">:</span> <span class="token string">'image.png'</span><span class="token punctuation">,</span>
      status<span class="token punctuation">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      url<span class="token punctuation">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
    {
      uid<span class="token punctuation">:</span> <span class="token string">'-4'</span><span class="token punctuation">,</span>
      name<span class="token punctuation">:</span> <span class="token string">'image.png'</span><span class="token punctuation">,</span>
      status<span class="token punctuation">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      url<span class="token punctuation">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
    {
      uid<span class="token punctuation">:</span> <span class="token string">'-xxx'</span><span class="token punctuation">,</span>
      percent<span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">,</span>
      name<span class="token punctuation">:</span> <span class="token string">'image.png'</span><span class="token punctuation">,</span>
      status<span class="token punctuation">:</span> <span class="token string">'uploading'</span><span class="token punctuation">,</span>
      url<span class="token punctuation">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
    {
      uid<span class="token punctuation">:</span> <span class="token string">'-5'</span><span class="token punctuation">,</span>
      name<span class="token punctuation">:</span> <span class="token string">'image.png'</span><span class="token punctuation">,</span>
      status<span class="token punctuation">:</span> <span class="token string">'error'</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> handleCancel <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">setPreviewOpen</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> handlePreview <span class="token operator">=</span> async <span class="token punctuation">(</span>file<span class="token punctuation">:</span> UploadFile<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
    <span class="token keyword">if</span> <span class="token punctuation">(</span>!file<span class="token punctuation">.</span>url <span class="token operator">&amp;</span><span class="token operator">&amp;</span> !file<span class="token punctuation">.</span>preview<span class="token punctuation">)</span> {
      file<span class="token punctuation">.</span>preview <span class="token operator">=</span> await <span class="token function">getBase64</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>originFileObj as RcFile<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    }

    <span class="token function">setPreviewImage</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>url || <span class="token punctuation">(</span>file<span class="token punctuation">.</span>preview as string<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    <span class="token function">setPreviewOpen</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    <span class="token function">setPreviewTitle</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>name || file<span class="token punctuation">.</span>url!<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>url!<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  }<span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> handleChange<span class="token punctuation">:</span> UploadProps<span class="token punctuation">[</span><span class="token string">'onChange'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>{ fileList<span class="token punctuation">:</span> newFileList }<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span>
    <span class="token function">setFileList</span><span class="token punctuation">(</span>newFileList<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> uploadButton <span class="token operator">=</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>div<span class="token operator">></span>
      <span class="token operator">&lt;</span>PlusOutlined <span class="token operator">/</span><span class="token operator">></span>
      <span class="token operator">&lt;</span>div style<span class="token operator">=</span>{{ marginTop<span class="token punctuation">:</span> <span class="token number">8</span> }}<span class="token operator">></span>Upload<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>
  <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  return <span class="token punctuation">(</span>
    <span class="token operator">&lt;></span>
      <span class="token operator">&lt;</span>Upload
        action<span class="token operator">=</span><span class="token string">"https://www.mocky.io/v2/5cc8019d300000980a055e76"</span>
        listType<span class="token operator">=</span><span class="token string">"picture-card"</span>
        fileList<span class="token operator">=</span>{fileList}
        onPreview<span class="token operator">=</span>{handlePreview}
        onChange<span class="token operator">=</span>{handleChange}
      <span class="token operator">></span>
        {fileList<span class="token punctuation">.</span>length <span class="token operator">>=</span> <span class="token number">8</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token punctuation">:</span> uploadButton}
      <span class="token operator">&lt;</span><span class="token operator">/</span>Upload<span class="token operator">></span>
      <span class="token operator">&lt;</span>Modal open<span class="token operator">=</span>{previewOpen} title<span class="token operator">=</span>{previewTitle} footer<span class="token operator">=</span>{<span class="token keyword">null</span>} onCancel<span class="token operator">=</span>{handleCancel}<span class="token operator">></span>
        <span class="token operator">&lt;</span>img alt<span class="token operator">=</span><span class="token string">"example"</span> style<span class="token operator">=</span>{{ width<span class="token punctuation">:</span> <span class="token string">'100%'</span> }} src<span class="token operator">=</span>{previewImage} <span class="token operator">/</span><span class="token operator">></span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>Modal<span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">></span>
  <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
}<span class="token comment" spellcheck="true">;</span>

export <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>`}],highlightedCodes:{tsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> PlusOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Modal<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> RcFile<span class="token punctuation">,</span> UploadProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd/es/upload'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> UploadFile <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd/es/upload/interface'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> getBase64 <span class="token operator">=</span> <span class="token punctuation">(</span>file<span class="token operator">:</span> RcFile<span class="token punctuation">)</span><span class="token operator">:</span> Promise<span class="token operator">&lt;</span>string<span class="token operator">></span> <span class="token operator">=></span>
  <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    reader<span class="token punctuation">.</span><span class="token function">readAsDataURL</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
    reader<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">resolve</span><span class="token punctuation">(</span>reader<span class="token punctuation">.</span>result <span class="token keyword">as</span> string<span class="token punctuation">)</span><span class="token punctuation">;</span>
    reader<span class="token punctuation">.</span><span class="token function-variable function">onerror</span> <span class="token operator">=</span> error <span class="token operator">=></span> <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>previewOpen<span class="token punctuation">,</span> setPreviewOpen<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>previewImage<span class="token punctuation">,</span> setPreviewImage<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>previewTitle<span class="token punctuation">,</span> setPreviewTitle<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>fileList<span class="token punctuation">,</span> setFileList<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>UploadFile<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      uid<span class="token operator">:</span> <span class="token string">'-1'</span><span class="token punctuation">,</span>
      name<span class="token operator">:</span> <span class="token string">'image.png'</span><span class="token punctuation">,</span>
      status<span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      url<span class="token operator">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      uid<span class="token operator">:</span> <span class="token string">'-2'</span><span class="token punctuation">,</span>
      name<span class="token operator">:</span> <span class="token string">'image.png'</span><span class="token punctuation">,</span>
      status<span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      url<span class="token operator">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      uid<span class="token operator">:</span> <span class="token string">'-3'</span><span class="token punctuation">,</span>
      name<span class="token operator">:</span> <span class="token string">'image.png'</span><span class="token punctuation">,</span>
      status<span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      url<span class="token operator">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      uid<span class="token operator">:</span> <span class="token string">'-4'</span><span class="token punctuation">,</span>
      name<span class="token operator">:</span> <span class="token string">'image.png'</span><span class="token punctuation">,</span>
      status<span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      url<span class="token operator">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      uid<span class="token operator">:</span> <span class="token string">'-xxx'</span><span class="token punctuation">,</span>
      percent<span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span>
      name<span class="token operator">:</span> <span class="token string">'image.png'</span><span class="token punctuation">,</span>
      status<span class="token operator">:</span> <span class="token string">'uploading'</span><span class="token punctuation">,</span>
      url<span class="token operator">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      uid<span class="token operator">:</span> <span class="token string">'-5'</span><span class="token punctuation">,</span>
      name<span class="token operator">:</span> <span class="token string">'image.png'</span><span class="token punctuation">,</span>
      status<span class="token operator">:</span> <span class="token string">'error'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">handleCancel</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">setPreviewOpen</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">handlePreview</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>file<span class="token operator">:</span> UploadFile<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>file<span class="token punctuation">.</span>url <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>file<span class="token punctuation">.</span>preview<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      file<span class="token punctuation">.</span>preview <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getBase64</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>originFileObj <span class="token keyword">as</span> RcFile<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token function">setPreviewImage</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>url <span class="token operator">||</span> <span class="token punctuation">(</span>file<span class="token punctuation">.</span>preview <span class="token keyword">as</span> string<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">setPreviewOpen</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">setPreviewTitle</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>name <span class="token operator">||</span> file<span class="token punctuation">.</span>url<span class="token operator">!</span><span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>url<span class="token operator">!</span><span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> handleChange<span class="token operator">:</span> UploadProps<span class="token punctuation">[</span><span class="token string">'onChange'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> fileList<span class="token operator">:</span> newFileList <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=></span>
    <span class="token function">setFileList</span><span class="token punctuation">(</span>newFileList<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> uploadButton <span class="token operator">=</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">PlusOutlined</span></span> <span class="token punctuation">/></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> marginTop<span class="token operator">:</span> <span class="token number">8</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span>
        <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.mocky.io/v2/5cc8019d300000980a055e76<span class="token punctuation">"</span></span>
        <span class="token attr-name">listType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>picture-card<span class="token punctuation">"</span></span>
        <span class="token attr-name">fileList</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>fileList<span class="token punctuation">}</span></span>
        <span class="token attr-name">onPreview</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handlePreview<span class="token punctuation">}</span></span>
        <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleChange<span class="token punctuation">}</span></span>
      <span class="token punctuation">></span></span>
        <span class="token punctuation">{</span>fileList<span class="token punctuation">.</span>length <span class="token operator">>=</span> <span class="token number">8</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> uploadButton<span class="token punctuation">}</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Modal</span></span> <span class="token attr-name">open</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>previewOpen<span class="token punctuation">}</span></span> <span class="token attr-name">title</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>previewTitle<span class="token punctuation">}</span></span> <span class="token attr-name">footer</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">null</span><span class="token punctuation">}</span></span> <span class="token attr-name">onCancel</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleCancel<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>example<span class="token punctuation">"</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> width<span class="token operator">:</span> <span class="token string">'100%'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token attr-name">src</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>previewImage<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Modal</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>`,jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> PlusOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Modal<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">getBase64</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token operator">=></span>
  <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    reader<span class="token punctuation">.</span><span class="token function">readAsDataURL</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
    reader<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">resolve</span><span class="token punctuation">(</span>reader<span class="token punctuation">.</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
    reader<span class="token punctuation">.</span><span class="token function-variable function">onerror</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>previewOpen<span class="token punctuation">,</span> setPreviewOpen<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>previewImage<span class="token punctuation">,</span> setPreviewImage<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>previewTitle<span class="token punctuation">,</span> setPreviewTitle<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>fileList<span class="token punctuation">,</span> setFileList<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token string">'-1'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'image.png'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token string">'-2'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'image.png'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token string">'-3'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'image.png'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token string">'-4'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'image.png'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token string">'-xxx'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">percent</span><span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'image.png'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">'uploading'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token string">'-5'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'image.png'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">'error'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token function-variable function">handleCancel</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">setPreviewOpen</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token function-variable function">handlePreview</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>file<span class="token punctuation">.</span>url <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>file<span class="token punctuation">.</span>preview<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      file<span class="token punctuation">.</span>preview <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getBase64</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>originFileObj<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">setPreviewImage</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>url <span class="token operator">||</span> file<span class="token punctuation">.</span>preview<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">setPreviewOpen</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">setPreviewTitle</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>name <span class="token operator">||</span> file<span class="token punctuation">.</span>url<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>url<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token function-variable function">handleChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> <span class="token literal-property property">fileList</span><span class="token operator">:</span> newFileList <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">setFileList</span><span class="token punctuation">(</span>newFileList<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> uploadButton <span class="token operator">=</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">PlusOutlined</span></span> <span class="token punctuation">/></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>
        <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
          <span class="token literal-property property">marginTop</span><span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
      <span class="token punctuation">></span></span>
        Upload
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span>
        <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.mocky.io/v2/5cc8019d300000980a055e76<span class="token punctuation">"</span></span>
        <span class="token attr-name">listType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>picture-card<span class="token punctuation">"</span></span>
        <span class="token attr-name">fileList</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>fileList<span class="token punctuation">}</span></span>
        <span class="token attr-name">onPreview</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handlePreview<span class="token punctuation">}</span></span>
        <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleChange<span class="token punctuation">}</span></span>
      <span class="token punctuation">></span></span>
        <span class="token punctuation">{</span>fileList<span class="token punctuation">.</span>length <span class="token operator">>=</span> <span class="token number">8</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> uploadButton<span class="token punctuation">}</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Modal</span></span> <span class="token attr-name">open</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>previewOpen<span class="token punctuation">}</span></span> <span class="token attr-name">title</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>previewTitle<span class="token punctuation">}</span></span> <span class="token attr-name">footer</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">null</span><span class="token punctuation">}</span></span> <span class="token attr-name">onCancel</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleCancel<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span>
          <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>example<span class="token punctuation">"</span></span>
          <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
            <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token string">'100%'</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
          <span class="token attr-name">src</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>previewImage<span class="token punctuation">}</span></span>
        <span class="token punctuation">/></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Modal</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
`},preview:function(){var D=g(0),mn=g(41);function R(t){return R=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(s){return typeof s}:function(s){return s&&typeof Symbol=="function"&&s.constructor===Symbol&&s!==Symbol.prototype?"symbol":typeof s},R(t)}J.default=void 0;var A=g(60),C=g(13),U=V(g(0));function N(t){if(typeof WeakMap!="function")return null;var s=new WeakMap,a=new WeakMap;return(N=function(o){return o?a:s})(t)}function V(t,s){if(!s&&t&&t.__esModule)return t;if(t===null||R(t)!="object"&&typeof t!="function")return{default:t};var a=N(s);if(a&&a.has(t))return a.get(t);var u={__proto__:null},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var d in t)if(d!=="default"&&Object.prototype.hasOwnProperty.call(t,d)){var m=o?Object.getOwnPropertyDescriptor(t,d):null;m&&(m.get||m.set)?Object.defineProperty(u,d,m):u[d]=t[d]}return u.default=t,a&&a.set(t,u),u}function Z(){"use strict";/*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */Z=function(){return s};var t,s={},a=Object.prototype,u=a.hasOwnProperty,o=Object.defineProperty||function(i,p,e){i[p]=e.value},d=typeof Symbol=="function"?Symbol:{},m=d.iterator||"@@iterator",b=d.asyncIterator||"@@asyncIterator",S=d.toStringTag||"@@toStringTag";function x(i,p,e){return Object.defineProperty(i,p,{value:e,enumerable:!0,configurable:!0,writable:!0}),i[p]}try{x({},"")}catch(i){x=function(e,y,r){return e[y]=r}}function j(i,p,e,y){var r=p&&p.prototype instanceof Un?p:Un,c=Object.create(r.prototype),h=new Tn(y||[]);return o(c,"_invoke",{value:xn(i,e,h)}),c}function G(i,p,e){try{return{type:"normal",arg:i.call(p,e)}}catch(y){return{type:"throw",arg:y}}}s.wrap=j;var K="suspendedStart",ln="suspendedYield",fn="executing",yn="completed",nn={};function Un(){}function hn(){}function _(){}var H={};x(H,m,function(){return this});var tn=Object.getPrototypeOf,pn=tn&&tn(tn(Fn([])));pn&&pn!==a&&u.call(pn,m)&&(H=pn);var W=_.prototype=Un.prototype=Object.create(H);function Pn(i){["next","throw","return"].forEach(function(p){x(i,p,function(e){return this._invoke(p,e)})})}function gn(i,p){function e(r,c,h,P){var E=G(i[r],i,c);if(E.type!=="throw"){var z=E.arg,Q=z.value;return Q&&R(Q)=="object"&&u.call(Q,"__await")?p.resolve(Q.__await).then(function(en){e("next",en,h,P)},function(en){e("throw",en,h,P)}):p.resolve(Q).then(function(en){z.value=en,h(z)},function(en){return e("throw",en,h,P)})}P(E.arg)}var y;o(this,"_invoke",{value:function(c,h){function P(){return new p(function(E,z){e(c,h,E,z)})}return y=y?y.then(P,P):P()}})}function xn(i,p,e){var y=K;return function(r,c){if(y===fn)throw new Error("Generator is already running");if(y===yn){if(r==="throw")throw c;return{value:t,done:!0}}for(e.method=r,e.arg=c;;){var h=e.delegate;if(h){var P=Ln(h,e);if(P){if(P===nn)continue;return P}}if(e.method==="next")e.sent=e._sent=e.arg;else if(e.method==="throw"){if(y===K)throw y=yn,e.arg;e.dispatchException(e.arg)}else e.method==="return"&&e.abrupt("return",e.arg);y=fn;var E=G(i,p,e);if(E.type==="normal"){if(y=e.done?yn:ln,E.arg===nn)continue;return{value:E.arg,done:e.done}}E.type==="throw"&&(y=yn,e.method="throw",e.arg=E.arg)}}}function Ln(i,p){var e=p.method,y=i.iterator[e];if(y===t)return p.delegate=null,e==="throw"&&i.iterator.return&&(p.method="return",p.arg=t,Ln(i,p),p.method==="throw")||e!=="return"&&(p.method="throw",p.arg=new TypeError("The iterator does not provide a '"+e+"' method")),nn;var r=G(y,i.iterator,p.arg);if(r.type==="throw")return p.method="throw",p.arg=r.arg,p.delegate=null,nn;var c=r.arg;return c?c.done?(p[i.resultName]=c.value,p.next=i.nextLoc,p.method!=="return"&&(p.method="next",p.arg=t),p.delegate=null,nn):c:(p.method="throw",p.arg=new TypeError("iterator result is not an object"),p.delegate=null,nn)}function $n(i){var p={tryLoc:i[0]};1 in i&&(p.catchLoc=i[1]),2 in i&&(p.finallyLoc=i[2],p.afterLoc=i[3]),this.tryEntries.push(p)}function jn(i){var p=i.completion||{};p.type="normal",delete p.arg,i.completion=p}function Tn(i){this.tryEntries=[{tryLoc:"root"}],i.forEach($n,this),this.reset(!0)}function Fn(i){if(i||i===""){var p=i[m];if(p)return p.call(i);if(typeof i.next=="function")return i;if(!isNaN(i.length)){var e=-1,y=function r(){for(;++e<i.length;)if(u.call(i,e))return r.value=i[e],r.done=!1,r;return r.value=t,r.done=!0,r};return y.next=y}}throw new TypeError(R(i)+" is not iterable")}return hn.prototype=_,o(W,"constructor",{value:_,configurable:!0}),o(_,"constructor",{value:hn,configurable:!0}),hn.displayName=x(_,S,"GeneratorFunction"),s.isGeneratorFunction=function(i){var p=typeof i=="function"&&i.constructor;return!!p&&(p===hn||(p.displayName||p.name)==="GeneratorFunction")},s.mark=function(i){return Object.setPrototypeOf?Object.setPrototypeOf(i,_):(i.__proto__=_,x(i,S,"GeneratorFunction")),i.prototype=Object.create(W),i},s.awrap=function(i){return{__await:i}},Pn(gn.prototype),x(gn.prototype,b,function(){return this}),s.AsyncIterator=gn,s.async=function(i,p,e,y,r){r===void 0&&(r=Promise);var c=new gn(j(i,p,e,y),r);return s.isGeneratorFunction(p)?c:c.next().then(function(h){return h.done?h.value:c.next()})},Pn(W),x(W,S,"Generator"),x(W,m,function(){return this}),x(W,"toString",function(){return"[object Generator]"}),s.keys=function(i){var p=Object(i),e=[];for(var y in p)e.push(y);return e.reverse(),function r(){for(;e.length;){var c=e.pop();if(c in p)return r.value=c,r.done=!1,r}return r.done=!0,r}},s.values=Fn,Tn.prototype={constructor:Tn,reset:function(p){if(this.prev=0,this.next=0,this.sent=this._sent=t,this.done=!1,this.delegate=null,this.method="next",this.arg=t,this.tryEntries.forEach(jn),!p)for(var e in this)e.charAt(0)==="t"&&u.call(this,e)&&!isNaN(+e.slice(1))&&(this[e]=t)},stop:function(){this.done=!0;var p=this.tryEntries[0].completion;if(p.type==="throw")throw p.arg;return this.rval},dispatchException:function(p){if(this.done)throw p;var e=this;function y(z,Q){return h.type="throw",h.arg=p,e.next=z,Q&&(e.method="next",e.arg=t),!!Q}for(var r=this.tryEntries.length-1;r>=0;--r){var c=this.tryEntries[r],h=c.completion;if(c.tryLoc==="root")return y("end");if(c.tryLoc<=this.prev){var P=u.call(c,"catchLoc"),E=u.call(c,"finallyLoc");if(P&&E){if(this.prev<c.catchLoc)return y(c.catchLoc,!0);if(this.prev<c.finallyLoc)return y(c.finallyLoc)}else if(P){if(this.prev<c.catchLoc)return y(c.catchLoc,!0)}else{if(!E)throw new Error("try statement without catch or finally");if(this.prev<c.finallyLoc)return y(c.finallyLoc)}}}},abrupt:function(p,e){for(var y=this.tryEntries.length-1;y>=0;--y){var r=this.tryEntries[y];if(r.tryLoc<=this.prev&&u.call(r,"finallyLoc")&&this.prev<r.finallyLoc){var c=r;break}}c&&(p==="break"||p==="continue")&&c.tryLoc<=e&&e<=c.finallyLoc&&(c=null);var h=c?c.completion:{};return h.type=p,h.arg=e,c?(this.method="next",this.next=c.finallyLoc,nn):this.complete(h)},complete:function(p,e){if(p.type==="throw")throw p.arg;return p.type==="break"||p.type==="continue"?this.next=p.arg:p.type==="return"?(this.rval=this.arg=p.arg,this.method="return",this.next="end"):p.type==="normal"&&e&&(this.next=e),nn},finish:function(p){for(var e=this.tryEntries.length-1;e>=0;--e){var y=this.tryEntries[e];if(y.finallyLoc===p)return this.complete(y.completion,y.afterLoc),jn(y),nn}},catch:function(p){for(var e=this.tryEntries.length-1;e>=0;--e){var y=this.tryEntries[e];if(y.tryLoc===p){var r=y.completion;if(r.type==="throw"){var c=r.arg;jn(y)}return c}}throw new Error("illegal catch attempt")},delegateYield:function(p,e,y){return this.delegate={iterator:Fn(p),resultName:e,nextLoc:y},this.method==="next"&&(this.arg=t),nn}},s}function O(t,s,a,u,o,d,m){try{var b=t[d](m),S=b.value}catch(x){a(x);return}b.done?s(S):Promise.resolve(S).then(u,o)}function B(t){return function(){var s=this,a=arguments;return new Promise(function(u,o){var d=t.apply(s,a);function m(S){O(d,u,o,m,b,"next",S)}function b(S){O(d,u,o,m,b,"throw",S)}m(void 0)})}}function X(t,s){return cn(t)||rn(t,s)||un(t,s)||M()}function M(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function un(t,s){if(t){if(typeof t=="string")return sn(t,s);var a=Object.prototype.toString.call(t).slice(8,-1);if(a==="Object"&&t.constructor&&(a=t.constructor.name),a==="Map"||a==="Set")return Array.from(t);if(a==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a))return sn(t,s)}}function sn(t,s){(s==null||s>t.length)&&(s=t.length);for(var a=0,u=new Array(s);a<s;a++)u[a]=t[a];return u}function rn(t,s){var a=t==null?null:typeof Symbol!="undefined"&&t[Symbol.iterator]||t["@@iterator"];if(a!=null){var u,o,d,m,b=[],S=!0,x=!1;try{if(d=(a=a.call(t)).next,s===0){if(Object(a)!==a)return;S=!1}else for(;!(S=(u=d.call(a)).done)&&(b.push(u.value),b.length!==s);S=!0);}catch(j){x=!0,o=j}finally{try{if(!S&&a.return!=null&&(m=a.return(),Object(m)!==m))return}finally{if(x)throw o}}return b}}function cn(t){if(Array.isArray(t))return t}var kn=function(s){return new Promise(function(a,u){var o=new FileReader;o.readAsDataURL(s),o.onload=function(){return a(o.result)},o.onerror=function(d){return u(d)}})},F=function(){var s=(0,U.useState)(!1),a=X(s,2),u=a[0],o=a[1],d=(0,U.useState)(""),m=X(d,2),b=m[0],S=m[1],x=(0,U.useState)(""),j=X(x,2),G=j[0],K=j[1],ln=(0,U.useState)([{uid:"-1",name:"image.png",status:"done",url:"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png"},{uid:"-2",name:"image.png",status:"done",url:"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png"},{uid:"-3",name:"image.png",status:"done",url:"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png"},{uid:"-4",name:"image.png",status:"done",url:"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png"},{uid:"-xxx",percent:50,name:"image.png",status:"uploading",url:"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png"},{uid:"-5",name:"image.png",status:"error"}]),fn=X(ln,2),yn=fn[0],nn=fn[1],Un=function(){return o(!1)},hn=function(){var tn=B(Z().mark(function pn(W){return Z().wrap(function(gn){for(;;)switch(gn.prev=gn.next){case 0:if(!(!W.url&&!W.preview)){gn.next=4;break}return gn.next=3,kn(W.originFileObj);case 3:W.preview=gn.sent;case 4:S(W.url||W.preview),o(!0),K(W.name||W.url.substring(W.url.lastIndexOf("/")+1));case 7:case"end":return gn.stop()}},pn)}));return function(W){return tn.apply(this,arguments)}}(),_=function(pn){var W=pn.fileList;return nn(W)},H=U.default.createElement("div",null,U.default.createElement(A.PlusOutlined,null),U.default.createElement("div",{style:{marginTop:8}},"Upload"));return U.default.createElement(U.default.Fragment,null,U.default.createElement(C.Upload,{action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",listType:"picture-card",fileList:yn,onPreview:hn,onChange:_},yn.length>=8?null:H),U.default.createElement(C.Modal,{open:u,title:G,footer:null,onCancel:Un},U.default.createElement("img",{alt:"example",style:{width:"100%"},src:b})))},q;return D.createElement(F)}}},4804:function(Y,J,g){Y.exports={content:{"zh-CN":[["p","\u4E0A\u4F20\u6587\u4EF6\u4E3A\u56FE\u7247\uFF0C\u53EF\u5C55\u793A\u672C\u5730\u7F29\u7565\u56FE\u3002",["code","IE8/9"]," \u4E0D\u652F\u6301\u6D4F\u89C8\u5668\u672C\u5730\u7F29\u7565\u56FE\u5C55\u793A\uFF08",["a",{title:null,href:"https://developer.mozilla.org/en-US/docs/Web/API/FileReader/readAsDataURL"},"Ref"],"\uFF09\uFF0C\u53EF\u4EE5\u5199 ",["code","thumbUrl"]," \u5C5E\u6027\u6765\u4EE3\u66FF\u3002"]],"en-US":[["p","If uploaded file is a picture, the thumbnail can be shown. ",["code","IE8/9"]," do not support local thumbnail show. Please use ",["code","thumbUrl"]," instead."]]},meta:{order:8,title:{"zh-CN":"\u56FE\u7247\u5217\u8868\u6837\u5F0F","en-US":"Pictures with list style"},filename:"components/upload/demo/picture-style.md",id:"components-upload-demo-picture-style"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:`import { UploadOutlined } from <span class="token string">'@ant-design/icons'</span><span class="token comment" spellcheck="true">;</span>
import { Button<span class="token punctuation">,</span> Upload } from <span class="token string">'antd'</span><span class="token comment" spellcheck="true">;</span>
import type { UploadFile } from <span class="token string">'antd/es/upload/interface'</span><span class="token comment" spellcheck="true">;</span>
import React from <span class="token string">'react'</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> fileList<span class="token punctuation">:</span> UploadFile<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  {
    uid<span class="token punctuation">:</span> <span class="token string">'-1'</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'xxx.png'</span><span class="token punctuation">,</span>
    status<span class="token punctuation">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
    url<span class="token punctuation">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
    thumbUrl<span class="token punctuation">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
  {
    uid<span class="token punctuation">:</span> <span class="token string">'-2'</span><span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string">'yyy.png'</span><span class="token punctuation">,</span>
    status<span class="token punctuation">:</span> <span class="token string">'error'</span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>
  <span class="token operator">&lt;></span>
    <span class="token operator">&lt;</span>Upload
      action<span class="token operator">=</span><span class="token string">"https://www.mocky.io/v2/5cc8019d300000980a055e76"</span>
      listType<span class="token operator">=</span><span class="token string">"picture"</span>
      defaultFileList<span class="token operator">=</span>{<span class="token punctuation">[</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>fileList<span class="token punctuation">]</span>}
    <span class="token operator">></span>
      <span class="token operator">&lt;</span>Button icon<span class="token operator">=</span>{<span class="token operator">&lt;</span>UploadOutlined <span class="token operator">/</span><span class="token operator">></span>}<span class="token operator">></span>Upload<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>Upload<span class="token operator">></span>
    <span class="token operator">&lt;</span>br <span class="token operator">/</span><span class="token operator">></span>
    <span class="token operator">&lt;</span>br <span class="token operator">/</span><span class="token operator">></span>
    <span class="token operator">&lt;</span>Upload
      action<span class="token operator">=</span><span class="token string">"https://www.mocky.io/v2/5cc8019d300000980a055e76"</span>
      listType<span class="token operator">=</span><span class="token string">"picture"</span>
      defaultFileList<span class="token operator">=</span>{<span class="token punctuation">[</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>fileList<span class="token punctuation">]</span>}
      className<span class="token operator">=</span><span class="token string">"upload-list-inline"</span>
    <span class="token operator">></span>
      <span class="token operator">&lt;</span>Button icon<span class="token operator">=</span>{<span class="token operator">&lt;</span>UploadOutlined <span class="token operator">/</span><span class="token operator">></span>}<span class="token operator">></span>Upload<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>Upload<span class="token operator">></span>
  <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">></span>
<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

export <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>`}],highlightedCodes:{tsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> UploadFile <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd/es/upload/interface'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> fileList<span class="token operator">:</span> UploadFile<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    uid<span class="token operator">:</span> <span class="token string">'-1'</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'xxx.png'</span><span class="token punctuation">,</span>
    status<span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
    url<span class="token operator">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
    thumbUrl<span class="token operator">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    uid<span class="token operator">:</span> <span class="token string">'-2'</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">'yyy.png'</span><span class="token punctuation">,</span>
    status<span class="token operator">:</span> <span class="token string">'error'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span>
      <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.mocky.io/v2/5cc8019d300000980a055e76<span class="token punctuation">"</span></span>
      <span class="token attr-name">listType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>picture<span class="token punctuation">"</span></span>
      <span class="token attr-name">defaultFileList</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span><span class="token operator">...</span>fileList<span class="token punctuation">]</span><span class="token punctuation">}</span></span>
    <span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span>
      <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.mocky.io/v2/5cc8019d300000980a055e76<span class="token punctuation">"</span></span>
      <span class="token attr-name">listType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>picture<span class="token punctuation">"</span></span>
      <span class="token attr-name">defaultFileList</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span><span class="token operator">...</span>fileList<span class="token punctuation">]</span><span class="token punctuation">}</span></span>
      <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>upload-list-inline<span class="token punctuation">"</span></span>
    <span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>`,jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> fileList <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token string">'-1'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'xxx.png'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">thumbUrl</span><span class="token operator">:</span> <span class="token string">'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token string">'-2'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'yyy.png'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">'error'</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span>
      <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.mocky.io/v2/5cc8019d300000980a055e76<span class="token punctuation">"</span></span>
      <span class="token attr-name">listType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>picture<span class="token punctuation">"</span></span>
      <span class="token attr-name">defaultFileList</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span><span class="token operator">...</span>fileList<span class="token punctuation">]</span><span class="token punctuation">}</span></span>
    <span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span>
      <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://www.mocky.io/v2/5cc8019d300000980a055e76<span class="token punctuation">"</span></span>
      <span class="token attr-name">listType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>picture<span class="token punctuation">"</span></span>
      <span class="token attr-name">defaultFileList</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span><span class="token operator">...</span>fileList<span class="token punctuation">]</span><span class="token punctuation">}</span></span>
      <span class="token attr-name">className</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>upload-list-inline<span class="token punctuation">"</span></span>
    <span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
`},preview:function(){var D=g(0),mn=g(41);J.default=void 0;var R=g(60),A=g(13),C=U(g(0));function U(O){return O&&O.__esModule?O:{default:O}}var N=[{uid:"-1",name:"xxx.png",status:"done",url:"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png",thumbUrl:"https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png"},{uid:"-2",name:"yyy.png",status:"error"}],V=function(){return C.default.createElement(C.default.Fragment,null,C.default.createElement(A.Upload,{action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",listType:"picture",defaultFileList:[].concat(N)},C.default.createElement(A.Button,{icon:C.default.createElement(R.UploadOutlined,null)},"Upload")),C.default.createElement("br",null),C.default.createElement("br",null),C.default.createElement(A.Upload,{action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",listType:"picture",defaultFileList:[].concat(N),className:"upload-list-inline"},C.default.createElement(A.Button,{icon:C.default.createElement(R.UploadOutlined,null)},"Upload")))},Z;return D.createElement(V)},style:`/* tile uploaded pictures */
.upload-list-inline .ant-upload-list-item {
  float: left;
  width: 200px;
  margin-right: 8px;
}

.upload-list-inline [class*='-upload-list-rtl'] .ant-upload-list-item {
  float: right;
}`,highlightedStyle:`<span class="token comment" spellcheck="true">/* tile uploaded pictures */</span>
<span class="token selector"><span class="token class">.upload-list-inline</span> <span class="token class">.ant-upload-list-item</span> </span><span class="token punctuation">{</span>
  <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>
  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span>
  <span class="token property">margin-right</span><span class="token punctuation">:</span> <span class="token number">8</span>px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector"><span class="token class">.upload-list-inline</span> <span class="token attribute">[class*='-upload-list-rtl']</span> <span class="token class">.ant-upload-list-item</span> </span><span class="token punctuation">{</span>
  <span class="token property">float</span><span class="token punctuation">:</span> right<span class="token punctuation">;</span>
<span class="token punctuation">}</span>`}},4805:function(Y,J,g){Y.exports={content:{"zh-CN":[["p","\u81EA\u5B9A\u4E49\u672C\u5730\u9884\u89C8\uFF0C\u7528\u4E8E\u5904\u7406\u975E\u56FE\u7247\u683C\u5F0F\u6587\u4EF6\uFF08\u4F8B\u5982\u89C6\u9891\u6587\u4EF6\uFF09\u3002"]],"en-US":[["p","Customize local preview. Can handle with non-image format files such as video."]]},meta:{order:9,title:{"zh-CN":"\u81EA\u5B9A\u4E49\u9884\u89C8","en-US":"Customize preview file"},filename:"components/upload/demo/preview-file.md",id:"components-upload-demo-preview-file"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:`import { UploadOutlined } from <span class="token string">'@ant-design/icons'</span><span class="token comment" spellcheck="true">;</span>
import type { UploadProps } from <span class="token string">'antd'</span><span class="token comment" spellcheck="true">;</span>
import { Button<span class="token punctuation">,</span> Upload } from <span class="token string">'antd'</span><span class="token comment" spellcheck="true">;</span>
import React from <span class="token string">'react'</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> props<span class="token punctuation">:</span> UploadProps <span class="token operator">=</span> {
  action<span class="token punctuation">:</span> <span class="token string">'//jsonplaceholder.typicode.com/posts/'</span><span class="token punctuation">,</span>
  listType<span class="token punctuation">:</span> <span class="token string">'picture'</span><span class="token punctuation">,</span>
  <span class="token function">previewFile</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span> {
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Your upload file:'</span><span class="token punctuation">,</span> file<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    <span class="token operator">/</span><span class="token operator">/</span> Your process logic<span class="token punctuation">.</span> Here we just mock <span class="token keyword">to</span> the same file
    return <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">'https://next.json-generator.com/api/json/get/4ytyBoLK8'</span><span class="token punctuation">,</span> {
      method<span class="token punctuation">:</span> <span class="token string">'POST'</span><span class="token punctuation">,</span>
      body<span class="token punctuation">:</span> file<span class="token punctuation">,</span>
    }<span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>res <span class="token operator">=</span><span class="token operator">></span> res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span>{ thumbnail }<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> thumbnail<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  }<span class="token punctuation">,</span>
}<span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>
  <span class="token operator">&lt;</span>Upload {<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>props}<span class="token operator">></span>
    <span class="token operator">&lt;</span>Button icon<span class="token operator">=</span>{<span class="token operator">&lt;</span>UploadOutlined <span class="token operator">/</span><span class="token operator">></span>}<span class="token operator">></span>Upload<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>Upload<span class="token operator">></span>
<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

export <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>`}],highlightedCodes:{tsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> UploadProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> props<span class="token operator">:</span> UploadProps <span class="token operator">=</span> <span class="token punctuation">{</span>
  action<span class="token operator">:</span> <span class="token string">'//jsonplaceholder.typicode.com/posts/'</span><span class="token punctuation">,</span>
  listType<span class="token operator">:</span> <span class="token string">'picture'</span><span class="token punctuation">,</span>
  <span class="token function">previewFile</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Your upload file:'</span><span class="token punctuation">,</span> file<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// Your process logic. Here we just mock to the same file</span>
    <span class="token keyword">return</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">'https://next.json-generator.com/api/json/get/4ytyBoLK8'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
      method<span class="token operator">:</span> <span class="token string">'POST'</span><span class="token punctuation">,</span>
      body<span class="token operator">:</span> file<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>res <span class="token operator">=></span> res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">{</span> thumbnail <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=></span> thumbnail<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>`,jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">action</span><span class="token operator">:</span> <span class="token string">'//jsonplaceholder.typicode.com/posts/'</span><span class="token punctuation">,</span>
  <span class="token literal-property property">listType</span><span class="token operator">:</span> <span class="token string">'picture'</span><span class="token punctuation">,</span>
  <span class="token function">previewFile</span><span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Your upload file:'</span><span class="token punctuation">,</span> file<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// Your process logic. Here we just mock to the same file</span>
    <span class="token keyword">return</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">'https://next.json-generator.com/api/json/get/4ytyBoLK8'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">'POST'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">body</span><span class="token operator">:</span> file<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=></span> res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> thumbnail <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> thumbnail<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
`},preview:function(){var D=g(0),mn=g(41);J.default=void 0;var R=g(60),A=g(13),C=U(g(0));function U(O){return O&&O.__esModule?O:{default:O}}var N={action:"//jsonplaceholder.typicode.com/posts/",listType:"picture",previewFile:function(B){return console.log("Your upload file:",B),fetch("https://next.json-generator.com/api/json/get/4ytyBoLK8",{method:"POST",body:B}).then(function(X){return X.json()}).then(function(X){var M=X.thumbnail;return M})}},V=function(){return C.default.createElement(A.Upload,N,C.default.createElement(A.Button,{icon:C.default.createElement(R.UploadOutlined,null)},"Upload"))},Z;return D.createElement(V)}}},4806:function(Y,J,g){Y.exports={content:{"zh-CN":[["p","\u4F7F\u7528 ",["code","beforeUpload"]," \u8F6C\u6362\u4E0A\u4F20\u7684\u6587\u4EF6\uFF08\u4F8B\u5982\u6DFB\u52A0\u6C34\u5370\uFF09\u3002"]],"en-US":[["p","Use ",["code","beforeUpload"]," for transform file before request such as add a watermark."]]},meta:{order:10,title:{"zh-CN":"\u4E0A\u4F20\u524D\u8F6C\u6362\u6587\u4EF6","en-US":"Transform file before request"},filename:"components/upload/demo/transform-file.md",id:"components-upload-demo-transform-file"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:`import { UploadOutlined } from <span class="token string">'@ant-design/icons'</span><span class="token comment" spellcheck="true">;</span>
import type { UploadProps } from <span class="token string">'antd'</span><span class="token comment" spellcheck="true">;</span>
import { Button<span class="token punctuation">,</span> Upload } from <span class="token string">'antd'</span><span class="token comment" spellcheck="true">;</span>
import React from <span class="token string">'react'</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> props<span class="token punctuation">:</span> UploadProps <span class="token operator">=</span> {
  action<span class="token punctuation">:</span> <span class="token string">'https://www.mocky.io/v2/5cc8019d300000980a055e76'</span><span class="token punctuation">,</span>
  listType<span class="token punctuation">:</span> <span class="token string">'picture'</span><span class="token punctuation">,</span>
  <span class="token function">beforeUpload</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span> {
    return new <span class="token function">Promise</span><span class="token punctuation">(</span>resolve <span class="token operator">=</span><span class="token operator">></span> {
      <span class="token keyword">const</span> reader <span class="token operator">=</span> new <span class="token function">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
      reader<span class="token punctuation">.</span><span class="token function">readAsDataURL</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
      reader<span class="token punctuation">.</span>onload <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
        <span class="token keyword">const</span> img <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'img'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
        img<span class="token punctuation">.</span>src <span class="token operator">=</span> reader<span class="token punctuation">.</span>result as string<span class="token comment" spellcheck="true">;</span>
        img<span class="token punctuation">.</span>onload <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
          <span class="token keyword">const</span> canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'canvas'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
          canvas<span class="token punctuation">.</span>width <span class="token operator">=</span> img<span class="token punctuation">.</span>naturalWidth<span class="token comment" spellcheck="true">;</span>
          canvas<span class="token punctuation">.</span>height <span class="token operator">=</span> img<span class="token punctuation">.</span>naturalHeight<span class="token comment" spellcheck="true">;</span>
          <span class="token keyword">const</span> ctx <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">'2d'</span><span class="token punctuation">)</span>!<span class="token comment" spellcheck="true">;</span>
          ctx<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>img<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
          ctx<span class="token punctuation">.</span>fillStyle <span class="token operator">=</span> <span class="token string">'red'</span><span class="token comment" spellcheck="true">;</span>
          ctx<span class="token punctuation">.</span>textBaseline <span class="token operator">=</span> <span class="token string">'middle'</span><span class="token comment" spellcheck="true">;</span>
          ctx<span class="token punctuation">.</span>font <span class="token operator">=</span> <span class="token string">'33px Arial'</span><span class="token comment" spellcheck="true">;</span>
          ctx<span class="token punctuation">.</span><span class="token function">fillText</span><span class="token punctuation">(</span><span class="token string">'Ant Design'</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
          canvas<span class="token punctuation">.</span><span class="token function">toBlob</span><span class="token punctuation">(</span>result <span class="token operator">=</span><span class="token operator">></span> <span class="token function">resolve</span><span class="token punctuation">(</span>result as any<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
        }<span class="token comment" spellcheck="true">;</span>
      }<span class="token comment" spellcheck="true">;</span>
    }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  }<span class="token punctuation">,</span>
}<span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>
  <span class="token operator">&lt;</span>Upload {<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>props}<span class="token operator">></span>
    <span class="token operator">&lt;</span>Button icon<span class="token operator">=</span>{<span class="token operator">&lt;</span>UploadOutlined <span class="token operator">/</span><span class="token operator">></span>}<span class="token operator">></span>Upload<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>Upload<span class="token operator">></span>
<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

export <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>`}],highlightedCodes:{tsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> UploadProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> props<span class="token operator">:</span> UploadProps <span class="token operator">=</span> <span class="token punctuation">{</span>
  action<span class="token operator">:</span> <span class="token string">'https://www.mocky.io/v2/5cc8019d300000980a055e76'</span><span class="token punctuation">,</span>
  listType<span class="token operator">:</span> <span class="token string">'picture'</span><span class="token punctuation">,</span>
  <span class="token function">beforeUpload</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span>resolve <span class="token operator">=></span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      reader<span class="token punctuation">.</span><span class="token function">readAsDataURL</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
      reader<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> img <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'img'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        img<span class="token punctuation">.</span>src <span class="token operator">=</span> reader<span class="token punctuation">.</span>result <span class="token keyword">as</span> string<span class="token punctuation">;</span>
        img<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
          <span class="token keyword">const</span> canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'canvas'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          canvas<span class="token punctuation">.</span>width <span class="token operator">=</span> img<span class="token punctuation">.</span>naturalWidth<span class="token punctuation">;</span>
          canvas<span class="token punctuation">.</span>height <span class="token operator">=</span> img<span class="token punctuation">.</span>naturalHeight<span class="token punctuation">;</span>
          <span class="token keyword">const</span> ctx <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">'2d'</span><span class="token punctuation">)</span><span class="token operator">!</span><span class="token punctuation">;</span>
          ctx<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>img<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          ctx<span class="token punctuation">.</span>fillStyle <span class="token operator">=</span> <span class="token string">'red'</span><span class="token punctuation">;</span>
          ctx<span class="token punctuation">.</span>textBaseline <span class="token operator">=</span> <span class="token string">'middle'</span><span class="token punctuation">;</span>
          ctx<span class="token punctuation">.</span>font <span class="token operator">=</span> <span class="token string">'33px Arial'</span><span class="token punctuation">;</span>
          ctx<span class="token punctuation">.</span><span class="token function">fillText</span><span class="token punctuation">(</span><span class="token string">'Ant Design'</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          canvas<span class="token punctuation">.</span><span class="token function">toBlob</span><span class="token punctuation">(</span>result <span class="token operator">=></span> <span class="token function">resolve</span><span class="token punctuation">(</span>result <span class="token keyword">as</span> any<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>`,jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">action</span><span class="token operator">:</span> <span class="token string">'https://www.mocky.io/v2/5cc8019d300000980a055e76'</span><span class="token punctuation">,</span>
  <span class="token literal-property property">listType</span><span class="token operator">:</span> <span class="token string">'picture'</span><span class="token punctuation">,</span>
  <span class="token function">beforeUpload</span><span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      reader<span class="token punctuation">.</span><span class="token function">readAsDataURL</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
      reader<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> img <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'img'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        img<span class="token punctuation">.</span>src <span class="token operator">=</span> reader<span class="token punctuation">.</span>result<span class="token punctuation">;</span>
        img<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
          <span class="token keyword">const</span> canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">'canvas'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          canvas<span class="token punctuation">.</span>width <span class="token operator">=</span> img<span class="token punctuation">.</span>naturalWidth<span class="token punctuation">;</span>
          canvas<span class="token punctuation">.</span>height <span class="token operator">=</span> img<span class="token punctuation">.</span>naturalHeight<span class="token punctuation">;</span>
          <span class="token keyword">const</span> ctx <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">'2d'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          ctx<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>img<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          ctx<span class="token punctuation">.</span>fillStyle <span class="token operator">=</span> <span class="token string">'red'</span><span class="token punctuation">;</span>
          ctx<span class="token punctuation">.</span>textBaseline <span class="token operator">=</span> <span class="token string">'middle'</span><span class="token punctuation">;</span>
          ctx<span class="token punctuation">.</span>font <span class="token operator">=</span> <span class="token string">'33px Arial'</span><span class="token punctuation">;</span>
          ctx<span class="token punctuation">.</span><span class="token function">fillText</span><span class="token punctuation">(</span><span class="token string">'Ant Design'</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          canvas<span class="token punctuation">.</span><span class="token function">toBlob</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">resolve</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
`},preview:function(){var D=g(0),mn=g(41);J.default=void 0;var R=g(60),A=g(13),C=U(g(0));function U(O){return O&&O.__esModule?O:{default:O}}var N={action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",listType:"picture",beforeUpload:function(B){return new Promise(function(X){var M=new FileReader;M.readAsDataURL(B),M.onload=function(){var un=document.createElement("img");un.src=M.result,un.onload=function(){var sn=document.createElement("canvas");sn.width=un.naturalWidth,sn.height=un.naturalHeight;var rn=sn.getContext("2d");rn.drawImage(un,0,0),rn.fillStyle="red",rn.textBaseline="middle",rn.font="33px Arial",rn.fillText("Ant Design",20,20),sn.toBlob(function(cn){return X(cn)})}}})}},V=function(){return C.default.createElement(A.Upload,N,C.default.createElement(A.Button,{icon:C.default.createElement(R.UploadOutlined,null)},"Upload"))},Z;return D.createElement(V)}}},4807:function(Y,J,g){Y.exports={content:{"zh-CN":[["p","\u4F7F\u7528 ",["code","showUploadList"]," \u8BBE\u7F6E\u5217\u8868\u4EA4\u4E92\u56FE\u6807\u3002"]],"en-US":[["p","Use ",["code","showUploadList"]," for custom action icons of files."]]},meta:{order:12,title:{"zh-CN":"\u81EA\u5B9A\u4E49\u4EA4\u4E92\u56FE\u6807","en-US":"custom action icon"},filename:"components/upload/demo/upload-custom-action-icon.md",id:"components-upload-demo-upload-custom-action-icon"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:`import { StarOutlined<span class="token punctuation">,</span> UploadOutlined } from <span class="token string">'@ant-design/icons'</span><span class="token comment" spellcheck="true">;</span>
import type { UploadProps } from <span class="token string">'antd'</span><span class="token comment" spellcheck="true">;</span>
import { Button<span class="token punctuation">,</span> Upload } from <span class="token string">'antd'</span><span class="token comment" spellcheck="true">;</span>
import React from <span class="token string">'react'</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> props<span class="token punctuation">:</span> UploadProps <span class="token operator">=</span> {
  action<span class="token punctuation">:</span> <span class="token string">'https://www.mocky.io/v2/5cc8019d300000980a055e76'</span><span class="token punctuation">,</span>
  <span class="token function">onChange</span><span class="token punctuation">(</span>{ file<span class="token punctuation">,</span> fileList }<span class="token punctuation">)</span> {
    <span class="token keyword">if</span> <span class="token punctuation">(</span>file<span class="token punctuation">.</span>status !<span class="token operator">==</span> <span class="token string">'uploading'</span><span class="token punctuation">)</span> {
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> fileList<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    }
  }<span class="token punctuation">,</span>
  defaultFileList<span class="token punctuation">:</span> <span class="token punctuation">[</span>
    {
      uid<span class="token punctuation">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
      name<span class="token punctuation">:</span> <span class="token string">'xxx.png'</span><span class="token punctuation">,</span>
      status<span class="token punctuation">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      response<span class="token punctuation">:</span> <span class="token string">'Server Error 500'</span><span class="token punctuation">,</span> <span class="token operator">/</span><span class="token operator">/</span> custom error message <span class="token keyword">to</span> show
      url<span class="token punctuation">:</span> <span class="token string">'http://www.baidu.com/xxx.png'</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
    {
      uid<span class="token punctuation">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
      name<span class="token punctuation">:</span> <span class="token string">'yyy.png'</span><span class="token punctuation">,</span>
      status<span class="token punctuation">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      url<span class="token punctuation">:</span> <span class="token string">'http://www.baidu.com/yyy.png'</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
    {
      uid<span class="token punctuation">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>
      name<span class="token punctuation">:</span> <span class="token string">'zzz.png'</span><span class="token punctuation">,</span>
      status<span class="token punctuation">:</span> <span class="token string">'error'</span><span class="token punctuation">,</span>
      response<span class="token punctuation">:</span> <span class="token string">'Server Error 500'</span><span class="token punctuation">,</span> <span class="token operator">/</span><span class="token operator">/</span> custom error message <span class="token keyword">to</span> show
      url<span class="token punctuation">:</span> <span class="token string">'http://www.baidu.com/zzz.png'</span><span class="token punctuation">,</span>
    }<span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  showUploadList<span class="token punctuation">:</span> {
    showDownloadIcon<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    downloadIcon<span class="token punctuation">:</span> <span class="token string">'Download'</span><span class="token punctuation">,</span>
    showRemoveIcon<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    removeIcon<span class="token punctuation">:</span> <span class="token operator">&lt;</span>StarOutlined onClick<span class="token operator">=</span>{e <span class="token operator">=</span><span class="token operator">></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> <span class="token string">'custom removeIcon event'</span><span class="token punctuation">)</span>} <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">,</span>
  }<span class="token punctuation">,</span>
}<span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>
  <span class="token operator">&lt;</span>Upload {<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>props}<span class="token operator">></span>
    <span class="token operator">&lt;</span>Button icon<span class="token operator">=</span>{<span class="token operator">&lt;</span>UploadOutlined <span class="token operator">/</span><span class="token operator">></span>}<span class="token operator">></span>Upload<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>Upload<span class="token operator">></span>
<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

export <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>`}],highlightedCodes:{tsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> StarOutlined<span class="token punctuation">,</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> UploadProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> props<span class="token operator">:</span> UploadProps <span class="token operator">=</span> <span class="token punctuation">{</span>
  action<span class="token operator">:</span> <span class="token string">'https://www.mocky.io/v2/5cc8019d300000980a055e76'</span><span class="token punctuation">,</span>
  <span class="token function">onChange</span><span class="token punctuation">(</span><span class="token punctuation">{</span> file<span class="token punctuation">,</span> fileList <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>file<span class="token punctuation">.</span>status <span class="token operator">!==</span> <span class="token string">'uploading'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> fileList<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  defaultFileList<span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      uid<span class="token operator">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
      name<span class="token operator">:</span> <span class="token string">'xxx.png'</span><span class="token punctuation">,</span>
      status<span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      response<span class="token operator">:</span> <span class="token string">'Server Error 500'</span><span class="token punctuation">,</span> <span class="token comment">// custom error message to show</span>
      url<span class="token operator">:</span> <span class="token string">'http://www.baidu.com/xxx.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      uid<span class="token operator">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
      name<span class="token operator">:</span> <span class="token string">'yyy.png'</span><span class="token punctuation">,</span>
      status<span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      url<span class="token operator">:</span> <span class="token string">'http://www.baidu.com/yyy.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      uid<span class="token operator">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>
      name<span class="token operator">:</span> <span class="token string">'zzz.png'</span><span class="token punctuation">,</span>
      status<span class="token operator">:</span> <span class="token string">'error'</span><span class="token punctuation">,</span>
      response<span class="token operator">:</span> <span class="token string">'Server Error 500'</span><span class="token punctuation">,</span> <span class="token comment">// custom error message to show</span>
      url<span class="token operator">:</span> <span class="token string">'http://www.baidu.com/zzz.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  showUploadList<span class="token operator">:</span> <span class="token punctuation">{</span>
    showDownloadIcon<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    downloadIcon<span class="token operator">:</span> <span class="token string">'Download'</span><span class="token punctuation">,</span>
    showRemoveIcon<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    removeIcon<span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">StarOutlined</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>e <span class="token operator">=></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> <span class="token string">'custom removeIcon event'</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>`,jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> StarOutlined<span class="token punctuation">,</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">action</span><span class="token operator">:</span> <span class="token string">'https://www.mocky.io/v2/5cc8019d300000980a055e76'</span><span class="token punctuation">,</span>
  <span class="token function">onChange</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> file<span class="token punctuation">,</span> fileList <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>file<span class="token punctuation">.</span>status <span class="token operator">!==</span> <span class="token string">'uploading'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> fileList<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">defaultFileList</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token string">'1'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'xxx.png'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">response</span><span class="token operator">:</span> <span class="token string">'Server Error 500'</span><span class="token punctuation">,</span>
      <span class="token comment">// custom error message to show</span>
      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">'http://www.baidu.com/xxx.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token string">'2'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'yyy.png'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">'done'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">'http://www.baidu.com/yyy.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">uid</span><span class="token operator">:</span> <span class="token string">'3'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'zzz.png'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">'error'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">response</span><span class="token operator">:</span> <span class="token string">'Server Error 500'</span><span class="token punctuation">,</span>
      <span class="token comment">// custom error message to show</span>
      <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">'http://www.baidu.com/zzz.png'</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">showUploadList</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">showDownloadIcon</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">downloadIcon</span><span class="token operator">:</span> <span class="token string">'Download'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">showRemoveIcon</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">removeIcon</span><span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">StarOutlined</span></span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> <span class="token string">'custom removeIcon event'</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
`},preview:function(){var D=g(0),mn=g(41);J.default=void 0;var R=g(60),A=g(13),C=U(g(0));function U(O){return O&&O.__esModule?O:{default:O}}var N={action:"https://www.mocky.io/v2/5cc8019d300000980a055e76",onChange:function(B){var X=B.file,M=B.fileList;X.status!=="uploading"&&console.log(X,M)},defaultFileList:[{uid:"1",name:"xxx.png",status:"done",response:"Server Error 500",url:"http://www.baidu.com/xxx.png"},{uid:"2",name:"yyy.png",status:"done",url:"http://www.baidu.com/yyy.png"},{uid:"3",name:"zzz.png",status:"error",response:"Server Error 500",url:"http://www.baidu.com/zzz.png"}],showUploadList:{showDownloadIcon:!0,downloadIcon:"Download",showRemoveIcon:!0,removeIcon:C.default.createElement(R.StarOutlined,{onClick:function(B){return console.log(B,"custom removeIcon event")}})}},V=function(){return C.default.createElement(A.Upload,N,C.default.createElement(A.Button,{icon:C.default.createElement(R.UploadOutlined,null)},"Upload"))},Z;return D.createElement(V)}}},4808:function(Y,J,g){Y.exports={content:{"zh-CN":[["p",["code","beforeUpload"]," \u8FD4\u56DE ",["code","false"]," \u540E\uFF0C\u624B\u52A8\u4E0A\u4F20\u6587\u4EF6\u3002"]],"en-US":[["p","Upload files manually after ",["code","beforeUpload"]," returns ",["code","false"],"."]]},meta:{order:7,title:{"zh-CN":"\u624B\u52A8\u4E0A\u4F20","en-US":"Upload manually"},filename:"components/upload/demo/upload-manually.md",id:"components-upload-demo-upload-manually"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:`import { UploadOutlined } from <span class="token string">'@ant-design/icons'</span><span class="token comment" spellcheck="true">;</span>
import { Button<span class="token punctuation">,</span> message<span class="token punctuation">,</span> Upload } from <span class="token string">'antd'</span><span class="token comment" spellcheck="true">;</span>
import type { RcFile<span class="token punctuation">,</span> UploadFile<span class="token punctuation">,</span> UploadProps } from <span class="token string">'antd/es/upload/interface'</span><span class="token comment" spellcheck="true">;</span>
import React<span class="token punctuation">,</span> { useState } from <span class="token string">'react'</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
  <span class="token keyword">const</span> <span class="token punctuation">[</span>fileList<span class="token punctuation">,</span> setFileList<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>UploadFile<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>uploading<span class="token punctuation">,</span> setUploading<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> handleUpload <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
    <span class="token keyword">const</span> formData <span class="token operator">=</span> new <span class="token function">FormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    fileList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>file <span class="token operator">=</span><span class="token operator">></span> {
      formData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">'files[]'</span><span class="token punctuation">,</span> file as RcFile<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    <span class="token function">setUploading</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    <span class="token operator">/</span><span class="token operator">/</span> You can use any AJAX library you like
    <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">'https://www.mocky.io/v2/5cc8019d300000980a055e76'</span><span class="token punctuation">,</span> {
      method<span class="token punctuation">:</span> <span class="token string">'POST'</span><span class="token punctuation">,</span>
      body<span class="token punctuation">:</span> formData<span class="token punctuation">,</span>
    }<span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>res <span class="token operator">=</span><span class="token operator">></span> res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
        <span class="token function">setFileList</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
        message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">'upload successfully.'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
      }<span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
        message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">'upload failed.'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
      }<span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
        <span class="token function">setUploading</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
      }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  }<span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> props<span class="token punctuation">:</span> UploadProps <span class="token operator">=</span> {
    onRemove<span class="token punctuation">:</span> file <span class="token operator">=</span><span class="token operator">></span> {
      <span class="token keyword">const</span> index <span class="token operator">=</span> fileList<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
      <span class="token keyword">const</span> newFileList <span class="token operator">=</span> fileList<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
      newFileList<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
      <span class="token function">setFileList</span><span class="token punctuation">(</span>newFileList<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    }<span class="token punctuation">,</span>
    beforeUpload<span class="token punctuation">:</span> file <span class="token operator">=</span><span class="token operator">></span> {
      <span class="token function">setFileList</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>fileList<span class="token punctuation">,</span> file<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

      return <span class="token boolean">false</span><span class="token comment" spellcheck="true">;</span>
    }<span class="token punctuation">,</span>
    fileList<span class="token punctuation">,</span>
  }<span class="token comment" spellcheck="true">;</span>

  return <span class="token punctuation">(</span>
    <span class="token operator">&lt;></span>
      <span class="token operator">&lt;</span>Upload {<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>props}<span class="token operator">></span>
        <span class="token operator">&lt;</span>Button icon<span class="token operator">=</span>{<span class="token operator">&lt;</span>UploadOutlined <span class="token operator">/</span><span class="token operator">></span>}<span class="token operator">></span><span class="token keyword">Select</span> File<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>Upload<span class="token operator">></span>
      <span class="token operator">&lt;</span>Button
        type<span class="token operator">=</span><span class="token string">"primary"</span>
        onClick<span class="token operator">=</span>{handleUpload}
        disabled<span class="token operator">=</span>{fileList<span class="token punctuation">.</span>length <span class="token operator">==</span><span class="token operator">=</span> <span class="token number">0</span>}
        loading<span class="token operator">=</span>{uploading}
        style<span class="token operator">=</span>{{ marginTop<span class="token punctuation">:</span> <span class="token number">16</span> }}
      <span class="token operator">></span>
        {uploading <span class="token operator">?</span> <span class="token string">'Uploading'</span> <span class="token punctuation">:</span> <span class="token string">'Start Upload'</span>}
      <span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">></span>
  <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
}<span class="token comment" spellcheck="true">;</span>

export <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>`}],highlightedCodes:{tsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> message<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> RcFile<span class="token punctuation">,</span> UploadFile<span class="token punctuation">,</span> UploadProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd/es/upload/interface'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>fileList<span class="token punctuation">,</span> setFileList<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>UploadFile<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>uploading<span class="token punctuation">,</span> setUploading<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">handleUpload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> formData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    fileList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>file <span class="token operator">=></span> <span class="token punctuation">{</span>
      formData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">'files[]'</span><span class="token punctuation">,</span> file <span class="token keyword">as</span> RcFile<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">setUploading</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// You can use any AJAX library you like</span>
    <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">'https://www.mocky.io/v2/5cc8019d300000980a055e76'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
      method<span class="token operator">:</span> <span class="token string">'POST'</span><span class="token punctuation">,</span>
      body<span class="token operator">:</span> formData<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>res <span class="token operator">=></span> res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
        <span class="token function">setFileList</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">'upload successfully.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
        message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">'upload failed.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
        <span class="token function">setUploading</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> props<span class="token operator">:</span> UploadProps <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">onRemove</span><span class="token operator">:</span> file <span class="token operator">=></span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> index <span class="token operator">=</span> fileList<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">const</span> newFileList <span class="token operator">=</span> fileList<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      newFileList<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">setFileList</span><span class="token punctuation">(</span>newFileList<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">beforeUpload</span><span class="token operator">:</span> file <span class="token operator">=></span> <span class="token punctuation">{</span>
      <span class="token function">setFileList</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>fileList<span class="token punctuation">,</span> file<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    fileList<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Select File<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span>
        <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span>
        <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleUpload<span class="token punctuation">}</span></span>
        <span class="token attr-name">disabled</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>fileList<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">}</span></span>
        <span class="token attr-name">loading</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>uploading<span class="token punctuation">}</span></span>
        <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> marginTop<span class="token operator">:</span> <span class="token number">16</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
      <span class="token punctuation">></span></span>
        <span class="token punctuation">{</span>uploading <span class="token operator">?</span> <span class="token string">'Uploading'</span> <span class="token operator">:</span> <span class="token string">'Start Upload'</span><span class="token punctuation">}</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>`,jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> message<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>fileList<span class="token punctuation">,</span> setFileList<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>uploading<span class="token punctuation">,</span> setUploading<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token function-variable function">handleUpload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> formData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    fileList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
      formData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">'files[]'</span><span class="token punctuation">,</span> file<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">setUploading</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// You can use any AJAX library you like</span>
    <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">'https://www.mocky.io/v2/5cc8019d300000980a055e76'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">'POST'</span><span class="token punctuation">,</span>
      <span class="token literal-property property">body</span><span class="token operator">:</span> formData<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=></span> res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
        <span class="token function">setFileList</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">'upload successfully.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
        message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">'upload failed.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
        <span class="token function">setUploading</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token function-variable function">onRemove</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> index <span class="token operator">=</span> fileList<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">const</span> newFileList <span class="token operator">=</span> fileList<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      newFileList<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">setFileList</span><span class="token punctuation">(</span>newFileList<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">beforeUpload</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
      <span class="token function">setFileList</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>fileList<span class="token punctuation">,</span> file<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    fileList<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Select File<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span>
        <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span>
        <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleUpload<span class="token punctuation">}</span></span>
        <span class="token attr-name">disabled</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>fileList<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">}</span></span>
        <span class="token attr-name">loading</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>uploading<span class="token punctuation">}</span></span>
        <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
          <span class="token literal-property property">marginTop</span><span class="token operator">:</span> <span class="token number">16</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
      <span class="token punctuation">></span></span>
        <span class="token punctuation">{</span>uploading <span class="token operator">?</span> <span class="token string">'Uploading'</span> <span class="token operator">:</span> <span class="token string">'Start Upload'</span><span class="token punctuation">}</span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
`},preview:function(){var D=g(0),mn=g(41);function R(t){return R=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(s){return typeof s}:function(s){return s&&typeof Symbol=="function"&&s.constructor===Symbol&&s!==Symbol.prototype?"symbol":typeof s},R(t)}J.default=void 0;var A=g(60),C=g(13),U=V(g(0));function N(t){if(typeof WeakMap!="function")return null;var s=new WeakMap,a=new WeakMap;return(N=function(o){return o?a:s})(t)}function V(t,s){if(!s&&t&&t.__esModule)return t;if(t===null||R(t)!="object"&&typeof t!="function")return{default:t};var a=N(s);if(a&&a.has(t))return a.get(t);var u={__proto__:null},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var d in t)if(d!=="default"&&Object.prototype.hasOwnProperty.call(t,d)){var m=o?Object.getOwnPropertyDescriptor(t,d):null;m&&(m.get||m.set)?Object.defineProperty(u,d,m):u[d]=t[d]}return u.default=t,a&&a.set(t,u),u}function Z(t){return X(t)||B(t)||sn(t)||O()}function O(){throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function B(t){if(typeof Symbol!="undefined"&&t[Symbol.iterator]!=null||t["@@iterator"]!=null)return Array.from(t)}function X(t){if(Array.isArray(t))return rn(t)}function M(t,s){return kn(t)||cn(t,s)||sn(t,s)||un()}function un(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function sn(t,s){if(t){if(typeof t=="string")return rn(t,s);var a=Object.prototype.toString.call(t).slice(8,-1);if(a==="Object"&&t.constructor&&(a=t.constructor.name),a==="Map"||a==="Set")return Array.from(t);if(a==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a))return rn(t,s)}}function rn(t,s){(s==null||s>t.length)&&(s=t.length);for(var a=0,u=new Array(s);a<s;a++)u[a]=t[a];return u}function cn(t,s){var a=t==null?null:typeof Symbol!="undefined"&&t[Symbol.iterator]||t["@@iterator"];if(a!=null){var u,o,d,m,b=[],S=!0,x=!1;try{if(d=(a=a.call(t)).next,s===0){if(Object(a)!==a)return;S=!1}else for(;!(S=(u=d.call(a)).done)&&(b.push(u.value),b.length!==s);S=!0);}catch(j){x=!0,o=j}finally{try{if(!S&&a.return!=null&&(m=a.return(),Object(m)!==m))return}finally{if(x)throw o}}return b}}function kn(t){if(Array.isArray(t))return t}var F=function(){var s=(0,U.useState)([]),a=M(s,2),u=a[0],o=a[1],d=(0,U.useState)(!1),m=M(d,2),b=m[0],S=m[1],x=function(){var K=new FormData;u.forEach(function(ln){K.append("files[]",ln)}),S(!0),fetch("https://www.mocky.io/v2/5cc8019d300000980a055e76",{method:"POST",body:K}).then(function(ln){return ln.json()}).then(function(){o([]),C.message.success("upload successfully.")}).catch(function(){C.message.error("upload failed.")}).finally(function(){S(!1)})},j={onRemove:function(K){var ln=u.indexOf(K),fn=u.slice();fn.splice(ln,1),o(fn)},beforeUpload:function(K){return o([].concat(Z(u),[K])),!1},fileList:u};return U.default.createElement(U.default.Fragment,null,U.default.createElement(C.Upload,j,U.default.createElement(C.Button,{icon:U.default.createElement(A.UploadOutlined,null)},"Select File")),U.default.createElement(C.Button,{type:"primary",onClick:x,disabled:u.length===0,loading:b,style:{marginTop:16}},b?"Uploading":"Start Upload"))},q;return D.createElement(F)}}},4809:function(Y,J,g){Y.exports={content:{"zh-CN":[["p",["code","beforeUpload"]," \u8FD4\u56DE ",["code","false"]," \u6216 ",["code","Promise.reject"]," \u65F6\uFF0C\u53EA\u7528\u4E8E\u62E6\u622A\u4E0A\u4F20\u884C\u4E3A\uFF0C\u4E0D\u4F1A\u963B\u6B62\u6587\u4EF6\u8FDB\u5165\u4E0A\u4F20\u5217\u8868\uFF08",["a",{title:null,href:"https://github.com/ant-design/ant-design/issues/15561#issuecomment-475108235"},"\u539F\u56E0"],"\uFF09\u3002\u5982\u679C\u9700\u8981\u963B\u6B62\u5217\u8868\u5C55\u73B0\uFF0C\u53EF\u4EE5\u901A\u8FC7\u8FD4\u56DE ",["code","Upload.LIST_IGNORE"]," \u5B9E\u73B0\u3002"]],"en-US":[["p",["code","beforeUpload"]," only prevent upload behavior when return false or reject promise, the prevented file would still show in file list. Here is the example you can keep prevented files out of list by return ",["code","UPLOAD.LIST_IGNORE"],"."]]},meta:{order:7.1,title:{"zh-CN":"\u53EA\u4E0A\u4F20 png \u56FE\u7247","en-US":"Upload png file only"},filename:"components/upload/demo/upload-png-only.md",id:"components-upload-demo-upload-png-only"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:`import { UploadOutlined } from <span class="token string">'@ant-design/icons'</span><span class="token comment" spellcheck="true">;</span>
import type { UploadProps } from <span class="token string">'antd'</span><span class="token comment" spellcheck="true">;</span>
import { Button<span class="token punctuation">,</span> message<span class="token punctuation">,</span> Upload } from <span class="token string">'antd'</span><span class="token comment" spellcheck="true">;</span>
import React from <span class="token string">'react'</span><span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> props<span class="token punctuation">:</span> UploadProps <span class="token operator">=</span> {
  beforeUpload<span class="token punctuation">:</span> file <span class="token operator">=</span><span class="token operator">></span> {
    <span class="token keyword">const</span> isPNG <span class="token operator">=</span> file<span class="token punctuation">.</span>type <span class="token operator">==</span><span class="token operator">=</span> <span class="token string">'image/png'</span><span class="token comment" spellcheck="true">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>!isPNG<span class="token punctuation">)</span> {
      message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>\`\${file<span class="token punctuation">.</span>name} is <span class="token operator">not</span> a png file\`<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    }
    return isPNG || Upload<span class="token punctuation">.</span>LIST_IGNORE<span class="token comment" spellcheck="true">;</span>
  }<span class="token punctuation">,</span>
  onChange<span class="token punctuation">:</span> info <span class="token operator">=</span><span class="token operator">></span> {
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>fileList<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  }<span class="token punctuation">,</span>
}<span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>
  <span class="token operator">&lt;</span>Upload {<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>props}<span class="token operator">></span>
    <span class="token operator">&lt;</span>Button icon<span class="token operator">=</span>{<span class="token operator">&lt;</span>UploadOutlined <span class="token operator">/</span><span class="token operator">></span>}<span class="token operator">></span>Upload png only<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>Upload<span class="token operator">></span>
<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

export <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>`}],highlightedCodes:{tsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> UploadProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> message<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> props<span class="token operator">:</span> UploadProps <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">beforeUpload</span><span class="token operator">:</span> file <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> isPNG <span class="token operator">=</span> file<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">'image/png'</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isPNG<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>file<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> is not a png file</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> isPNG <span class="token operator">||</span> Upload<span class="token punctuation">.</span><span class="token constant">LIST_IGNORE</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">onChange</span><span class="token operator">:</span> info <span class="token operator">=></span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>fileList<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Upload png only<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>`,jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> message<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">beforeUpload</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> isPNG <span class="token operator">=</span> file<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">'image/png'</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isPNG<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>file<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> is not a png file</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> isPNG <span class="token operator">||</span> Upload<span class="token punctuation">.</span><span class="token constant">LIST_IGNORE</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">onChange</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">info</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>fileList<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>props<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Upload png only<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
`},preview:function(){var D=g(0),mn=g(41);J.default=void 0;var R=g(60),A=g(13),C=U(g(0));function U(O){return O&&O.__esModule?O:{default:O}}var N={beforeUpload:function(B){var X=B.type==="image/png";return X||A.message.error("".concat(B.name," is not a png file")),X||A.Upload.LIST_IGNORE},onChange:function(B){console.log(B.fileList)}},V=function(){return C.default.createElement(A.Upload,N,C.default.createElement(A.Button,{icon:C.default.createElement(R.UploadOutlined,null)},"Upload png only"))},Z;return D.createElement(V)}}},4810:function(Y,J,g){Y.exports={content:{"zh-CN":[["p","\u4F7F\u7528\u963F\u91CC\u4E91 OSS \u4E0A\u4F20\u793A\u4F8B."]],"en-US":[["p","Use Aliyun OSS upload example."]]},meta:{order:11,title:{"zh-CN":"\u963F\u91CC\u4E91 OSS","en-US":"Aliyun OSS"},filename:"components/upload/demo/upload-with-aliyun-oss.md",id:"components-upload-demo-upload-with-aliyun-oss"},toc:["ul",["li",["a",{className:"bisheng-toc-h2",href:"#zh-CN",title:"zh-CN"},"zh-CN"]],["li",["a",{className:"bisheng-toc-h2",href:"#en-US",title:"en-US"},"en-US"]]],highlightedCode:["pre",{lang:"tsx",highlighted:`import { UploadOutlined } from <span class="token string">'@ant-design/icons'</span><span class="token comment" spellcheck="true">;</span>
import type { UploadProps } from <span class="token string">'antd'</span><span class="token comment" spellcheck="true">;</span>
import { Button<span class="token punctuation">,</span> Form<span class="token punctuation">,</span> message<span class="token punctuation">,</span> Upload } from <span class="token string">'antd'</span><span class="token comment" spellcheck="true">;</span>
import type { UploadFile } from <span class="token string">'antd/es/upload/interface'</span><span class="token comment" spellcheck="true">;</span>
import React<span class="token punctuation">,</span> { useEffect<span class="token punctuation">,</span> useState } from <span class="token string">'react'</span><span class="token comment" spellcheck="true">;</span>

interface OSSDataType {
  dir<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  expire<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  host<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  accessId<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  policy<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
  signature<span class="token punctuation">:</span> string<span class="token comment" spellcheck="true">;</span>
}

interface AliyunOSSUploadProps {
  value<span class="token operator">?</span><span class="token punctuation">:</span> UploadFile<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token comment" spellcheck="true">;</span>
  onChange<span class="token operator">?</span><span class="token punctuation">:</span> <span class="token punctuation">(</span>fileList<span class="token punctuation">:</span> UploadFile<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> void<span class="token comment" spellcheck="true">;</span>
}

<span class="token keyword">const</span> AliyunOSSUpload <span class="token operator">=</span> <span class="token punctuation">(</span>{ value<span class="token punctuation">,</span> onChange }<span class="token punctuation">:</span> AliyunOSSUploadProps<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
  <span class="token keyword">const</span> <span class="token punctuation">[</span>OSSData<span class="token punctuation">,</span> setOSSData<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>OSSDataType<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

  <span class="token operator">/</span><span class="token operator">/</span> Mock get OSS api
  <span class="token operator">/</span><span class="token operator">/</span> https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>help<span class="token punctuation">.</span>aliyun<span class="token punctuation">.</span>com<span class="token operator">/</span>document_detail<span class="token operator">/</span><span class="token number">31988</span><span class="token punctuation">.</span>html
  <span class="token keyword">const</span> mockGetOSSData <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>{
    dir<span class="token punctuation">:</span> <span class="token string">'user-dir/'</span><span class="token punctuation">,</span>
    expire<span class="token punctuation">:</span> <span class="token string">'1577811661'</span><span class="token punctuation">,</span>
    host<span class="token punctuation">:</span> <span class="token string">'//www.mocky.io/v2/5cc8019d300000980a055e76'</span><span class="token punctuation">,</span>
    accessId<span class="token punctuation">:</span> <span class="token string">'c2hhb2RhaG9uZw=='</span><span class="token punctuation">,</span>
    policy<span class="token punctuation">:</span> <span class="token string">'eGl4aWhhaGFrdWt1ZGFkYQ=='</span><span class="token punctuation">,</span>
    signature<span class="token punctuation">:</span> <span class="token string">'ZGFob25nc2hhbw=='</span><span class="token punctuation">,</span>
  }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> init <span class="token operator">=</span> async <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
    try {
      <span class="token keyword">const</span> result <span class="token operator">=</span> await <span class="token function">mockGetOSSData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
      <span class="token function">setOSSData</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    } catch <span class="token punctuation">(</span>error<span class="token punctuation">)</span> {
      message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    }
  }<span class="token comment" spellcheck="true">;</span>

  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
    <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  }<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> handleChange<span class="token punctuation">:</span> UploadProps<span class="token punctuation">[</span><span class="token string">'onChange'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>{ fileList }<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Aliyun OSS:'</span><span class="token punctuation">,</span> fileList<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    onChange<span class="token operator">?</span><span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>fileList<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
  }<span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> onRemove <span class="token operator">=</span> <span class="token punctuation">(</span>file<span class="token punctuation">:</span> UploadFile<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> {
    <span class="token keyword">const</span> files <span class="token operator">=</span> <span class="token punctuation">(</span>value || <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>v <span class="token operator">=</span><span class="token operator">></span> v<span class="token punctuation">.</span>url !<span class="token operator">==</span> file<span class="token punctuation">.</span>url<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>onChange<span class="token punctuation">)</span> {
      <span class="token function">onChange</span><span class="token punctuation">(</span>files<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    }
  }<span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> getExtraData<span class="token punctuation">:</span> UploadProps<span class="token punctuation">[</span><span class="token string">'data'</span><span class="token punctuation">]</span> <span class="token operator">=</span> file <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>{
    key<span class="token punctuation">:</span> file<span class="token punctuation">.</span>url<span class="token punctuation">,</span>
    OSSAccessKeyId<span class="token punctuation">:</span> OSSData<span class="token operator">?</span><span class="token punctuation">.</span>accessId<span class="token punctuation">,</span>
    policy<span class="token punctuation">:</span> OSSData<span class="token operator">?</span><span class="token punctuation">.</span>policy<span class="token punctuation">,</span>
    Signature<span class="token punctuation">:</span> OSSData<span class="token operator">?</span><span class="token punctuation">.</span>signature<span class="token punctuation">,</span>
  }<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> beforeUpload<span class="token punctuation">:</span> UploadProps<span class="token punctuation">[</span><span class="token string">'beforeUpload'</span><span class="token punctuation">]</span> <span class="token operator">=</span> async file <span class="token operator">=</span><span class="token operator">></span> {
    <span class="token keyword">if</span> <span class="token punctuation">(</span>!OSSData<span class="token punctuation">)</span> return <span class="token boolean">false</span><span class="token comment" spellcheck="true">;</span>

    <span class="token keyword">const</span> expire <span class="token operator">=</span> <span class="token function">Number</span><span class="token punctuation">(</span>OSSData<span class="token punctuation">.</span>expire<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token comment" spellcheck="true">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>expire <span class="token operator">&lt;</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> {
      await <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    }

    <span class="token keyword">const</span> suffix <span class="token operator">=</span> file<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
    <span class="token keyword">const</span> filename <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> suffix<span class="token comment" spellcheck="true">;</span>
    <span class="token operator">/</span><span class="token operator">/</span> <span class="token variable">@ts</span><span class="token operator">-</span>ignore
    file<span class="token punctuation">.</span>url <span class="token operator">=</span> OSSData<span class="token punctuation">.</span>dir <span class="token operator">+</span> filename<span class="token comment" spellcheck="true">;</span>

    return file<span class="token comment" spellcheck="true">;</span>
  }<span class="token comment" spellcheck="true">;</span>

  <span class="token keyword">const</span> uploadProps<span class="token punctuation">:</span> UploadProps <span class="token operator">=</span> {
    name<span class="token punctuation">:</span> <span class="token string">'file'</span><span class="token punctuation">,</span>
    fileList<span class="token punctuation">:</span> value<span class="token punctuation">,</span>
    action<span class="token punctuation">:</span> OSSData<span class="token operator">?</span><span class="token punctuation">.</span>host<span class="token punctuation">,</span>
    onChange<span class="token punctuation">:</span> handleChange<span class="token punctuation">,</span>
    onRemove<span class="token punctuation">,</span>
    data<span class="token punctuation">:</span> getExtraData<span class="token punctuation">,</span>
    beforeUpload<span class="token punctuation">,</span>
  }<span class="token comment" spellcheck="true">;</span>

  return <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>Upload {<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>uploadProps}<span class="token operator">></span>
      <span class="token operator">&lt;</span>Button icon<span class="token operator">=</span>{<span class="token operator">&lt;</span>UploadOutlined <span class="token operator">/</span><span class="token operator">></span>}<span class="token operator">></span>Click <span class="token keyword">to</span> Upload<span class="token operator">&lt;</span><span class="token operator">/</span>Button<span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>Upload<span class="token operator">></span>
  <span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>
}<span class="token comment" spellcheck="true">;</span>

<span class="token keyword">const</span> App<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>
  <span class="token operator">&lt;</span>Form labelCol<span class="token operator">=</span>{{ span<span class="token punctuation">:</span> <span class="token number">4</span> }}<span class="token operator">></span>
    <span class="token operator">&lt;</span>Form<span class="token punctuation">.</span>Item label<span class="token operator">=</span><span class="token string">"Photos"</span> name<span class="token operator">=</span><span class="token string">"photos"</span><span class="token operator">></span>
      <span class="token operator">&lt;</span>AliyunOSSUpload <span class="token operator">/</span><span class="token operator">></span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>Form<span class="token punctuation">.</span>Item<span class="token operator">></span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>Form<span class="token operator">></span>
<span class="token punctuation">)</span><span class="token comment" spellcheck="true">;</span>

export <span class="token keyword">default</span> App<span class="token comment" spellcheck="true">;</span>`}],highlightedCodes:{tsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> UploadProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Form<span class="token punctuation">,</span> message<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> type <span class="token punctuation">{</span> UploadFile <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd/es/upload/interface'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useEffect<span class="token punctuation">,</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>

<span class="token keyword">interface</span> <span class="token class-name">OSSDataType</span> <span class="token punctuation">{</span>
  dir<span class="token operator">:</span> string<span class="token punctuation">;</span>
  expire<span class="token operator">:</span> string<span class="token punctuation">;</span>
  host<span class="token operator">:</span> string<span class="token punctuation">;</span>
  accessId<span class="token operator">:</span> string<span class="token punctuation">;</span>
  policy<span class="token operator">:</span> string<span class="token punctuation">;</span>
  signature<span class="token operator">:</span> string<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">interface</span> <span class="token class-name">AliyunOSSUploadProps</span> <span class="token punctuation">{</span>
  value<span class="token operator">?</span><span class="token operator">:</span> UploadFile<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  onChange<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span>fileList<span class="token operator">:</span> UploadFile<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">void</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">AliyunOSSUpload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> value<span class="token punctuation">,</span> onChange <span class="token punctuation">}</span><span class="token operator">:</span> AliyunOSSUploadProps<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>OSSData<span class="token punctuation">,</span> setOSSData<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token operator">&lt;</span>OSSDataType<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// Mock get OSS api</span>
  <span class="token comment">// https://help.aliyun.com/document_detail/31988.html</span>
  <span class="token keyword">const</span> <span class="token function-variable function">mockGetOSSData</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
    dir<span class="token operator">:</span> <span class="token string">'user-dir/'</span><span class="token punctuation">,</span>
    expire<span class="token operator">:</span> <span class="token string">'1577811661'</span><span class="token punctuation">,</span>
    host<span class="token operator">:</span> <span class="token string">'//www.mocky.io/v2/5cc8019d300000980a055e76'</span><span class="token punctuation">,</span>
    accessId<span class="token operator">:</span> <span class="token string">'c2hhb2RhaG9uZw=='</span><span class="token punctuation">,</span>
    policy<span class="token operator">:</span> <span class="token string">'eGl4aWhhaGFrdWt1ZGFkYQ=='</span><span class="token punctuation">,</span>
    signature<span class="token operator">:</span> <span class="token string">'ZGFob25nc2hhbw=='</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">init</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">mockGetOSSData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">setOSSData</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> handleChange<span class="token operator">:</span> UploadProps<span class="token punctuation">[</span><span class="token string">'onChange'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> fileList <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Aliyun OSS:'</span><span class="token punctuation">,</span> fileList<span class="token punctuation">)</span><span class="token punctuation">;</span>
    onChange<span class="token operator">?.</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>fileList<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">onRemove</span> <span class="token operator">=</span> <span class="token punctuation">(</span>file<span class="token operator">:</span> UploadFile<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> files <span class="token operator">=</span> <span class="token punctuation">(</span>value <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>v <span class="token operator">=></span> v<span class="token punctuation">.</span>url <span class="token operator">!==</span> file<span class="token punctuation">.</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>onChange<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">onChange</span><span class="token punctuation">(</span>files<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> getExtraData<span class="token operator">:</span> UploadProps<span class="token punctuation">[</span><span class="token string">'data'</span><span class="token punctuation">]</span> <span class="token operator">=</span> file <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
    key<span class="token operator">:</span> file<span class="token punctuation">.</span>url<span class="token punctuation">,</span>
    OSSAccessKeyId<span class="token operator">:</span> OSSData<span class="token operator">?.</span>accessId<span class="token punctuation">,</span>
    policy<span class="token operator">:</span> OSSData<span class="token operator">?.</span>policy<span class="token punctuation">,</span>
    Signature<span class="token operator">:</span> OSSData<span class="token operator">?.</span>signature<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> beforeUpload<span class="token operator">:</span> UploadProps<span class="token punctuation">[</span><span class="token string">'beforeUpload'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">async</span> file <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>OSSData<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> expire <span class="token operator">=</span> <span class="token function">Number</span><span class="token punctuation">(</span>OSSData<span class="token punctuation">.</span>expire<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>expire <span class="token operator">&lt;</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">await</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">const</span> suffix <span class="token operator">=</span> file<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> filename <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> suffix<span class="token punctuation">;</span>
    <span class="token comment">// @ts-ignore</span>
    file<span class="token punctuation">.</span>url <span class="token operator">=</span> OSSData<span class="token punctuation">.</span>dir <span class="token operator">+</span> filename<span class="token punctuation">;</span>

    <span class="token keyword">return</span> file<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> uploadProps<span class="token operator">:</span> UploadProps <span class="token operator">=</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token string">'file'</span><span class="token punctuation">,</span>
    fileList<span class="token operator">:</span> value<span class="token punctuation">,</span>
    action<span class="token operator">:</span> OSSData<span class="token operator">?.</span>host<span class="token punctuation">,</span>
    onChange<span class="token operator">:</span> handleChange<span class="token punctuation">,</span>
    onRemove<span class="token punctuation">,</span>
    data<span class="token operator">:</span> getExtraData<span class="token punctuation">,</span>
    beforeUpload<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>uploadProps<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Click to Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> App<span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form</span></span> <span class="token attr-name">labelCol</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> span<span class="token operator">:</span> <span class="token number">4</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form.Item</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Photos<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>photos<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">AliyunOSSUpload</span></span> <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form.Item</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form</span></span><span class="token punctuation">></span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>`,jsx:`<span class="token keyword">import</span> <span class="token punctuation">{</span> UploadOutlined <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@ant-design/icons'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Button<span class="token punctuation">,</span> Form<span class="token punctuation">,</span> message<span class="token punctuation">,</span> Upload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'antd'</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useEffect<span class="token punctuation">,</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'react'</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">AliyunOSSUpload</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> value<span class="token punctuation">,</span> onChange <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>OSSData<span class="token punctuation">,</span> setOSSData<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// Mock get OSS api</span>
  <span class="token comment">// https://help.aliyun.com/document_detail/31988.html</span>
  <span class="token keyword">const</span> <span class="token function-variable function">mockGetOSSData</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">dir</span><span class="token operator">:</span> <span class="token string">'user-dir/'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">expire</span><span class="token operator">:</span> <span class="token string">'1577811661'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">host</span><span class="token operator">:</span> <span class="token string">'//www.mocky.io/v2/5cc8019d300000980a055e76'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">accessId</span><span class="token operator">:</span> <span class="token string">'c2hhb2RhaG9uZw=='</span><span class="token punctuation">,</span>
    <span class="token literal-property property">policy</span><span class="token operator">:</span> <span class="token string">'eGl4aWhhaGFrdWt1ZGFkYQ=='</span><span class="token punctuation">,</span>
    <span class="token literal-property property">signature</span><span class="token operator">:</span> <span class="token string">'ZGFob25nc2hhbw=='</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token function-variable function">init</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">mockGetOSSData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">setOSSData</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token function-variable function">handleChange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> fileList <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Aliyun OSS:'</span><span class="token punctuation">,</span> fileList<span class="token punctuation">)</span><span class="token punctuation">;</span>
    onChange<span class="token operator">?.</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>fileList<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token function-variable function">onRemove</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> files <span class="token operator">=</span> <span class="token punctuation">(</span>value <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">v</span><span class="token punctuation">)</span> <span class="token operator">=></span> v<span class="token punctuation">.</span>url <span class="token operator">!==</span> file<span class="token punctuation">.</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>onChange<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">onChange</span><span class="token punctuation">(</span>files<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token function-variable function">getExtraData</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">key</span><span class="token operator">:</span> file<span class="token punctuation">.</span>url<span class="token punctuation">,</span>
    <span class="token literal-property property">OSSAccessKeyId</span><span class="token operator">:</span> OSSData<span class="token operator">?.</span>accessId<span class="token punctuation">,</span>
    <span class="token literal-property property">policy</span><span class="token operator">:</span> OSSData<span class="token operator">?.</span>policy<span class="token punctuation">,</span>
    <span class="token literal-property property">Signature</span><span class="token operator">:</span> OSSData<span class="token operator">?.</span>signature<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token function-variable function">beforeUpload</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">file</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>OSSData<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> expire <span class="token operator">=</span> <span class="token function">Number</span><span class="token punctuation">(</span>OSSData<span class="token punctuation">.</span>expire<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>expire <span class="token operator">&lt;</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">await</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> suffix <span class="token operator">=</span> file<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> filename <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> suffix<span class="token punctuation">;</span>
    <span class="token comment">// @ts-ignore</span>
    file<span class="token punctuation">.</span>url <span class="token operator">=</span> OSSData<span class="token punctuation">.</span>dir <span class="token operator">+</span> filename<span class="token punctuation">;</span>
    <span class="token keyword">return</span> file<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> uploadProps <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'file'</span><span class="token punctuation">,</span>
    <span class="token literal-property property">fileList</span><span class="token operator">:</span> value<span class="token punctuation">,</span>
    <span class="token literal-property property">action</span><span class="token operator">:</span> OSSData<span class="token operator">?.</span>host<span class="token punctuation">,</span>
    <span class="token literal-property property">onChange</span><span class="token operator">:</span> handleChange<span class="token punctuation">,</span>
    onRemove<span class="token punctuation">,</span>
    <span class="token literal-property property">data</span><span class="token operator">:</span> getExtraData<span class="token punctuation">,</span>
    beforeUpload<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Upload</span></span> <span class="token spread"><span class="token punctuation">{</span><span class="token operator">...</span>uploadProps<span class="token punctuation">}</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token attr-name">icon</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">UploadOutlined</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Click to Upload<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Upload</span></span><span class="token punctuation">></span></span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">App</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form</span></span>
    <span class="token attr-name">labelCol</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>
      <span class="token literal-property property">span</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
  <span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Form.Item</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Photos<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>photos<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">AliyunOSSUpload</span></span> <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form.Item</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Form</span></span><span class="token punctuation">></span></span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> App<span class="token punctuation">;</span>
`},preview:function(){var D=g(0),mn=g(41);function R(o){return R=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(d){return typeof d}:function(d){return d&&typeof Symbol=="function"&&d.constructor===Symbol&&d!==Symbol.prototype?"symbol":typeof d},R(o)}J.default=void 0;var A=g(60),C=g(13),U=V(g(0));function N(o){if(typeof WeakMap!="function")return null;var d=new WeakMap,m=new WeakMap;return(N=function(S){return S?m:d})(o)}function V(o,d){if(!d&&o&&o.__esModule)return o;if(o===null||R(o)!="object"&&typeof o!="function")return{default:o};var m=N(d);if(m&&m.has(o))return m.get(o);var b={__proto__:null},S=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var x in o)if(x!=="default"&&Object.prototype.hasOwnProperty.call(o,x)){var j=S?Object.getOwnPropertyDescriptor(o,x):null;j&&(j.get||j.set)?Object.defineProperty(b,x,j):b[x]=o[x]}return b.default=o,m&&m.set(o,b),b}function Z(o){return X(o)||B(o)||kn(o)||O()}function O(){throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function B(o){if(typeof Symbol!="undefined"&&o[Symbol.iterator]!=null||o["@@iterator"]!=null)return Array.from(o)}function X(o){if(Array.isArray(o))return F(o)}function M(){"use strict";/*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */M=function(){return d};var o,d={},m=Object.prototype,b=m.hasOwnProperty,S=Object.defineProperty||function(r,c,h){r[c]=h.value},x=typeof Symbol=="function"?Symbol:{},j=x.iterator||"@@iterator",G=x.asyncIterator||"@@asyncIterator",K=x.toStringTag||"@@toStringTag";function ln(r,c,h){return Object.defineProperty(r,c,{value:h,enumerable:!0,configurable:!0,writable:!0}),r[c]}try{ln({},"")}catch(r){ln=function(h,P,E){return h[P]=E}}function fn(r,c,h,P){var E=c&&c.prototype instanceof tn?c:tn,z=Object.create(E.prototype),Q=new e(P||[]);return S(z,"_invoke",{value:Tn(r,h,Q)}),z}function yn(r,c,h){try{return{type:"normal",arg:r.call(c,h)}}catch(P){return{type:"throw",arg:P}}}d.wrap=fn;var nn="suspendedStart",Un="suspendedYield",hn="executing",_="completed",H={};function tn(){}function pn(){}function W(){}var Pn={};ln(Pn,j,function(){return this});var gn=Object.getPrototypeOf,xn=gn&&gn(gn(y([])));xn&&xn!==m&&b.call(xn,j)&&(Pn=xn);var Ln=W.prototype=tn.prototype=Object.create(Pn);function $n(r){["next","throw","return"].forEach(function(c){ln(r,c,function(h){return this._invoke(c,h)})})}function jn(r,c){function h(E,z,Q,en){var vn=yn(r[E],r,z);if(vn.type!=="throw"){var Jn=vn.arg,Bn=Jn.value;return Bn&&R(Bn)=="object"&&b.call(Bn,"__await")?c.resolve(Bn.__await).then(function(Zn){h("next",Zn,Q,en)},function(Zn){h("throw",Zn,Q,en)}):c.resolve(Bn).then(function(Zn){Jn.value=Zn,Q(Jn)},function(Zn){return h("throw",Zn,Q,en)})}en(vn.arg)}var P;S(this,"_invoke",{value:function(z,Q){function en(){return new c(function(vn,Jn){h(z,Q,vn,Jn)})}return P=P?P.then(en,en):en()}})}function Tn(r,c,h){var P=nn;return function(E,z){if(P===hn)throw new Error("Generator is already running");if(P===_){if(E==="throw")throw z;return{value:o,done:!0}}for(h.method=E,h.arg=z;;){var Q=h.delegate;if(Q){var en=Fn(Q,h);if(en){if(en===H)continue;return en}}if(h.method==="next")h.sent=h._sent=h.arg;else if(h.method==="throw"){if(P===nn)throw P=_,h.arg;h.dispatchException(h.arg)}else h.method==="return"&&h.abrupt("return",h.arg);P=hn;var vn=yn(r,c,h);if(vn.type==="normal"){if(P=h.done?_:Un,vn.arg===H)continue;return{value:vn.arg,done:h.done}}vn.type==="throw"&&(P=_,h.method="throw",h.arg=vn.arg)}}}function Fn(r,c){var h=c.method,P=r.iterator[h];if(P===o)return c.delegate=null,h==="throw"&&r.iterator.return&&(c.method="return",c.arg=o,Fn(r,c),c.method==="throw")||h!=="return"&&(c.method="throw",c.arg=new TypeError("The iterator does not provide a '"+h+"' method")),H;var E=yn(P,r.iterator,c.arg);if(E.type==="throw")return c.method="throw",c.arg=E.arg,c.delegate=null,H;var z=E.arg;return z?z.done?(c[r.resultName]=z.value,c.next=r.nextLoc,c.method!=="return"&&(c.method="next",c.arg=o),c.delegate=null,H):z:(c.method="throw",c.arg=new TypeError("iterator result is not an object"),c.delegate=null,H)}function i(r){var c={tryLoc:r[0]};1 in r&&(c.catchLoc=r[1]),2 in r&&(c.finallyLoc=r[2],c.afterLoc=r[3]),this.tryEntries.push(c)}function p(r){var c=r.completion||{};c.type="normal",delete c.arg,r.completion=c}function e(r){this.tryEntries=[{tryLoc:"root"}],r.forEach(i,this),this.reset(!0)}function y(r){if(r||r===""){var c=r[j];if(c)return c.call(r);if(typeof r.next=="function")return r;if(!isNaN(r.length)){var h=-1,P=function E(){for(;++h<r.length;)if(b.call(r,h))return E.value=r[h],E.done=!1,E;return E.value=o,E.done=!0,E};return P.next=P}}throw new TypeError(R(r)+" is not iterable")}return pn.prototype=W,S(Ln,"constructor",{value:W,configurable:!0}),S(W,"constructor",{value:pn,configurable:!0}),pn.displayName=ln(W,K,"GeneratorFunction"),d.isGeneratorFunction=function(r){var c=typeof r=="function"&&r.constructor;return!!c&&(c===pn||(c.displayName||c.name)==="GeneratorFunction")},d.mark=function(r){return Object.setPrototypeOf?Object.setPrototypeOf(r,W):(r.__proto__=W,ln(r,K,"GeneratorFunction")),r.prototype=Object.create(Ln),r},d.awrap=function(r){return{__await:r}},$n(jn.prototype),ln(jn.prototype,G,function(){return this}),d.AsyncIterator=jn,d.async=function(r,c,h,P,E){E===void 0&&(E=Promise);var z=new jn(fn(r,c,h,P),E);return d.isGeneratorFunction(c)?z:z.next().then(function(Q){return Q.done?Q.value:z.next()})},$n(Ln),ln(Ln,K,"Generator"),ln(Ln,j,function(){return this}),ln(Ln,"toString",function(){return"[object Generator]"}),d.keys=function(r){var c=Object(r),h=[];for(var P in c)h.push(P);return h.reverse(),function E(){for(;h.length;){var z=h.pop();if(z in c)return E.value=z,E.done=!1,E}return E.done=!0,E}},d.values=y,e.prototype={constructor:e,reset:function(c){if(this.prev=0,this.next=0,this.sent=this._sent=o,this.done=!1,this.delegate=null,this.method="next",this.arg=o,this.tryEntries.forEach(p),!c)for(var h in this)h.charAt(0)==="t"&&b.call(this,h)&&!isNaN(+h.slice(1))&&(this[h]=o)},stop:function(){this.done=!0;var c=this.tryEntries[0].completion;if(c.type==="throw")throw c.arg;return this.rval},dispatchException:function(c){if(this.done)throw c;var h=this;function P(Jn,Bn){return Q.type="throw",Q.arg=c,h.next=Jn,Bn&&(h.method="next",h.arg=o),!!Bn}for(var E=this.tryEntries.length-1;E>=0;--E){var z=this.tryEntries[E],Q=z.completion;if(z.tryLoc==="root")return P("end");if(z.tryLoc<=this.prev){var en=b.call(z,"catchLoc"),vn=b.call(z,"finallyLoc");if(en&&vn){if(this.prev<z.catchLoc)return P(z.catchLoc,!0);if(this.prev<z.finallyLoc)return P(z.finallyLoc)}else if(en){if(this.prev<z.catchLoc)return P(z.catchLoc,!0)}else{if(!vn)throw new Error("try statement without catch or finally");if(this.prev<z.finallyLoc)return P(z.finallyLoc)}}}},abrupt:function(c,h){for(var P=this.tryEntries.length-1;P>=0;--P){var E=this.tryEntries[P];if(E.tryLoc<=this.prev&&b.call(E,"finallyLoc")&&this.prev<E.finallyLoc){var z=E;break}}z&&(c==="break"||c==="continue")&&z.tryLoc<=h&&h<=z.finallyLoc&&(z=null);var Q=z?z.completion:{};return Q.type=c,Q.arg=h,z?(this.method="next",this.next=z.finallyLoc,H):this.complete(Q)},complete:function(c,h){if(c.type==="throw")throw c.arg;return c.type==="break"||c.type==="continue"?this.next=c.arg:c.type==="return"?(this.rval=this.arg=c.arg,this.method="return",this.next="end"):c.type==="normal"&&h&&(this.next=h),H},finish:function(c){for(var h=this.tryEntries.length-1;h>=0;--h){var P=this.tryEntries[h];if(P.finallyLoc===c)return this.complete(P.completion,P.afterLoc),p(P),H}},catch:function(c){for(var h=this.tryEntries.length-1;h>=0;--h){var P=this.tryEntries[h];if(P.tryLoc===c){var E=P.completion;if(E.type==="throw"){var z=E.arg;p(P)}return z}}throw new Error("illegal catch attempt")},delegateYield:function(c,h,P){return this.delegate={iterator:y(c),resultName:h,nextLoc:P},this.method==="next"&&(this.arg=o),H}},d}function un(o,d,m,b,S,x,j){try{var G=o[x](j),K=G.value}catch(ln){m(ln);return}G.done?d(K):Promise.resolve(K).then(b,S)}function sn(o){return function(){var d=this,m=arguments;return new Promise(function(b,S){var x=o.apply(d,m);function j(K){un(x,b,S,j,G,"next",K)}function G(K){un(x,b,S,j,G,"throw",K)}j(void 0)})}}function rn(o,d){return t(o)||q(o,d)||kn(o,d)||cn()}function cn(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function kn(o,d){if(o){if(typeof o=="string")return F(o,d);var m=Object.prototype.toString.call(o).slice(8,-1);if(m==="Object"&&o.constructor&&(m=o.constructor.name),m==="Map"||m==="Set")return Array.from(o);if(m==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(m))return F(o,d)}}function F(o,d){(d==null||d>o.length)&&(d=o.length);for(var m=0,b=new Array(d);m<d;m++)b[m]=o[m];return b}function q(o,d){var m=o==null?null:typeof Symbol!="undefined"&&o[Symbol.iterator]||o["@@iterator"];if(m!=null){var b,S,x,j,G=[],K=!0,ln=!1;try{if(x=(m=m.call(o)).next,d===0){if(Object(m)!==m)return;K=!1}else for(;!(K=(b=x.call(m)).done)&&(G.push(b.value),G.length!==d);K=!0);}catch(fn){ln=!0,S=fn}finally{try{if(!K&&m.return!=null&&(j=m.return(),Object(j)!==j))return}finally{if(ln)throw S}}return G}}function t(o){if(Array.isArray(o))return o}var s=function(d){var m=d.value,b=d.onChange,S=(0,U.useState)(),x=rn(S,2),j=x[0],G=x[1],K=function(){return{dir:"user-dir/",expire:"1577811661",host:"//www.mocky.io/v2/5cc8019d300000980a055e76",accessId:"c2hhb2RhaG9uZw==",policy:"eGl4aWhhaGFrdWt1ZGFkYQ==",signature:"ZGFob25nc2hhbw=="}},ln=function(){var _=sn(M().mark(function H(){var tn;return M().wrap(function(W){for(;;)switch(W.prev=W.next){case 0:return W.prev=0,W.next=3,K();case 3:tn=W.sent,G(tn),W.next=10;break;case 7:W.prev=7,W.t0=W.catch(0),C.message.error(W.t0);case 10:case"end":return W.stop()}},H,null,[[0,7]])}));return function(){return _.apply(this,arguments)}}();(0,U.useEffect)(function(){ln()},[]);var fn=function(H){var tn=H.fileList;console.log("Aliyun OSS:",tn),b==null||b(Z(tn))},yn=function(H){var tn=(m||[]).filter(function(pn){return pn.url!==H.url});b&&b(tn)},nn=function(H){return{key:H.url,OSSAccessKeyId:j==null?void 0:j.accessId,policy:j==null?void 0:j.policy,Signature:j==null?void 0:j.signature}},Un=function(){var _=sn(M().mark(function H(tn){var pn,W,Pn;return M().wrap(function(xn){for(;;)switch(xn.prev=xn.next){case 0:if(j){xn.next=2;break}return xn.abrupt("return",!1);case 2:if(pn=Number(j.expire)*1e3,!(pn<Date.now())){xn.next=6;break}return xn.next=6,ln();case 6:return W=tn.name.slice(tn.name.lastIndexOf(".")),Pn=Date.now()+W,tn.url=j.dir+Pn,xn.abrupt("return",tn);case 10:case"end":return xn.stop()}},H)}));return function(tn){return _.apply(this,arguments)}}(),hn={name:"file",fileList:m,action:j==null?void 0:j.host,onChange:fn,onRemove:yn,data:nn,beforeUpload:Un};return U.default.createElement(C.Upload,hn,U.default.createElement(C.Button,{icon:U.default.createElement(A.UploadOutlined,null)},"Click to Upload"))},a=function(){return U.default.createElement(C.Form,{labelCol:{span:4}},U.default.createElement(C.Form.Item,{label:"Photos",name:"photos"},U.default.createElement(s,null)))},u;return D.createElement(a)}}},4857:function(Y,J,g){"use strict";g.r(J),g.d(J,"default",function(){return Ts});var on=g(22),D=g(4072),mn=g(13),R=g(376),A=g(488);const C=/^[v^~<>=]*?(\d+)(?:\.([x*]|\d+)(?:\.([x*]|\d+)(?:\.([x*]|\d+))?(?:-([\da-z\-]+(?:\.[\da-z\-]+)*))?(?:\+[\da-z\-]+(?:\.[\da-z\-]+)*)?)?)?$/i,U=k=>{if(typeof k!="string")throw new TypeError("Invalid argument expected string");const f=k.match(C);if(!f)throw new Error(`Invalid argument not valid semver ('${k}' received)`);return f.shift(),f},N=k=>k==="*"||k==="x"||k==="X",V=k=>{const f=parseInt(k,10);return isNaN(f)?k:f},Z=(k,f)=>typeof k!=typeof f?[String(k),String(f)]:[k,f],O=(k,f)=>{if(N(k)||N(f))return 0;const[n,l]=Z(V(k),V(f));return n>l?1:n<l?-1:0},B=(k,f)=>{for(let n=0;n<Math.max(k.length,f.length);n++){const l=O(k[n]||"0",f[n]||"0");if(l!==0)return l}return 0},X=(k,f)=>{const n=U(k),l=U(f),w=n.pop(),v=l.pop(),L=B(n,l);return L!==0?L:w&&v?B(w.split("."),v.split(".")):w||v?w?-1:1:0};var M=g(0),un=g.n(M),sn=g(61),rn=g(487);/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */var cn=function(k,f){return cn=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,l){n.__proto__=l}||function(n,l){for(var w in l)Object.prototype.hasOwnProperty.call(l,w)&&(n[w]=l[w])},cn(k,f)};function kn(k,f){cn(k,f);function n(){this.constructor=k}k.prototype=f===null?Object.create(f):(n.prototype=f.prototype,new n)}var F=function(){return F=Object.assign||function(f){for(var n,l=1,w=arguments.length;l<w;l++){n=arguments[l];for(var v in n)Object.prototype.hasOwnProperty.call(n,v)&&(f[v]=n[v])}return f},F.apply(this,arguments)};function q(k,f){var n={};for(var l in k)Object.prototype.hasOwnProperty.call(k,l)&&f.indexOf(l)<0&&(n[l]=k[l]);if(k!=null&&typeof Object.getOwnPropertySymbols=="function")for(var w=0,l=Object.getOwnPropertySymbols(k);w<l.length;w++)f.indexOf(l[w])<0&&Object.prototype.propertyIsEnumerable.call(k,l[w])&&(n[l[w]]=k[l[w]]);return n}function t(k,f,n,l){var w=arguments.length,v=w<3?f:l===null?l=Object.getOwnPropertyDescriptor(f,n):l,L;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")v=Reflect.decorate(k,f,n,l);else for(var T=k.length-1;T>=0;T--)(L=k[T])&&(v=(w<3?L(v):w>3?L(f,n,v):L(f,n))||v);return w>3&&v&&Object.defineProperty(f,n,v),v}function s(k,f){return function(n,l){f(n,l,k)}}function a(k,f){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(k,f)}function u(k,f,n,l){function w(v){return v instanceof n?v:new n(function(L){L(v)})}return new(n||(n=Promise))(function(v,L){function T(an){try{I(l.next(an))}catch(wn){L(wn)}}function $(an){try{I(l.throw(an))}catch(wn){L(wn)}}function I(an){an.done?v(an.value):w(an.value).then(T,$)}I((l=l.apply(k,f||[])).next())})}function o(k,f){var n={label:0,sent:function(){if(v[0]&1)throw v[1];return v[1]},trys:[],ops:[]},l,w,v,L;return L={next:T(0),throw:T(1),return:T(2)},typeof Symbol=="function"&&(L[Symbol.iterator]=function(){return this}),L;function T(I){return function(an){return $([I,an])}}function $(I){if(l)throw new TypeError("Generator is already executing.");for(;n;)try{if(l=1,w&&(v=I[0]&2?w.return:I[0]?w.throw||((v=w.return)&&v.call(w),0):w.next)&&!(v=v.call(w,I[1])).done)return v;switch(w=0,v&&(I=[I[0]&2,v.value]),I[0]){case 0:case 1:v=I;break;case 4:return n.label++,{value:I[1],done:!1};case 5:n.label++,w=I[1],I=[0];continue;case 7:I=n.ops.pop(),n.trys.pop();continue;default:if(v=n.trys,!(v=v.length>0&&v[v.length-1])&&(I[0]===6||I[0]===2)){n=0;continue}if(I[0]===3&&(!v||I[1]>v[0]&&I[1]<v[3])){n.label=I[1];break}if(I[0]===6&&n.label<v[1]){n.label=v[1],v=I;break}if(v&&n.label<v[2]){n.label=v[2],n.ops.push(I);break}v[2]&&n.ops.pop(),n.trys.pop();continue}I=f.call(k,n)}catch(an){I=[6,an],w=0}finally{l=v=0}if(I[0]&5)throw I[1];return{value:I[0]?I[1]:void 0,done:!0}}}var d=Object.create?function(k,f,n,l){l===void 0&&(l=n),Object.defineProperty(k,l,{enumerable:!0,get:function(){return f[n]}})}:function(k,f,n,l){l===void 0&&(l=n),k[l]=f[n]};function m(k,f){for(var n in k)n!=="default"&&!Object.prototype.hasOwnProperty.call(f,n)&&d(f,k,n)}function b(k){var f=typeof Symbol=="function"&&Symbol.iterator,n=f&&k[f],l=0;if(n)return n.call(k);if(k&&typeof k.length=="number")return{next:function(){return k&&l>=k.length&&(k=void 0),{value:k&&k[l++],done:!k}}};throw new TypeError(f?"Object is not iterable.":"Symbol.iterator is not defined.")}function S(k,f){var n=typeof Symbol=="function"&&k[Symbol.iterator];if(!n)return k;var l=n.call(k),w,v=[],L;try{for(;(f===void 0||f-- >0)&&!(w=l.next()).done;)v.push(w.value)}catch(T){L={error:T}}finally{try{w&&!w.done&&(n=l.return)&&n.call(l)}finally{if(L)throw L.error}}return v}function x(){for(var k=[],f=0;f<arguments.length;f++)k=k.concat(S(arguments[f]));return k}function j(){for(var k=0,f=0,n=arguments.length;f<n;f++)k+=arguments[f].length;for(var l=Array(k),w=0,f=0;f<n;f++)for(var v=arguments[f],L=0,T=v.length;L<T;L++,w++)l[w]=v[L];return l}function G(k){return this instanceof G?(this.v=k,this):new G(k)}function K(k,f,n){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var l=n.apply(k,f||[]),w,v=[];return w={},L("next"),L("throw"),L("return"),w[Symbol.asyncIterator]=function(){return this},w;function L(dn){l[dn]&&(w[dn]=function(Rn){return new Promise(function(On,bn){v.push([dn,Rn,On,bn])>1||T(dn,Rn)})})}function T(dn,Rn){try{$(l[dn](Rn))}catch(On){wn(v[0][3],On)}}function $(dn){dn.value instanceof G?Promise.resolve(dn.value.v).then(I,an):wn(v[0][2],dn)}function I(dn){T("next",dn)}function an(dn){T("throw",dn)}function wn(dn,Rn){dn(Rn),v.shift(),v.length&&T(v[0][0],v[0][1])}}function ln(k){var f,n;return f={},l("next"),l("throw",function(w){throw w}),l("return"),f[Symbol.iterator]=function(){return this},f;function l(w,v){f[w]=k[w]?function(L){return(n=!n)?{value:G(k[w](L)),done:w==="return"}:v?v(L):L}:v}}function fn(k){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var f=k[Symbol.asyncIterator],n;return f?f.call(k):(k=typeof b=="function"?b(k):k[Symbol.iterator](),n={},l("next"),l("throw"),l("return"),n[Symbol.asyncIterator]=function(){return this},n);function l(v){n[v]=k[v]&&function(L){return new Promise(function(T,$){L=k[v](L),w(T,$,L.done,L.value)})}}function w(v,L,T,$){Promise.resolve($).then(function(I){v({value:I,done:T})},L)}}function yn(k,f){return Object.defineProperty?Object.defineProperty(k,"raw",{value:f}):k.raw=f,k}var nn=Object.create?function(k,f){Object.defineProperty(k,"default",{enumerable:!0,value:f})}:function(k,f){k.default=f};function Un(k){if(k&&k.__esModule)return k;var f={};if(k!=null)for(var n in k)n!=="default"&&Object.prototype.hasOwnProperty.call(k,n)&&d(f,k,n);return nn(f,k),f}function hn(k){return k&&k.__esModule?k:{default:k}}function _(k,f){if(!f.has(k))throw new TypeError("attempted to get private field on non-instance");return f.get(k)}function H(k,f,n){if(!f.has(k))throw new TypeError("attempted to set private field on non-instance");return f.set(k,n),n}var tn=g(4790),pn=g.n(tn);function W(k,f,n,l,w,v){v===void 0&&(v=0);var L=c(k,f,v),T=L.width,$=L.height,I=Math.min(T,n),an=Math.min($,l);return I>an*w?{width:an*w,height:an}:{width:I,height:I/w}}function Pn(k){return k.width>k.height?k.width/k.naturalWidth:k.height/k.naturalHeight}function gn(k,f,n,l,w){w===void 0&&(w=0);var v=c(f.width,f.height,w),L=v.width,T=v.height;return{x:xn(k.x,L,n.width,l),y:xn(k.y,T,n.height,l)}}function xn(k,f,n,l){var w=f*l/2-n/2;return h(k,-w,w)}function Ln(k,f){return Math.sqrt(Math.pow(k.y-f.y,2)+Math.pow(k.x-f.x,2))}function $n(k,f){return Math.atan2(f.y-k.y,f.x-k.x)*180/Math.PI}function jn(k,f,n,l,w,v,L){v===void 0&&(v=0),L===void 0&&(L=!0);var T=L?Tn:Fn,$=c(f.width,f.height,v),I=c(f.naturalWidth,f.naturalHeight,v),an={x:T(100,(($.width-n.width/w)/2-k.x/w)/$.width*100),y:T(100,(($.height-n.height/w)/2-k.y/w)/$.height*100),width:T(100,n.width/$.width*100/w),height:T(100,n.height/$.height*100/w)},wn=Math.round(T(I.width,an.width*I.width/100)),dn=Math.round(T(I.height,an.height*I.height/100)),Rn=I.width>=I.height*l,On=Rn?{width:Math.round(dn*l),height:dn}:{width:wn,height:Math.round(wn/l)},bn=F(F({},On),{x:Math.round(T(I.width-On.width,an.x*I.width/100)),y:Math.round(T(I.height-On.height,an.y*I.height/100))});return{croppedAreaPercentages:an,croppedAreaPixels:bn}}function Tn(k,f){return Math.min(k,Math.max(0,f))}function Fn(k,f){return f}function i(k,f,n,l,w,v){var L=c(f.width,f.height,n),T=h(l.width/L.width*(100/k.width),w,v),$={x:T*L.width/2-l.width/2-L.width*T*(k.x/100),y:T*L.height/2-l.height/2-L.height*T*(k.y/100)};return{crop:$,zoom:T}}function p(k,f,n){var l=Pn(f);return n.height>n.width?n.height/(k.height*l):n.width/(k.width*l)}function e(k,f,n,l,w,v){n===void 0&&(n=0);var L=c(f.naturalWidth,f.naturalHeight,n),T=h(p(k,f,l),w,v),$=l.height>l.width?l.height/k.height:l.width/k.width,I={x:((L.width-k.width)/2-k.x)*$,y:((L.height-k.height)/2-k.y)*$};return{crop:I,zoom:T}}function y(k,f){return{x:(f.x+k.x)/2,y:(f.y+k.y)/2}}function r(k){return k*Math.PI/180}function c(k,f,n){var l=r(n);return{width:Math.abs(Math.cos(l)*k)+Math.abs(Math.sin(l)*f),height:Math.abs(Math.sin(l)*k)+Math.abs(Math.cos(l)*f)}}function h(k,f,n){return Math.min(Math.max(k,f),n)}function P(){for(var k=[],f=0;f<arguments.length;f++)k[f]=arguments[f];return k.filter(function(n){return typeof n=="string"&&n.length>0}).join(" ").trim()}var E=`.reactEasyCrop_Container {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  overflow: hidden;
  user-select: none;
  touch-action: none;
  cursor: move;
  display: flex;
  justify-content: center;
  align-items: center;
}

.reactEasyCrop_Image,
.reactEasyCrop_Video {
  will-change: transform; /* this improves performances and prevent painting issues on iOS Chrome */
}

.reactEasyCrop_Contain {
  max-width: 100%;
  max-height: 100%;
  margin: auto;
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
}
.reactEasyCrop_Cover_Horizontal {
  width: 100%;
  height: auto;
}
.reactEasyCrop_Cover_Vertical {
  width: auto;
  height: 100%;
}

.reactEasyCrop_CropArea {
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  border: 1px solid rgba(255, 255, 255, 0.5);
  box-sizing: border-box;
  box-shadow: 0 0 0 9999em;
  color: rgba(0, 0, 0, 0.5);
  overflow: hidden;
}

.reactEasyCrop_CropAreaRound {
  border-radius: 50%;
}

.reactEasyCrop_CropAreaGrid::before {
  content: ' ';
  box-sizing: border-box;
  position: absolute;
  border: 1px solid rgba(255, 255, 255, 0.5);
  top: 0;
  bottom: 0;
  left: 33.33%;
  right: 33.33%;
  border-top: 0;
  border-bottom: 0;
}

.reactEasyCrop_CropAreaGrid::after {
  content: ' ';
  box-sizing: border-box;
  position: absolute;
  border: 1px solid rgba(255, 255, 255, 0.5);
  top: 33.33%;
  bottom: 33.33%;
  left: 0;
  right: 0;
  border-left: 0;
  border-right: 0;
}
`,z=1,Q=3,en=function(k){kn(f,k);function f(){var n=k!==null&&k.apply(this,arguments)||this;return n.imageRef=un.a.createRef(),n.videoRef=un.a.createRef(),n.containerPosition={x:0,y:0},n.containerRef=null,n.styleRef=null,n.containerRect=null,n.mediaSize={width:0,height:0,naturalWidth:0,naturalHeight:0},n.dragStartPosition={x:0,y:0},n.dragStartCrop={x:0,y:0},n.gestureZoomStart=0,n.gestureRotationStart=0,n.isTouching=!1,n.lastPinchDistance=0,n.lastPinchRotation=0,n.rafDragTimeout=null,n.rafPinchTimeout=null,n.wheelTimer=null,n.currentDoc=typeof document!="undefined"?document:null,n.currentWindow=typeof window!="undefined"?window:null,n.resizeObserver=null,n.state={cropSize:null,hasWheelJustStarted:!1,mediaObjectFit:void 0},n.initResizeObserver=function(){if(!(typeof window.ResizeObserver=="undefined"||!n.containerRef)){var l=!0;n.resizeObserver=new window.ResizeObserver(function(w){if(l){l=!1;return}n.computeSizes()}),n.resizeObserver.observe(n.containerRef)}},n.preventZoomSafari=function(l){return l.preventDefault()},n.cleanEvents=function(){n.currentDoc&&(n.currentDoc.removeEventListener("mousemove",n.onMouseMove),n.currentDoc.removeEventListener("mouseup",n.onDragStopped),n.currentDoc.removeEventListener("touchmove",n.onTouchMove),n.currentDoc.removeEventListener("touchend",n.onDragStopped),n.currentDoc.removeEventListener("gesturemove",n.onGestureMove),n.currentDoc.removeEventListener("gestureend",n.onGestureEnd),n.currentDoc.removeEventListener("scroll",n.onScroll))},n.clearScrollEvent=function(){n.containerRef&&n.containerRef.removeEventListener("wheel",n.onWheel),n.wheelTimer&&clearTimeout(n.wheelTimer)},n.onMediaLoad=function(){var l=n.computeSizes();l&&(n.emitCropData(),n.setInitialCrop(l)),n.props.onMediaLoaded&&n.props.onMediaLoaded(n.mediaSize)},n.setInitialCrop=function(l){if(n.props.initialCroppedAreaPercentages){var w=i(n.props.initialCroppedAreaPercentages,n.mediaSize,n.props.rotation,l,n.props.minZoom,n.props.maxZoom),v=w.crop,L=w.zoom;n.props.onCropChange(v),n.props.onZoomChange&&n.props.onZoomChange(L)}else if(n.props.initialCroppedAreaPixels){var T=e(n.props.initialCroppedAreaPixels,n.mediaSize,n.props.rotation,l,n.props.minZoom,n.props.maxZoom),v=T.crop,L=T.zoom;n.props.onCropChange(v),n.props.onZoomChange&&n.props.onZoomChange(L)}},n.computeSizes=function(){var l,w,v,L,T,$,I=n.imageRef.current||n.videoRef.current;if(I&&n.containerRef){n.containerRect=n.containerRef.getBoundingClientRect(),n.saveContainerPosition();var an=n.containerRect.width/n.containerRect.height,wn=((l=n.imageRef.current)===null||l===void 0?void 0:l.naturalWidth)||((w=n.videoRef.current)===null||w===void 0?void 0:w.videoWidth)||0,dn=((v=n.imageRef.current)===null||v===void 0?void 0:v.naturalHeight)||((L=n.videoRef.current)===null||L===void 0?void 0:L.videoHeight)||0,Rn=I.offsetWidth<wn||I.offsetHeight<dn,On=wn/dn,bn=void 0;if(Rn)switch(n.state.mediaObjectFit){default:case"contain":bn=an>On?{width:n.containerRect.height*On,height:n.containerRect.height}:{width:n.containerRect.width,height:n.containerRect.width/On};break;case"horizontal-cover":bn={width:n.containerRect.width,height:n.containerRect.width/On};break;case"vertical-cover":bn={width:n.containerRect.height*On,height:n.containerRect.height};break}else bn={width:I.offsetWidth,height:I.offsetHeight};n.mediaSize=F(F({},bn),{naturalWidth:wn,naturalHeight:dn}),n.props.setMediaSize&&n.props.setMediaSize(n.mediaSize);var An=n.props.cropSize?n.props.cropSize:W(n.mediaSize.width,n.mediaSize.height,n.containerRect.width,n.containerRect.height,n.props.aspect,n.props.rotation);return(((T=n.state.cropSize)===null||T===void 0?void 0:T.height)!==An.height||(($=n.state.cropSize)===null||$===void 0?void 0:$.width)!==An.width)&&n.props.onCropSizeChange&&n.props.onCropSizeChange(An),n.setState({cropSize:An},n.recomputeCropPosition),n.props.setCropSize&&n.props.setCropSize(An),An}},n.saveContainerPosition=function(){if(n.containerRef){var l=n.containerRef.getBoundingClientRect();n.containerPosition={x:l.left,y:l.top}}},n.onMouseDown=function(l){n.currentDoc&&(l.preventDefault(),n.currentDoc.addEventListener("mousemove",n.onMouseMove),n.currentDoc.addEventListener("mouseup",n.onDragStopped),n.saveContainerPosition(),n.onDragStart(f.getMousePoint(l)))},n.onMouseMove=function(l){return n.onDrag(f.getMousePoint(l))},n.onScroll=function(l){n.currentDoc&&(l.preventDefault(),n.saveContainerPosition())},n.onTouchStart=function(l){n.currentDoc&&(n.isTouching=!0,!(n.props.onTouchRequest&&!n.props.onTouchRequest(l))&&(n.currentDoc.addEventListener("touchmove",n.onTouchMove,{passive:!1}),n.currentDoc.addEventListener("touchend",n.onDragStopped),n.saveContainerPosition(),l.touches.length===2?n.onPinchStart(l):l.touches.length===1&&n.onDragStart(f.getTouchPoint(l.touches[0]))))},n.onTouchMove=function(l){l.preventDefault(),l.touches.length===2?n.onPinchMove(l):l.touches.length===1&&n.onDrag(f.getTouchPoint(l.touches[0]))},n.onGestureStart=function(l){n.currentDoc&&(l.preventDefault(),n.currentDoc.addEventListener("gesturechange",n.onGestureMove),n.currentDoc.addEventListener("gestureend",n.onGestureEnd),n.gestureZoomStart=n.props.zoom,n.gestureRotationStart=n.props.rotation)},n.onGestureMove=function(l){if(l.preventDefault(),!n.isTouching){var w=f.getMousePoint(l),v=n.gestureZoomStart-1+l.scale;if(n.setNewZoom(v,w,{shouldUpdatePosition:!0}),n.props.onRotationChange){var L=n.gestureRotationStart+l.rotation;n.props.onRotationChange(L)}}},n.onGestureEnd=function(l){n.cleanEvents()},n.onDragStart=function(l){var w,v,L=l.x,T=l.y;n.dragStartPosition={x:L,y:T},n.dragStartCrop=F({},n.props.crop),(v=(w=n.props).onInteractionStart)===null||v===void 0||v.call(w)},n.onDrag=function(l){var w=l.x,v=l.y;n.currentWindow&&(n.rafDragTimeout&&n.currentWindow.cancelAnimationFrame(n.rafDragTimeout),n.rafDragTimeout=n.currentWindow.requestAnimationFrame(function(){if(n.state.cropSize&&!(w===void 0||v===void 0)){var L=w-n.dragStartPosition.x,T=v-n.dragStartPosition.y,$={x:n.dragStartCrop.x+L,y:n.dragStartCrop.y+T},I=n.props.restrictPosition?gn($,n.mediaSize,n.state.cropSize,n.props.zoom,n.props.rotation):$;n.props.onCropChange(I)}}))},n.onDragStopped=function(){var l,w;n.isTouching=!1,n.cleanEvents(),n.emitCropData(),(w=(l=n.props).onInteractionEnd)===null||w===void 0||w.call(l)},n.onWheel=function(l){if(n.currentWindow&&!(n.props.onWheelRequest&&!n.props.onWheelRequest(l))){l.preventDefault();var w=f.getMousePoint(l),v=pn()(l).pixelY,L=n.props.zoom-v*n.props.zoomSpeed/200;n.setNewZoom(L,w,{shouldUpdatePosition:!0}),n.state.hasWheelJustStarted||n.setState({hasWheelJustStarted:!0},function(){var T,$;return($=(T=n.props).onInteractionStart)===null||$===void 0?void 0:$.call(T)}),n.wheelTimer&&clearTimeout(n.wheelTimer),n.wheelTimer=n.currentWindow.setTimeout(function(){return n.setState({hasWheelJustStarted:!1},function(){var T,$;return($=(T=n.props).onInteractionEnd)===null||$===void 0?void 0:$.call(T)})},250)}},n.getPointOnContainer=function(l,w){var v=l.x,L=l.y;if(!n.containerRect)throw new Error("The Cropper is not mounted");return{x:n.containerRect.width/2-(v-w.x),y:n.containerRect.height/2-(L-w.y)}},n.getPointOnMedia=function(l){var w=l.x,v=l.y,L=n.props,T=L.crop,$=L.zoom;return{x:(w+T.x)/$,y:(v+T.y)/$}},n.setNewZoom=function(l,w,v){var L=v===void 0?{}:v,T=L.shouldUpdatePosition,$=T===void 0?!0:T;if(!(!n.state.cropSize||!n.props.onZoomChange)){var I=h(l,n.props.minZoom,n.props.maxZoom);if($){var an=n.getPointOnContainer(w,n.containerPosition),wn=n.getPointOnMedia(an),dn={x:wn.x*I-an.x,y:wn.y*I-an.y},Rn=n.props.restrictPosition?gn(dn,n.mediaSize,n.state.cropSize,I,n.props.rotation):dn;n.props.onCropChange(Rn)}n.props.onZoomChange(I)}},n.getCropData=function(){if(!n.state.cropSize)return null;var l=n.props.restrictPosition?gn(n.props.crop,n.mediaSize,n.state.cropSize,n.props.zoom,n.props.rotation):n.props.crop;return jn(l,n.mediaSize,n.state.cropSize,n.getAspect(),n.props.zoom,n.props.rotation,n.props.restrictPosition)},n.emitCropData=function(){var l=n.getCropData();if(l){var w=l.croppedAreaPercentages,v=l.croppedAreaPixels;n.props.onCropComplete&&n.props.onCropComplete(w,v),n.props.onCropAreaChange&&n.props.onCropAreaChange(w,v)}},n.emitCropAreaChange=function(){var l=n.getCropData();if(l){var w=l.croppedAreaPercentages,v=l.croppedAreaPixels;n.props.onCropAreaChange&&n.props.onCropAreaChange(w,v)}},n.recomputeCropPosition=function(){if(n.state.cropSize){var l=n.props.restrictPosition?gn(n.props.crop,n.mediaSize,n.state.cropSize,n.props.zoom,n.props.rotation):n.props.crop;n.props.onCropChange(l),n.emitCropData()}},n}return f.prototype.componentDidMount=function(){!this.currentDoc||!this.currentWindow||(this.containerRef&&(this.containerRef.ownerDocument&&(this.currentDoc=this.containerRef.ownerDocument),this.currentDoc.defaultView&&(this.currentWindow=this.currentDoc.defaultView),this.initResizeObserver(),typeof window.ResizeObserver=="undefined"&&this.currentWindow.addEventListener("resize",this.computeSizes),this.props.zoomWithScroll&&this.containerRef.addEventListener("wheel",this.onWheel,{passive:!1}),this.containerRef.addEventListener("gesturestart",this.onGestureStart)),this.currentDoc.addEventListener("scroll",this.onScroll),this.props.disableAutomaticStylesInjection||(this.styleRef=this.currentDoc.createElement("style"),this.styleRef.setAttribute("type","text/css"),this.props.nonce&&this.styleRef.setAttribute("nonce",this.props.nonce),this.styleRef.innerHTML=E,this.currentDoc.head.appendChild(this.styleRef)),this.imageRef.current&&this.imageRef.current.complete&&this.onMediaLoad(),this.props.setImageRef&&this.props.setImageRef(this.imageRef),this.props.setVideoRef&&this.props.setVideoRef(this.videoRef))},f.prototype.componentWillUnmount=function(){var n,l;!this.currentDoc||!this.currentWindow||(typeof window.ResizeObserver=="undefined"&&this.currentWindow.removeEventListener("resize",this.computeSizes),(n=this.resizeObserver)===null||n===void 0||n.disconnect(),this.containerRef&&this.containerRef.removeEventListener("gesturestart",this.preventZoomSafari),this.styleRef&&((l=this.styleRef.parentNode)===null||l===void 0||l.removeChild(this.styleRef)),this.cleanEvents(),this.props.zoomWithScroll&&this.clearScrollEvent())},f.prototype.componentDidUpdate=function(n){var l,w,v,L,T,$,I,an,wn;n.rotation!==this.props.rotation?(this.computeSizes(),this.recomputeCropPosition()):n.aspect!==this.props.aspect?this.computeSizes():n.objectFit!==this.props.objectFit?this.computeSizes():n.zoom!==this.props.zoom?this.recomputeCropPosition():((l=n.cropSize)===null||l===void 0?void 0:l.height)!==((w=this.props.cropSize)===null||w===void 0?void 0:w.height)||((v=n.cropSize)===null||v===void 0?void 0:v.width)!==((L=this.props.cropSize)===null||L===void 0?void 0:L.width)?this.computeSizes():(((T=n.crop)===null||T===void 0?void 0:T.x)!==(($=this.props.crop)===null||$===void 0?void 0:$.x)||((I=n.crop)===null||I===void 0?void 0:I.y)!==((an=this.props.crop)===null||an===void 0?void 0:an.y))&&this.emitCropAreaChange(),n.zoomWithScroll!==this.props.zoomWithScroll&&this.containerRef&&(this.props.zoomWithScroll?this.containerRef.addEventListener("wheel",this.onWheel,{passive:!1}):this.clearScrollEvent()),n.video!==this.props.video&&((wn=this.videoRef.current)===null||wn===void 0||wn.load());var dn=this.getObjectFit();dn!==this.state.mediaObjectFit&&this.setState({mediaObjectFit:dn},this.computeSizes)},f.prototype.getAspect=function(){var n=this.props,l=n.cropSize,w=n.aspect;return l?l.width/l.height:w},f.prototype.getObjectFit=function(){var n,l,w,v;if(this.props.objectFit==="cover"){var L=this.imageRef.current||this.videoRef.current;if(L&&this.containerRef){this.containerRect=this.containerRef.getBoundingClientRect();var T=this.containerRect.width/this.containerRect.height,$=((n=this.imageRef.current)===null||n===void 0?void 0:n.naturalWidth)||((l=this.videoRef.current)===null||l===void 0?void 0:l.videoWidth)||0,I=((w=this.imageRef.current)===null||w===void 0?void 0:w.naturalHeight)||((v=this.videoRef.current)===null||v===void 0?void 0:v.videoHeight)||0,an=$/I;return an<T?"horizontal-cover":"vertical-cover"}return"horizontal-cover"}return this.props.objectFit},f.prototype.onPinchStart=function(n){var l=f.getTouchPoint(n.touches[0]),w=f.getTouchPoint(n.touches[1]);this.lastPinchDistance=Ln(l,w),this.lastPinchRotation=$n(l,w),this.onDragStart(y(l,w))},f.prototype.onPinchMove=function(n){var l=this;if(!(!this.currentDoc||!this.currentWindow)){var w=f.getTouchPoint(n.touches[0]),v=f.getTouchPoint(n.touches[1]),L=y(w,v);this.onDrag(L),this.rafPinchTimeout&&this.currentWindow.cancelAnimationFrame(this.rafPinchTimeout),this.rafPinchTimeout=this.currentWindow.requestAnimationFrame(function(){var T=Ln(w,v),$=l.props.zoom*(T/l.lastPinchDistance);l.setNewZoom($,L,{shouldUpdatePosition:!1}),l.lastPinchDistance=T;var I=$n(w,v),an=l.props.rotation+(I-l.lastPinchRotation);l.props.onRotationChange&&l.props.onRotationChange(an),l.lastPinchRotation=I})}},f.prototype.render=function(){var n=this,l=this.props,w=l.image,v=l.video,L=l.mediaProps,T=l.transform,$=l.crop,I=$.x,an=$.y,wn=l.rotation,dn=l.zoom,Rn=l.cropShape,On=l.showGrid,bn=l.style,An=bn.containerStyle,Mn=bn.cropAreaStyle,Gn=bn.mediaStyle,Dn=l.classes,Kn=Dn.containerClassName,is=Dn.cropAreaClassName,ts=Dn.mediaClassName,Yn=this.state.mediaObjectFit;return un.a.createElement("div",{onMouseDown:this.onMouseDown,onTouchStart:this.onTouchStart,ref:function(ls){return n.containerRef=ls},"data-testid":"container",style:An,className:P("reactEasyCrop_Container",Kn)},w?un.a.createElement("img",F({alt:"",className:P("reactEasyCrop_Image",Yn==="contain"&&"reactEasyCrop_Contain",Yn==="horizontal-cover"&&"reactEasyCrop_Cover_Horizontal",Yn==="vertical-cover"&&"reactEasyCrop_Cover_Vertical",ts)},L,{src:w,ref:this.imageRef,style:F(F({},Gn),{transform:T||"translate(".concat(I,"px, ").concat(an,"px) rotate(").concat(wn,"deg) scale(").concat(dn,")")}),onLoad:this.onMediaLoad})):v&&un.a.createElement("video",F({autoPlay:!0,loop:!0,muted:!0,className:P("reactEasyCrop_Video",Yn==="contain"&&"reactEasyCrop_Contain",Yn==="horizontal-cover"&&"reactEasyCrop_Cover_Horizontal",Yn==="vertical-cover"&&"reactEasyCrop_Cover_Vertical",ts)},L,{ref:this.videoRef,onLoadedMetadata:this.onMediaLoad,style:F(F({},Gn),{transform:T||"translate(".concat(I,"px, ").concat(an,"px) rotate(").concat(wn,"deg) scale(").concat(dn,")")}),controls:!1}),(Array.isArray(v)?v:[{src:v}]).map(function(ps){return un.a.createElement("source",F({key:ps.src},ps))})),this.state.cropSize&&un.a.createElement("div",{style:F(F({},Mn),{width:this.state.cropSize.width,height:this.state.cropSize.height}),"data-testid":"cropper",className:P("reactEasyCrop_CropArea",Rn==="round"&&"reactEasyCrop_CropAreaRound",On&&"reactEasyCrop_CropAreaGrid",is)}))},f.defaultProps={zoom:1,rotation:0,aspect:4/3,maxZoom:Q,minZoom:z,cropShape:"rect",objectFit:"contain",showGrid:!0,style:{},classes:{},mediaProps:{},zoomSpeed:1,restrictPosition:!0,zoomWithScroll:!0},f.getMousePoint=function(n){return{x:Number(n.clientX),y:Number(n.clientY)}},f.getTouchPoint=function(n){return{x:Number(n.clientX),y:Number(n.clientY)}},f}(un.a.Component);const vn="img-crop",Jn=1,Bn=.1,Zn=0,ws=-180,vs=180,ys=1,bs=.5,Us=2,us=.01,Rs=Object(M.forwardRef)((k,f)=>{const{cropperRef:n,zoomSlider:l,rotationSlider:w,aspectSlider:v,showReset:L,resetBtnText:T,modalImage:$,aspect:I,minZoom:an,maxZoom:wn,cropShape:dn,showGrid:Rn,cropperProps:On}=k,[bn,An]=Object(M.useState)(Jn),[Mn,Gn]=Object(M.useState)(Zn),[Dn,Kn]=Object(M.useState)(I),is=bn!==Jn||Mn!==Zn||Dn!==I,ts=()=>{An(Jn),Gn(Zn),Kn(I)},[Yn,ps]=Object(M.useState)({x:0,y:0}),ls=Object(M.useRef)({width:0,height:0,x:0,y:0}),rs=Object(M.useCallback)((os,ms)=>{ls.current=ms},[]);Object(M.useImperativeHandle)(f,()=>({rotation:Mn,cropPixelsRef:ls,onReset:ts}));const ks="[display:flex] [align-items:center] [width:60%] [margin-inline:auto]",Qn="[display:flex] [align-items:center] [justify-content:center] [height:32px] [width:32px] [background:transparent] [border:0] [font-family:inherit] [font-size:18px] [cursor:pointer] disabled:[opacity:20%] disabled:[cursor:default]",Vn="[flex:1]";return Object(D.jsxs)(D.Fragment,{children:[Object(D.jsx)(en,Object.assign({},On,{ref:n,image:$,crop:Yn,zoom:bn,rotation:Mn,aspect:Dn,minZoom:an,maxZoom:wn,zoomWithScroll:l,cropShape:dn,showGrid:Rn,onCropChange:ps,onZoomChange:An,onRotationChange:Gn,onCropComplete:rs,classes:{containerClassName:`${vn}-container ![position:relative] [width:100%] [height:40vh] [&~section:first-of-type]:[margin-top:16px] [&~section:last-of-type]:[margin-bottom:16px]`,mediaClassName:`${vn}-media`}})),l&&Object(D.jsxs)("section",{className:`${vn}-control ${vn}-control-zoom ${ks}`,children:[Object(D.jsx)("button",{className:Qn,onClick:()=>An(bn-Bn),disabled:bn-Bn<an,children:"\uFF0D"}),Object(D.jsx)(rn.a,{className:Vn,min:an,max:wn,step:Bn,value:bn,onChange:An}),Object(D.jsx)("button",{className:Qn,onClick:()=>An(bn+Bn),disabled:bn+Bn>wn,children:"\uFF0B"})]}),w&&Object(D.jsxs)("section",{className:`${vn}-control ${vn}-control-rotation ${ks}`,children:[Object(D.jsx)("button",{className:`${Qn} [font-size:16px]`,onClick:()=>Gn(Mn-ys),disabled:Mn===ws,children:"\u21BA"}),Object(D.jsx)(rn.a,{className:Vn,min:ws,max:vs,step:ys,value:Mn,onChange:Gn}),Object(D.jsx)("button",{className:`${Qn} [font-size:16px]`,onClick:()=>Gn(Mn+ys),disabled:Mn===vs,children:"\u21BB"})]}),v&&Object(D.jsxs)("section",{className:`${vn}-control ${vn}-control-aspect ${ks}`,children:[Object(D.jsx)("button",{className:Qn,onClick:()=>Kn(Dn-us),disabled:Dn-us<bs,children:"\u2195\uFE0F"}),Object(D.jsx)(rn.a,{className:Vn,min:bs,max:Us,step:us,value:Dn,onChange:Kn}),Object(D.jsx)("button",{className:Qn,onClick:()=>Kn(Dn+us),disabled:Dn+us>Us,children:"\u2194\uFE0F"})]}),L&&(l||w||v)&&Object(D.jsx)(sn.a,{className:"[bottom:20px] [position:absolute]",style:is?{}:{opacity:.3,pointerEvents:"none"},onClick:ts,children:T})]})});var Es=Object(M.memo)(Rs);function Fs(k,f){f===void 0&&(f={});var n=f.insertAt;if(!(!k||typeof document=="undefined")){var l=document.head||document.getElementsByTagName("head")[0],w=document.createElement("style");w.type="text/css",n==="top"&&l.firstChild?l.insertBefore(w,l.firstChild):l.appendChild(w),w.styleSheet?w.styleSheet.cssText=k:w.appendChild(document.createTextNode(k))}}var As=".visible{visibility:visible}.grid{display:grid}.\\!\\[position\\:relative\\]{position:relative!important}.\\[align-items\\:center\\]{align-items:center}.\\[background\\:transparent\\]{background:transparent}.\\[border\\:0\\]{border:0}.\\[bottom\\:20px\\]{bottom:20px}.\\[cursor\\:pointer\\]{cursor:pointer}.\\[display\\:flex\\]{display:flex}.\\[flex\\:1\\]{flex:1}.\\[font-family\\:inherit\\]{font-family:inherit}.\\[font-size\\:16px\\]{font-size:16px}.\\[font-size\\:18px\\]{font-size:18px}.\\[height\\:32px\\]{height:32px}.\\[height\\:40vh\\]{height:40vh}.\\[justify-content\\:center\\]{justify-content:center}.\\[margin-inline\\:auto\\]{margin-inline:auto}.\\[position\\:absolute\\]{position:absolute}.\\[width\\:100\\%\\]{width:100%}.\\[width\\:32px\\]{width:32px}.\\[width\\:60\\%\\]{width:60%}.disabled\\:\\[cursor\\:default\\]:disabled{cursor:default}.disabled\\:\\[opacity\\:20\\%\\]:disabled{opacity:20%}.\\[\\&\\~section\\:first-of-type\\]\\:\\[margin-top\\:16px\\]~section:first-of-type{margin-top:16px}.\\[\\&\\~section\\:last-of-type\\]\\:\\[margin-bottom\\:16px\\]~section:last-of-type{margin-bottom:16px}";Fs(As,{insertAt:"top"});const Is=X(mn.version,"4.23.0")===-1?"visible":"open",cs=(k,f,n)=>f in k?(console.error(`\`${f}\` is deprecated, please use \`${n}\` instead`),k[f]):k[n],Ts=Object(M.forwardRef)((k,f)=>{const{quality:n=.4,fillColor:l="white",zoomSlider:w=!0,rotationSlider:v=!1,aspectSlider:L=!1,showReset:T=!1,resetText:$,aspect:I=1,minZoom:an=1,maxZoom:wn=3,cropShape:dn="rect",showGrid:Rn=!1,cropperProps:On,modalClassName:bn,modalTitle:An,modalWidth:Mn,modalOk:Gn,modalCancel:Dn,onModalOk:Kn,onModalCancel:is,modalProps:ts,beforeCrop:Yn,children:ps}=k,ls=cs(k,"zoom","zoomSlider")||!0,rs=cs(k,"rotate","rotationSlider")||!1,ks=cs(k,"shape","cropShape")||"rect",Qn=cs(k,"grid","showGrid")||!1;"onUploadFail"in k&&console.error("`onUploadFail` is removed, because the only way it is called, is when the file is rejected by beforeUpload"),cs(k,"modalMaskTransitionName","modalProps.maskTransitionName"),cs(k,"modalTransitionName","modalProps.transitionName");const Vn=Object(M.useRef)({});Vn.current.onModalOk=Kn,Vn.current.onModalCancel=is,Vn.current.beforeCrop=Yn;const os=Object(M.useRef)(null),ms=Object(M.useCallback)(Cn=>{var In;const En=document.createElement("canvas"),Sn=En.getContext("2d"),Nn=(((In=Cn==null?void 0:Cn.getRootNode)===null||In===void 0?void 0:In.call(Cn))||document).querySelector(`.${vn}-media`),{width:Xn,height:zn,x:ns,y:ss}=os.current.cropPixelsRef.current;if(rs&&os.current.rotation!==Zn){const{naturalWidth:qn,naturalHeight:es}=Nn,ds=os.current.rotation*(Math.PI/180),fs=Math.abs(Math.sin(ds)),as=Math.abs(Math.cos(ds)),Hn=qn*as+es*fs,Wn=es*as+qn*fs;En.width=Hn,En.height=Wn,Sn.fillStyle=l,Sn.fillRect(0,0,Hn,Wn);const Ls=Hn/2,js=Wn/2;Sn.translate(Ls,js),Sn.rotate(ds),Sn.translate(-Ls,-js);const Ws=(Hn-qn)/2,Zs=(Wn-es)/2;Sn.drawImage(Nn,0,0,qn,es,Ws,Zs,qn,es);const Gs=Sn.getImageData(0,0,Hn,Wn);En.width=Xn,En.height=zn,Sn.putImageData(Gs,-ns,-ss)}else En.width=Xn,En.height=zn,Sn.fillStyle=l,Sn.fillRect(0,0,Xn,zn),Sn.drawImage(Nn,ns,ss,Xn,zn,0,0,Xn,zn);return En},[l,rs]),[xs,hs]=Object(M.useState)(""),Ss=Object(M.useRef)(),Cs=Object(M.useRef)(),gs=Object(M.useCallback)(({beforeUpload:Cn,file:In,resolve:En,reject:Sn})=>Object(on.b)(void 0,void 0,void 0,function*(){const _n=In;if(typeof Cn!="function"){En(_n);return}try{const Nn=yield Cn(In,[In]);En(Nn===!1?!1:Nn!==!0&&Nn||_n)}catch(Nn){Sn(Nn)}}),[]),Os=Object(M.useCallback)(Cn=>(In,En)=>new Promise((Sn,_n)=>Object(on.b)(void 0,void 0,void 0,function*(){let Nn=In;if(typeof Vn.current.beforeCrop=="function")try{const zn=yield Vn.current.beforeCrop(In,En);if(zn===!1)return gs({beforeUpload:Cn,file:In,resolve:Sn,reject:_n});zn!==!0&&(Nn=zn||In)}catch(zn){return gs({beforeUpload:Cn,file:In,resolve:Sn,reject:_n})}const Xn=new FileReader;Xn.addEventListener("load",()=>{typeof Xn.result=="string"&&hs(Xn.result)}),Xn.readAsDataURL(Nn),Ss.current=()=>{var zn,ns;hs(""),os.current.onReset();let ss=!1;(ns=(zn=Vn.current).onModalCancel)===null||ns===void 0||ns.call(zn,qn=>{Sn(qn),ss=!0}),ss||Sn(A.a.LIST_IGNORE)},Cs.current=zn=>Object(on.b)(void 0,void 0,void 0,function*(){hs(""),os.current.onReset();const ns=ms(zn.target),{type:ss,name:qn,uid:es}=Nn;ns.toBlob(ds=>Object(on.b)(void 0,void 0,void 0,function*(){const fs=new File([ds],qn,{type:ss});Object.assign(fs,{uid:es}),gs({beforeUpload:Cn,file:fs,resolve:as=>{var Hn,Wn;Sn(as),(Wn=(Hn=Vn.current).onModalOk)===null||Wn===void 0||Wn.call(Hn,as)},reject:as=>{var Hn,Wn;_n(as),(Wn=(Hn=Vn.current).onModalOk)===null||Wn===void 0||Wn.call(Hn,as)}})}),ss,n)})})),[ms,n,gs]),Ds=Object(M.useCallback)(Cn=>{const In=Array.isArray(Cn)?Cn[0]:Cn,En=In.props,{beforeUpload:Sn,accept:_n}=En,Nn=Object(on.d)(En,["beforeUpload","accept"]);return Object.assign(Object.assign({},In),{props:Object.assign(Object.assign({},Nn),{accept:_n||"image/*",beforeUpload:Os(Sn)})})},[Os]),Ns=Object(M.useMemo)(()=>{const Cn={};return Mn!==void 0&&(Cn.width=Mn),Gn!==void 0&&(Cn.okText=Gn),Dn!==void 0&&(Cn.cancelText=Dn),Cn},[Dn,Gn,Mn]),zs=`${vn}-modal${bn?` ${bn}`:""}`,Ps=(typeof window=="undefined"?"":window.navigator.language)==="zh-CN",Bs=An||(Ps?"\u7F16\u8F91\u56FE\u7247":"Edit image"),Ms=$||(Ps?"\u91CD\u7F6E":"Reset");return Object(D.jsxs)(D.Fragment,{children:[Ds(ps),xs&&Object(D.jsx)(R.default,Object.assign({},ts,Ns,{[Is]:!0,title:Bs,onCancel:Ss.current,onOk:Cs.current,wrapClassName:zs,maskClosable:!1,destroyOnClose:!0,children:Object(D.jsx)(Es,{ref:os,cropperRef:f,zoomSlider:ls,rotationSlider:rs,aspectSlider:L,showReset:T,resetBtnText:Ms,modalImage:xs,aspect:I,minZoom:an,maxZoom:wn,cropShape:ks,showGrid:Qn,cropperProps:On})}))]})})}}]);
