{"version":3,"sources":["webpack:///./modules/docs/Core.js","webpack:///../packages/react-router/docs/api/hooks.md","webpack:///../packages/react-router/docs/api/MemoryRouter.md","webpack:///../packages/react-router/docs/api/Prompt.md","webpack:///../packages/react-router/docs/api/Redirect.md","webpack:///../packages/react-router/docs/api/Route.md","webpack:///../packages/react-router/docs/api/Router.md","webpack:///../packages/react-router/docs/api/StaticRouter.md","webpack:///../packages/react-router/docs/api/Switch.md","webpack:///../packages/react-router/docs/api/history.md","webpack:///../packages/react-router/docs/api/location.md","webpack:///../packages/react-router/docs/api/match.md","webpack:///../packages/react-router/docs/api/withRouter.md","webpack:///../packages/react-router/docs/api/generatePath.md","webpack:///../packages/react-router/docs/guides/quick-start.md","webpack:///../packages/react-router/docs/guides/testing.md","webpack:///../packages/react-router/docs/guides/static-routes.md"],"names":["api","require","examples","guides","module","exports"],"mappings":"0FAAA,OAAe,WACbA,IAAK,CACHC,EAAQ,KACRA,EAAQ,KACRA,EAAQ,KACRA,EAAQ,KACRA,EAAQ,KACRA,EAAQ,KACRA,EAAQ,KACRA,EAAQ,KACRA,EAAQ,KACRA,EAAQ,KACRA,EAAQ,KACRA,EAAQ,KACRA,EAAQ,MAGVC,SAAU,GAEVC,OAAQ,CACNF,EAAQ,KACRA,EAAQ,KACRA,EAAQ,KACRA,EAAQ,KACRA,EAAQ,Q,kBCxBZG,EAAOC,QAAU,CAAC,OAAS,q1jBAA6llB,QAAU,CAAC,CAAC,KAAO,aAAa,KAAO,cAAc,CAAC,KAAO,cAAc,KAAO,eAAe,CAAC,KAAO,YAAY,KAAO,aAAa,CAAC,KAAO,gBAAgB,KAAO,kBAAkB,MAAQ,CAAC,KAAO,QAAQ,KAAO,W,kBCAj1lBD,EAAOC,QAAU,CAAC,OAAS,wtLAA46L,QAAU,CAAC,CAAC,KAAO,wBAAwB,KAAO,wBAAwB,CAAC,KAAO,uBAAuB,KAAO,uBAAuB,CAAC,KAAO,4BAA4B,KAAO,4BAA4B,CAAC,KAAO,oBAAoB,KAAO,oBAAoB,CAAC,KAAO,iBAAiB,KAAO,kBAAkB,MAAQ,CAAC,KAAO,iBAAiB,KAAO,kB,kBCAtyMD,EAAOC,QAAU,CAAC,OAAS,mxKAAm+K,QAAU,CAAC,CAAC,KAAO,kBAAkB,KAAO,kBAAkB,CAAC,KAAO,gBAAgB,KAAO,gBAAgB,CAAC,KAAO,aAAa,KAAO,cAAc,MAAQ,CAAC,KAAO,WAAW,KAAO,Y,kBCAvrLD,EAAOC,QAAU,CAAC,OAAS,4qgBAAk2hB,QAAU,CAAC,CAAC,KAAO,aAAa,KAAO,aAAa,CAAC,KAAO,aAAa,KAAO,aAAa,CAAC,KAAO,aAAa,KAAO,aAAa,CAAC,KAAO,eAAe,KAAO,eAAe,CAAC,KAAO,cAAc,KAAO,cAAc,CAAC,KAAO,eAAe,KAAO,eAAe,CAAC,KAAO,kBAAkB,KAAO,mBAAmB,MAAQ,CAAC,KAAO,aAAa,KAAO,c,kBCAhuiBD,EAAOC,QAAU,CAAC,OAAS,k0pCAA0ssC,QAAU,CAAC,CAAC,KAAO,uBAAuB,KAAO,wBAAwB,CAAC,KAAO,cAAc,KAAO,eAAe,CAAC,KAAO,YAAY,KAAO,aAAa,CAAC,KAAO,eAAe,KAAO,eAAe,CAAC,KAAO,iBAAiB,KAAO,iBAAiB,CAAC,KAAO,0BAA0B,KAAO,sBAAsB,CAAC,KAAO,cAAc,KAAO,cAAc,CAAC,KAAO,eAAe,KAAO,eAAe,CAAC,KAAO,mBAAmB,KAAO,mBAAmB,CAAC,KAAO,kBAAkB,KAAO,mBAAmB,MAAQ,CAAC,KAAO,UAAU,KAAO,W,kBCAjwtCD,EAAOC,QAAU,CAAC,OAAS,+6LAA2qM,QAAU,CAAC,CAAC,KAAO,kBAAkB,KAAO,kBAAkB,CAAC,KAAO,iBAAiB,KAAO,kBAAkB,MAAQ,CAAC,KAAO,WAAW,KAAO,Y,kBCAx1MD,EAAOC,QAAU,CAAC,OAAS,q9XAA27Y,QAAU,CAAC,CAAC,KAAO,mBAAmB,KAAO,mBAAmB,CAAC,KAAO,mBAAmB,KAAO,mBAAmB,CAAC,KAAO,mBAAmB,KAAO,mBAAmB,CAAC,KAAO,kBAAkB,KAAO,kBAAkB,CAAC,KAAO,iBAAiB,KAAO,kBAAkB,MAAQ,CAAC,KAAO,iBAAiB,KAAO,kB,kBCA7wZD,EAAOC,QAAU,CAAC,OAAS,sthBAAg5iB,QAAU,CAAC,CAAC,KAAO,mBAAmB,KAAO,mBAAmB,CAAC,KAAO,iBAAiB,KAAO,kBAAkB,MAAQ,CAAC,KAAO,WAAW,KAAO,Y,kBCA/jjBD,EAAOC,QAAU,CAAC,OAAS,msKAAuzK,QAAU,CAAC,CAAC,KAAO,qBAAqB,KAAO,uBAAuB,MAAQ,CAAC,KAAO,UAAU,KAAO,a,kBCAz7KD,EAAOC,QAAU,CAAC,OAAS,knNAAo2N,QAAU,GAAG,MAAQ,CAAC,KAAO,WAAW,KAAO,c,kBCA96ND,EAAOC,QAAU,CAAC,OAAS,q4LAA6hM,QAAU,CAAC,CAAC,KAAO,eAAe,KAAO,iBAAiB,MAAQ,CAAC,KAAO,QAAQ,KAAO,W,kBCAjpMD,EAAOC,QAAU,CAAC,OAAS,u7QAA6vR,QAAU,CAAC,CAAC,KAAO,6BAA6B,KAAO,6BAA6B,CAAC,KAAO,4BAA4B,KAAO,6BAA6B,MAAQ,CAAC,KAAO,aAAa,KAAO,gB,kBCAx9RD,EAAOC,QAAU,CAAC,OAAS,6/EAAilF,QAAU,CAAC,CAAC,KAAO,kBAAkB,KAAO,kBAAkB,CAAC,KAAO,iBAAiB,KAAO,kBAAkB,MAAQ,CAAC,KAAO,eAAe,KAAO,kB,kBCAlwFD,EAAOC,QAAU,CAAC,OAAS,w7BAA49B,QAAU,CAAC,CAAC,KAAO,eAAe,KAAO,iBAAiB,MAAQ,CAAC,KAAO,cAAc,KAAO,iB,kBCAtlCD,EAAOC,QAAU,CAAC,OAAS,ui+BAAq2gC,QAAU,CAAC,CAAC,KAAO,UAAU,KAAO,WAAW,CAAC,KAAO,8BAA8B,KAAO,+BAA+B,CAAC,KAAO,aAAa,KAAO,cAAc,CAAC,KAAO,6BAA6B,KAAO,8BAA8B,CAAC,KAAO,wBAAwB,KAAO,0BAA0B,MAAQ,CAAC,KAAO,UAAU,KAAO,a,kBCAjthCD,EAAOC,QAAU,CAAC,OAAS,kuBAA0uB,QAAU,GAAG,MAAQ,CAAC,KAAO,gBAAgB,KAAO","file":"4-f3831985d6db6449d8cb.js","sourcesContent":["export default {\n  api: [\n    require(\"../../../packages/react-router/docs/api/hooks.md\"),\n    require(\"../../../packages/react-router/docs/api/MemoryRouter.md\"),\n    require(\"../../../packages/react-router/docs/api/Prompt.md\"),\n    require(\"../../../packages/react-router/docs/api/Redirect.md\"),\n    require(\"../../../packages/react-router/docs/api/Route.md\"),\n    require(\"../../../packages/react-router/docs/api/Router.md\"),\n    require(\"../../../packages/react-router/docs/api/StaticRouter.md\"),\n    require(\"../../../packages/react-router/docs/api/Switch.md\"),\n    require(\"../../../packages/react-router/docs/api/history.md\"),\n    require(\"../../../packages/react-router/docs/api/location.md\"),\n    require(\"../../../packages/react-router/docs/api/match.md\"),\n    require(\"../../../packages/react-router/docs/api/withRouter.md\"),\n    require(\"../../../packages/react-router/docs/api/generatePath.md\")\n  ],\n\n  examples: [],\n\n  guides: [\n    require(\"../../../packages/react-router/docs/guides/philosophy.md\"),\n    require(\"../../../packages/react-router/docs/guides/quick-start.md\"),\n    require(\"../../../packages/react-router/docs/guides/testing.md\"),\n    require(\"../../../packages/react-router/docs/guides/redux.md\"),\n    require(\"../../../packages/react-router/docs/guides/static-routes.md\")\n  ]\n};\n","module.exports = {\"markup\":\"<h1 id=\\\"Hooks\\\"><a href=\\\"/core/api/Hooks\\\" class=\\\"internal-link\\\">Hooks</a></h1>\\n<p>React Router ships with a few <a href=\\\"https://reactjs.org/docs/hooks-intro.html\\\">hooks</a> that let you access the state of the router and perform navigation from inside your components.</p>\\n<p>Please note: You need to be using React &gt;= 16.8 in order to use any of these hooks!</p>\\n<ul>\\n<li><a href=\\\"/core/api/Hooks/usehistory\\\" class=\\\"internal-link\\\"><code>useHistory</code></a></li>\\n<li><a href=\\\"/core/api/Hooks/uselocation\\\" class=\\\"internal-link\\\"><code>useLocation</code></a></li>\\n<li><a href=\\\"/core/api/Hooks/useparams\\\" class=\\\"internal-link\\\"><code>useParams</code></a></li>\\n<li><a href=\\\"/core/api/Hooks/useroutematch\\\" class=\\\"internal-link\\\"><code>useRouteMatch</code></a></li>\\n</ul>\\n<a id=\\\"usehistory\\\">\\n<h2 id=\\\"Hooks-usehistory\\\"><a href=\\\"/core/api/Hooks/usehistory\\\" class=\\\"internal-link\\\"><code>useHistory</code></a></h2>\\n<p>The <code>useHistory</code> hook gives you access to the <a href=\\\"/core/api/history\\\" class=\\\"internal-link\\\"><code>history</code></a> instance that you may use to navigate.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> useHistory <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react-router-dom&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">HomeButton</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">let</span> history <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useHistory</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">handleClick</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    history<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">push</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;/home&quot;</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>button</span> <span class=\\\"token attr-name\\\">type</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>button<span class=\\\"token punctuation\\\">&quot;</span></span> <span class=\\\"token attr-name\\\">onClick</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>handleClick<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      Go home\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>button</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n<a id=\\\"uselocation\\\">\\n<h2 id=\\\"Hooks-uselocation\\\"><a href=\\\"/core/api/Hooks/uselocation\\\" class=\\\"internal-link\\\"><code>useLocation</code></a></h2>\\n<p>The <code>useLocation</code> hook returns the <a href=\\\"/core/api/location\\\" class=\\\"internal-link\\\"><code>location</code></a> object that represents the current URL. You can think about it like a <code>useState</code> that returns a new <code>location</code> whenever the URL changes.</p>\\n<p>This could be really useful e.g. in a situation where you would like to trigger a new &#x201C;page view&#x201D; event using your web analytics tool whenever a new page loads, as in the following example:</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">import</span> React <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> ReactDOM <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react-dom&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span>\\n  BrowserRouter <span class=\\\"token keyword\\\">as</span> Router<span class=\\\"token punctuation\\\">,</span>\\n  Switch<span class=\\\"token punctuation\\\">,</span>\\n  useLocation\\n<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react-router-dom&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">usePageViews</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">let</span> location <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useLocation</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  React<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">useEffect</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">{</span>\\n    ga<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">send</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">&quot;pageview&quot;</span><span class=\\\"token punctuation\\\">,</span> location<span class=\\\"token punctuation\\\">.</span>pathname<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">[</span>location<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">App</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">usePageViews</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Switch</span></span><span class=\\\"token punctuation\\\">&gt;</span></span><span class=\\\"token operator\\\">...</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Switch</span></span><span class=\\\"token punctuation\\\">&gt;</span></span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\nReactDOM<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Router</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">App</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Router</span></span><span class=\\\"token punctuation\\\">&gt;</span></span><span class=\\\"token punctuation\\\">,</span>\\n  node\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n<a id=\\\"useparams\\\">\\n<h2 id=\\\"Hooks-useparams\\\"><a href=\\\"/core/api/Hooks/useparams\\\" class=\\\"internal-link\\\"><code>useParams</code></a></h2>\\n<p><code>useParams</code> returns an object of key/value pairs of URL parameters. Use it to access <code>match.params</code> of the current <code>&lt;Route&gt;</code>.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">import</span> React <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> ReactDOM <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react-dom&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span>\\n  BrowserRouter <span class=\\\"token keyword\\\">as</span> Router<span class=\\\"token punctuation\\\">,</span>\\n  Switch<span class=\\\"token punctuation\\\">,</span>\\n  Route<span class=\\\"token punctuation\\\">,</span>\\n  useParams\\n<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react-router-dom&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">BlogPost</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">let</span> <span class=\\\"token punctuation\\\">{</span> slug <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useParams</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span>Now showing post <span class=\\\"token punctuation\\\">{</span>slug<span class=\\\"token punctuation\\\">}</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\nReactDOM<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Router</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Switch</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token attr-name\\\">exact</span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">HomePage</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Route</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/blog/:slug<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">BlogPost</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Route</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Switch</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Router</span></span><span class=\\\"token punctuation\\\">&gt;</span></span><span class=\\\"token punctuation\\\">,</span>\\n  node\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n<h2 id=\\\"Hooks-useroutematch\\\"><a href=\\\"/core/api/Hooks/useroutematch\\\" class=\\\"internal-link\\\"><code>useRouteMatch</code></a></h2>\\n<p>The <code>useRouteMatch</code> hook attempts to <a href=\\\"/core/api/match\\\" class=\\\"internal-link\\\">match</a> the current URL in the same way that a <code>&lt;Route&gt;</code> would. It&#x2019;s mostly useful for getting access to the match data without actually rendering a <code>&lt;Route&gt;</code>.</p>\\n<p>Now, instead of</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> Route <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react-router-dom&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">BlogPost</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span>\\n      <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/blog/:slug<span class=\\\"token punctuation\\\">&quot;</span></span>\\n      <span class=\\\"token attr-name\\\">render</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\"><span class=\\\"token punctuation\\\">{</span> match <span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token comment\\\">// Do whatever you want with the match...</span>\\n        <span class=\\\"token keyword\\\">return</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span> <span class=\\\"token punctuation\\\">/&gt;</span></span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></span>\\n    <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n<p>you can just</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> useRouteMatch <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react-router-dom&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">BlogPost</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">let</span> match <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useRouteMatch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;/blog/:slug&quot;</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token comment\\\">// Do whatever you want with the match...</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span> <span class=\\\"token punctuation\\\">/&gt;</span></span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n<p>The <code>useRouteMatch</code> hook either:</p>\\n<ul>\\n<li>takes no argument and returns the match object of the current <code>&lt;Route&gt;</code></li>\\n<li>takes a single argument, which is identical to <a href=\\\"/core/api/matchPath/props\\\" class=\\\"internal-link\\\">props argument of matchPath</a>. It can be either a pathname as a string (like the example above) or an object with the matching props that <code>Route</code> accepts, like this:</li>\\n</ul>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">const</span> match <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useRouteMatch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n  path<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">&quot;/BLOG/:slug/&quot;</span><span class=\\\"token punctuation\\\">,</span>\\n  strict<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n  sensitive<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n</a></a></a>\",\"headers\":[{\"text\":\"useHistory\",\"slug\":\"usehistory\"},{\"text\":\"useLocation\",\"slug\":\"uselocation\"},{\"text\":\"useParams\",\"slug\":\"useparams\"},{\"text\":\"useRouteMatch\",\"slug\":\"useroutematch\"}],\"title\":{\"text\":\"Hooks\",\"slug\":\"Hooks\"}}","module.exports = {\"markup\":\"<h1 id=\\\"MemoryRouter\\\"><a href=\\\"/core/api/MemoryRouter\\\" class=\\\"internal-link\\\">&lt;MemoryRouter&gt;</a></h1>\\n<p>A <a href=\\\"Router.md\\\"><code>&lt;Router&gt;</code></a> that keeps the history of your &#x201C;URL&#x201D; in memory (does not read or write to the address bar). Useful in tests and non-browser environments like <a href=\\\"https://facebook.github.io/react-native/\\\">React Native</a>.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">MemoryRouter</span></span>\\n  <span class=\\\"token attr-name\\\">initialEntries</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>optionalArray<span class=\\\"token punctuation\\\">}</span></span>\\n  <span class=\\\"token attr-name\\\">initialIndex</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>optionalNumber<span class=\\\"token punctuation\\\">}</span></span>\\n  <span class=\\\"token attr-name\\\">getUserConfirmation</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>optionalFunc<span class=\\\"token punctuation\\\">}</span></span>\\n  <span class=\\\"token attr-name\\\">keyLength</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>optionalNumber<span class=\\\"token punctuation\\\">}</span></span>\\n<span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">App</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">MemoryRouter</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n</code></pre>\\n<h2 id=\\\"MemoryRouter-initialentries-array\\\"><a href=\\\"/core/api/MemoryRouter/initialentries-array\\\" class=\\\"internal-link\\\">initialEntries: array</a></h2>\\n<p>An array of <code>location</code>s in the history stack. These may be full-blown location objects with <code>{ pathname, search, hash, state }</code> or simple string URLs.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">MemoryRouter</span></span>\\n  <span class=\\\"token attr-name\\\">initialEntries</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">&quot;/one&quot;</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">&quot;/two&quot;</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span> pathname<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">&quot;/three&quot;</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">}</span></span>\\n  <span class=\\\"token attr-name\\\">initialIndex</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">}</span></span>\\n<span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">App</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">MemoryRouter</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n</code></pre>\\n<h2 id=\\\"MemoryRouter-initialindex-number\\\"><a href=\\\"/core/api/MemoryRouter/initialindex-number\\\" class=\\\"internal-link\\\">initialIndex: number</a></h2>\\n<p>The initial location&#x2019;s index in the array of <code>initialEntries</code>.</p>\\n<h2 id=\\\"MemoryRouter-getuserconfirmation-func\\\"><a href=\\\"/core/api/MemoryRouter/getuserconfirmation-func\\\" class=\\\"internal-link\\\">getUserConfirmation: func</a></h2>\\n<p>A function to use to confirm navigation. You must use this option when using <code>&lt;MemoryRouter&gt;</code> directly with a <code>&lt;Prompt&gt;</code>.</p>\\n<h2 id=\\\"MemoryRouter-keylength-number\\\"><a href=\\\"/core/api/MemoryRouter/keylength-number\\\" class=\\\"internal-link\\\">keyLength: number</a></h2>\\n<p>The length of <code>location.key</code>. Defaults to 6.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">MemoryRouter</span></span> <span class=\\\"token attr-name\\\">keyLength</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token number\\\">12</span><span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n</code></pre>\\n<h2 id=\\\"MemoryRouter-children-node\\\"><a href=\\\"/core/api/MemoryRouter/children-node\\\" class=\\\"internal-link\\\">children: node</a></h2>\\n<p>The child elements to render.</p>\\n<p>Note: On React &lt; 16 you must use a <a href=\\\"https://facebook.github.io/react/docs/react-api.html#reactchildrenonly\\\">single child element</a> since a render method cannot return more than one element. If you need more than one element, you might try wrapping them in an extra <code>&lt;div&gt;</code> or <code>&lt;React.Fragment&gt;</code>.</p>\\n\",\"headers\":[{\"text\":\"initialEntries: array\",\"slug\":\"initialentries-array\"},{\"text\":\"initialIndex: number\",\"slug\":\"initialindex-number\"},{\"text\":\"getUserConfirmation: func\",\"slug\":\"getuserconfirmation-func\"},{\"text\":\"keyLength: number\",\"slug\":\"keylength-number\"},{\"text\":\"children: node\",\"slug\":\"children-node\"}],\"title\":{\"text\":\"<MemoryRouter>\",\"slug\":\"MemoryRouter\"}}","module.exports = {\"markup\":\"<h1 id=\\\"Prompt\\\"><a href=\\\"/core/api/Prompt\\\" class=\\\"internal-link\\\">&lt;Prompt&gt;</a></h1>\\n<p>Used to prompt the user before navigating away from a page. When your application enters a state that should prevent the user from navigating away (like a form is half-filled out), render a <code>&lt;Prompt&gt;</code>.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Prompt</span></span>\\n  <span class=\\\"token attr-name\\\">when</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>formIsHalfFilledOut<span class=\\\"token punctuation\\\">}</span></span>\\n  <span class=\\\"token attr-name\\\">message</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>Are you sure you want to leave?<span class=\\\"token punctuation\\\">&quot;</span></span>\\n<span class=\\\"token punctuation\\\">/&gt;</span></span>\\n</code></pre>\\n<h2 id=\\\"Prompt-message-string\\\"><a href=\\\"/core/api/Prompt/message-string\\\" class=\\\"internal-link\\\">message: string</a></h2>\\n<p>The message to prompt the user with when they try to navigate away.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Prompt</span></span> <span class=\\\"token attr-name\\\">message</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>Are you sure you want to leave?<span class=\\\"token punctuation\\\">&quot;</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n</code></pre>\\n<h2 id=\\\"Prompt-message-func\\\"><a href=\\\"/core/api/Prompt/message-func\\\" class=\\\"internal-link\\\">message: func</a></h2>\\n<p>Will be called with the next <code>location</code> and <code>action</code> the user is attempting to navigate to. Return a string to show a prompt to the user or <code>true</code> to allow the transition.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Prompt</span></span>\\n  <span class=\\\"token attr-name\\\">message</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">location<span class=\\\"token punctuation\\\">,</span> action</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>action <span class=\\\"token operator\\\">===</span> <span class=\\\"token string\\\">&apos;POP&apos;</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;Backing up...&quot;</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token keyword\\\">return</span> location<span class=\\\"token punctuation\\\">.</span>pathname<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">startsWith</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;/app&quot;</span><span class=\\\"token punctuation\\\">)</span>\\n      <span class=\\\"token operator\\\">?</span> <span class=\\\"token boolean\\\">true</span>\\n      <span class=\\\"token punctuation\\\">:</span> <span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">Are you sure you want to go to </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>location<span class=\\\"token punctuation\\\">.</span>pathname<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">?</span><span class=\\\"token template-punctuation string\\\">`</span></span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></span>\\n<span class=\\\"token punctuation\\\">/&gt;</span></span>\\n</code></pre>\\n<h2 id=\\\"Prompt-when-bool\\\"><a href=\\\"/core/api/Prompt/when-bool\\\" class=\\\"internal-link\\\">when: bool</a></h2>\\n<p>Instead of conditionally rendering a <code>&lt;Prompt&gt;</code> behind a guard, you can always render it but pass <code>when={true}</code> or <code>when={false}</code> to prevent or allow navigation accordingly.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Prompt</span></span> <span class=\\\"token attr-name\\\">when</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>formIsHalfFilledOut<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token attr-name\\\">message</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>Are you sure?<span class=\\\"token punctuation\\\">&quot;</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n</code></pre>\\n\",\"headers\":[{\"text\":\"message: string\",\"slug\":\"message-string\"},{\"text\":\"message: func\",\"slug\":\"message-func\"},{\"text\":\"when: bool\",\"slug\":\"when-bool\"}],\"title\":{\"text\":\"<Prompt>\",\"slug\":\"Prompt\"}}","module.exports = {\"markup\":\"<h1 id=\\\"Redirect\\\"><a href=\\\"/core/api/Redirect\\\" class=\\\"internal-link\\\">&lt;Redirect&gt;</a></h1>\\n<p>Rendering a <code>&lt;Redirect&gt;</code> will navigate to a new location. The new location will override the current location in the history stack, like server-side redirects (HTTP 3xx) do.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token attr-name\\\">exact</span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token punctuation\\\">{</span>loggedIn <span class=\\\"token operator\\\">?</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Redirect</span></span> <span class=\\\"token attr-name\\\">to</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/dashboard<span class=\\\"token punctuation\\\">&quot;</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span> <span class=\\\"token punctuation\\\">:</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">PublicHomePage</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span><span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Route</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n</code></pre>\\n<h2 id=\\\"Redirect-to-string\\\"><a href=\\\"/core/api/Redirect/to-string\\\" class=\\\"internal-link\\\">to: string</a></h2>\\n<p>The URL to redirect to. Any valid URL path that <a href=\\\"https://github.com/pillarjs/path-to-regexp/tree/v1.7.0\\\"><code>path-to-regexp@^1.7.0</code></a> understands.\\nAll URL parameters that are used in <code>to</code> must be covered by <code>from</code>.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Redirect</span></span> <span class=\\\"token attr-name\\\">to</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/somewhere/else<span class=\\\"token punctuation\\\">&quot;</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n</code></pre>\\n<h2 id=\\\"Redirect-to-object\\\"><a href=\\\"/core/api/Redirect/to-object\\\" class=\\\"internal-link\\\">to: object</a></h2>\\n<p>A location to redirect to. <code>pathname</code> can be any valid URL path that <a href=\\\"https://github.com/pillarjs/path-to-regexp/tree/v1.7.0\\\"><code>path-to-regexp@^1.7.0</code></a> understands.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Redirect</span></span>\\n  <span class=\\\"token attr-name\\\">to</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">{</span>\\n    pathname<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">&quot;/login&quot;</span><span class=\\\"token punctuation\\\">,</span>\\n    search<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">&quot;?utm=your+face&quot;</span><span class=\\\"token punctuation\\\">,</span>\\n    state<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span> referrer<span class=\\\"token punctuation\\\">:</span> currentLocation <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></span>\\n<span class=\\\"token punctuation\\\">/&gt;</span></span>\\n</code></pre>\\n<p>The <code>state</code> object can be accessed via <code>this.props.location.state</code> in the redirected-to component. This new <code>referrer</code> key (which is not a special name) would then be accessed via <code>this.props.location.state.referrer</code> in the <code>Login</code> component pointed to by the pathname <code>&apos;/login&apos;</code></p>\\n<h2 id=\\\"Redirect-push-bool\\\"><a href=\\\"/core/api/Redirect/push-bool\\\" class=\\\"internal-link\\\">push: bool</a></h2>\\n<p>When <code>true</code>, redirecting will push a new entry onto the history instead of replacing the current one.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Redirect</span></span> <span class=\\\"token attr-name\\\">push</span> <span class=\\\"token attr-name\\\">to</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/somewhere/else<span class=\\\"token punctuation\\\">&quot;</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n</code></pre>\\n<h2 id=\\\"Redirect-from-string\\\"><a href=\\\"/core/api/Redirect/from-string\\\" class=\\\"internal-link\\\">from: string</a></h2>\\n<p>A pathname to redirect from. Any valid URL path that <a href=\\\"https://github.com/pillarjs/path-to-regexp/tree/v1.7.0\\\"><code>path-to-regexp@^1.7.0</code></a> understands.\\nAll matched URL parameters are provided to the pattern in <code>to</code>. Must contain all parameters that are used in <code>to</code>. Additional parameters not used by <code>to</code> are ignored.</p>\\n<p><strong>Note:</strong> This can only be used to match a location when rendering a <code>&lt;Redirect&gt;</code> inside of a <code>&lt;Switch&gt;</code>. See <a href=\\\"/core/api/Switch/children-node\\\" class=\\\"internal-link\\\"><code>&lt;Switch children&gt;</code></a> for more details.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Switch</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Redirect</span></span> <span class=\\\"token attr-name\\\">from</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/old-path<span class=\\\"token punctuation\\\">&quot;</span></span> <span class=\\\"token attr-name\\\">to</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/new-path<span class=\\\"token punctuation\\\">&quot;</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/new-path<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Place</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Route</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Switch</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n\\n<span class=\\\"token comment\\\">// Redirect with matched parameters</span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Switch</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Redirect</span></span> <span class=\\\"token attr-name\\\">from</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/users/:id<span class=\\\"token punctuation\\\">&quot;</span></span> <span class=\\\"token attr-name\\\">to</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/users/profile/:id<span class=\\\"token punctuation\\\">&quot;</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/users/profile/:id<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Profile</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Route</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Switch</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n</code></pre>\\n<h2 id=\\\"Redirect-exact-bool\\\"><a href=\\\"/core/api/Redirect/exact-bool\\\" class=\\\"internal-link\\\">exact: bool</a></h2>\\n<p>Match <code>from</code> exactly; equivalent to <a href=\\\"/core/api/Route/exact-bool\\\" class=\\\"internal-link\\\">Route.exact</a>.</p>\\n<p><strong>Note:</strong> This can only be used in conjunction with <code>from</code> to exactly match a location when rendering a <code>&lt;Redirect&gt;</code> inside of a <code>&lt;Switch&gt;</code>. See <a href=\\\"/core/api/Switch/children-node\\\" class=\\\"internal-link\\\"><code>&lt;Switch children&gt;</code></a> for more details.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Switch</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Redirect</span></span> <span class=\\\"token attr-name\\\">exact</span> <span class=\\\"token attr-name\\\">from</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/<span class=\\\"token punctuation\\\">&quot;</span></span> <span class=\\\"token attr-name\\\">to</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/home<span class=\\\"token punctuation\\\">&quot;</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/home<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Home</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Route</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/about<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">About</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Route</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Switch</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n</code></pre>\\n<h2 id=\\\"Redirect-strict-bool\\\"><a href=\\\"/core/api/Redirect/strict-bool\\\" class=\\\"internal-link\\\">strict: bool</a></h2>\\n<p>Match <code>from</code> strictly; equivalent to <a href=\\\"/core/api/Route/strict-bool\\\" class=\\\"internal-link\\\">Route.strict</a>.</p>\\n<p><strong>Note:</strong> This can only be used in conjunction with <code>from</code> to strictly match a location when rendering a <code>&lt;Redirect&gt;</code> inside of a <code>&lt;Switch&gt;</code>. See <a href=\\\"/core/api/Switch/children-node\\\" class=\\\"internal-link\\\"><code>&lt;Switch children&gt;</code></a> for more details.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Switch</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Redirect</span></span> <span class=\\\"token attr-name\\\">strict</span> <span class=\\\"token attr-name\\\">from</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/one/<span class=\\\"token punctuation\\\">&quot;</span></span> <span class=\\\"token attr-name\\\">to</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/home<span class=\\\"token punctuation\\\">&quot;</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/home<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Home</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Route</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/about<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">About</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Route</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Switch</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n</code></pre>\\n<h2 id=\\\"Redirect-sensitive-bool\\\"><a href=\\\"/core/api/Redirect/sensitive-bool\\\" class=\\\"internal-link\\\">sensitive: bool</a></h2>\\n<p>Match <code>from</code> case sensitive; equivalent to <a href=\\\"/core/api/Route/sensitive-bool\\\" class=\\\"internal-link\\\">Route.sensitive</a>.</p>\\n\",\"headers\":[{\"text\":\"to: string\",\"slug\":\"to-string\"},{\"text\":\"to: object\",\"slug\":\"to-object\"},{\"text\":\"push: bool\",\"slug\":\"push-bool\"},{\"text\":\"from: string\",\"slug\":\"from-string\"},{\"text\":\"exact: bool\",\"slug\":\"exact-bool\"},{\"text\":\"strict: bool\",\"slug\":\"strict-bool\"},{\"text\":\"sensitive: bool\",\"slug\":\"sensitive-bool\"}],\"title\":{\"text\":\"<Redirect>\",\"slug\":\"Redirect\"}}","module.exports = {\"markup\":\"<h1 id=\\\"Route\\\"><a href=\\\"/core/api/Route\\\" class=\\\"internal-link\\\">&lt;Route&gt;</a></h1>\\n<p>The Route component is perhaps the most important component in React Router to understand and learn to use well. Its most basic responsibility is to render some UI when its <code>path</code> matches the current URL.</p>\\n<p>Consider the following code:</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">import</span> React <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> ReactDOM <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react-dom&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> BrowserRouter <span class=\\\"token keyword\\\">as</span> Router<span class=\\\"token punctuation\\\">,</span> Route <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react-router-dom&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n\\nReactDOM<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Router</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token attr-name\\\">exact</span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Home</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Route</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/news<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">NewsFeed</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Route</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Router</span></span><span class=\\\"token punctuation\\\">&gt;</span></span><span class=\\\"token punctuation\\\">,</span>\\n  node\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n<p>If the location of the app is <code>/</code> then the UI hierarchy will be something like:</p>\\n<pre><code class=\\\"language-html\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Home</span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n  <span class=\\\"token comment\\\">&lt;!-- react-empty: 2 --&gt;</span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n</code></pre>\\n<p>And if the location of the app is <code>/news</code> then the UI hierarchy will be:</p>\\n<pre><code class=\\\"language-html\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token comment\\\">&lt;!-- react-empty: 1 --&gt;</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>NewsFeed</span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n</code></pre>\\n<p>The &#x201C;react-empty&#x201D; comments are just implementation details of React&#x2019;s <code>null</code> rendering. But for our purposes, it is instructive. A Route is always technically &#x201C;rendered&#x201D; even though it&#x2019;s rendering <code>null</code>. When the <code>&lt;Route&gt;</code>&apos;s <code>path</code> matches the current URL, it renders its <code>children</code> (your component).</p>\\n<p>If the same component is used as the child of multiple <code>&lt;Route&gt;</code>s at the same point in the component tree, React will see this as the same component instance and the component&#x2019;s state will be preserved between route changes. If this isn&#x2019;t desired, a unique <code>key</code> prop added to each route component will cause React to recreate the component instance when the route changes.</p>\\n<h2 id=\\\"Route-route-render-methods\\\"><a href=\\\"/core/api/Route/route-render-methods\\\" class=\\\"internal-link\\\">Route render methods</a></h2>\\n<p>The recommended method of rendering something with a <code>&lt;Route&gt;</code> is to use <code>children</code> elements, as shown above. There are, however, a few other methods you can use to render something with a <code>&lt;Route&gt;</code>. These are provided mostly for supporting apps that were built with earlier versions of the router before hooks were introduced.</p>\\n<ul>\\n<li><a href=\\\"/core/api/Route/component\\\" class=\\\"internal-link\\\"><code>&lt;Route component&gt;</code></a></li>\\n<li><a href=\\\"/core/api/Route/render-func\\\" class=\\\"internal-link\\\"><code>&lt;Route render&gt;</code></a></li>\\n<li><a href=\\\"/core/api/Route/children-func\\\" class=\\\"internal-link\\\"><code>&lt;Route children&gt;</code> function</a></li>\\n</ul>\\n<p>You should use only one of these props on a given <code>&lt;Route&gt;</code>. See their explanations below to understand the differences between them.</p>\\n<h2 id=\\\"Route-route-props\\\"><a href=\\\"/core/api/Route/route-props\\\" class=\\\"internal-link\\\">Route props</a></h2>\\n<p>All three <a href=\\\"/core/api/Route/route-render-methods\\\" class=\\\"internal-link\\\">render methods</a> will be passed the same three route props</p>\\n<ul>\\n<li><a href=\\\"/core/api/match\\\" class=\\\"internal-link\\\">match</a></li>\\n<li><a href=\\\"/core/api/location\\\" class=\\\"internal-link\\\">location</a></li>\\n<li><a href=\\\"/core/api/history\\\" class=\\\"internal-link\\\">history</a></li>\\n</ul>\\n<h2 id=\\\"Route-component\\\"><a href=\\\"/core/api/Route/component\\\" class=\\\"internal-link\\\">component</a></h2>\\n<p>A React component to render only when the location matches. It will be\\nrendered with <a href=\\\"/core/api/Route/route-props\\\" class=\\\"internal-link\\\">route props</a>.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">import</span> React <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> ReactDOM <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react-dom&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> BrowserRouter <span class=\\\"token keyword\\\">as</span> Router<span class=\\\"token punctuation\\\">,</span> Route <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react-router-dom&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// All route props (match, location and history) are available to User</span>\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">User</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">props</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>h1</span><span class=\\\"token punctuation\\\">&gt;</span></span>Hello <span class=\\\"token punctuation\\\">{</span>props<span class=\\\"token punctuation\\\">.</span>match<span class=\\\"token punctuation\\\">.</span>params<span class=\\\"token punctuation\\\">.</span>username<span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">!</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>h1</span><span class=\\\"token punctuation\\\">&gt;</span></span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\nReactDOM<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Router</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/user/:username<span class=\\\"token punctuation\\\">&quot;</span></span> <span class=\\\"token attr-name\\\">component</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>User<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Router</span></span><span class=\\\"token punctuation\\\">&gt;</span></span><span class=\\\"token punctuation\\\">,</span>\\n  node\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n<p>When you use <code>component</code> (instead of <code>render</code> or <code>children</code>, below) the router uses <a href=\\\"https://facebook.github.io/react/docs/react-api.html#createelement\\\"><code>React.createElement</code></a> to create a new <a href=\\\"https://facebook.github.io/react/docs/rendering-elements.html\\\">React element</a> from the given component. That means if you provide an inline function to the <code>component</code> prop, you would create a new component every render. This results in the existing component unmounting and the new component mounting instead of just updating the existing component. When using an inline function for inline rendering, use the <code>render</code> or the <code>children</code> prop (below).</p>\\n<h2 id=\\\"Route-render-func\\\"><a href=\\\"/core/api/Route/render-func\\\" class=\\\"internal-link\\\">render: func</a></h2>\\n<p>This allows for convenient inline rendering and wrapping without the undesired remounting explained above.</p>\\n<p>Instead of having a new <a href=\\\"https://facebook.github.io/react/docs/rendering-elements.html\\\">React element</a> created for you using the <a href=\\\"/core/api/Route/component\\\" class=\\\"internal-link\\\"><code>component</code></a> prop, you can pass in a function to be called when the location matches. The <code>render</code> prop function has access to all the same <a href=\\\"/core/api/Route/route-props\\\" class=\\\"internal-link\\\">route props</a> (match, location and history) as the <code>component</code> render prop.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">import</span> React <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> ReactDOM <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react-dom&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> BrowserRouter <span class=\\\"token keyword\\\">as</span> Router<span class=\\\"token punctuation\\\">,</span> Route <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react-router-dom&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// convenient inline rendering</span>\\nReactDOM<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Router</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/home<span class=\\\"token punctuation\\\">&quot;</span></span> <span class=\\\"token attr-name\\\">render</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span>Home<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span><span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Router</span></span><span class=\\\"token punctuation\\\">&gt;</span></span><span class=\\\"token punctuation\\\">,</span>\\n  node\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// wrapping/composing</span>\\n<span class=\\\"token comment\\\">// You can spread routeProps to make them available to your rendered Component</span>\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">FadingRoute</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\"><span class=\\\"token punctuation\\\">{</span> component<span class=\\\"token punctuation\\\">:</span> Component<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token operator\\\">...</span>rest <span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span>\\n      <span class=\\\"token spread\\\"><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">...</span><span class=\\\"token attr-value\\\">rest</span><span class=\\\"token punctuation\\\">}</span></span>\\n      <span class=\\\"token attr-name\\\">render</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token parameter\\\">routeProps</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">(</span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">FadeIn</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n          <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Component</span></span> <span class=\\\"token spread\\\"><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">...</span><span class=\\\"token attr-value\\\">routeProps</span><span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">FadeIn</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span></span>\\n    <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\nReactDOM<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Router</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">FadingRoute</span></span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/cool<span class=\\\"token punctuation\\\">&quot;</span></span> <span class=\\\"token attr-name\\\">component</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>Something<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Router</span></span><span class=\\\"token punctuation\\\">&gt;</span></span><span class=\\\"token punctuation\\\">,</span>\\n  node\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n<p><strong>Warning:</strong> <code>&lt;Route component&gt;</code> takes precedence over <code>&lt;Route render&gt;</code> so don&#x2019;t use both in the same <code>&lt;Route&gt;</code>.</p>\\n<h2 id=\\\"Route-children-func\\\"><a href=\\\"/core/api/Route/children-func\\\" class=\\\"internal-link\\\">children: func</a></h2>\\n<p>Sometimes you need to render whether the path matches the location or not. In these cases, you can use the function <code>children</code> prop. It works exactly like <code>render</code> except that it gets called whether there is a match or not.</p>\\n<p>The <code>children</code> render prop receives all the same <a href=\\\"/core/api/Route/route-props\\\" class=\\\"internal-link\\\">route props</a> as the <code>component</code> and <code>render</code> methods, except when a route fails to match the URL, then <code>match</code> is <code>null</code>. This allows you to dynamically adjust your UI based on whether or not the route matches. Here we&#x2019;re adding an <code>active</code> class if the route matches</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">import</span> React <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> ReactDOM <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react-dom&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span>\\n  BrowserRouter <span class=\\\"token keyword\\\">as</span> Router<span class=\\\"token punctuation\\\">,</span>\\n  Link<span class=\\\"token punctuation\\\">,</span>\\n  Route\\n<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react-router-dom&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">ListItemLink</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\"><span class=\\\"token punctuation\\\">{</span> to<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token operator\\\">...</span>rest <span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span>\\n      <span class=\\\"token attr-name\\\">path</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>to<span class=\\\"token punctuation\\\">}</span></span>\\n      <span class=\\\"token attr-name\\\">children</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\"><span class=\\\"token punctuation\\\">{</span> match <span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">(</span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>li</span> <span class=\\\"token attr-name\\\">className</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>match <span class=\\\"token operator\\\">?</span> <span class=\\\"token string\\\">&quot;active&quot;</span> <span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">&quot;&quot;</span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n          <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Link</span></span> <span class=\\\"token attr-name\\\">to</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>to<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token spread\\\"><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">...</span><span class=\\\"token attr-value\\\">rest</span><span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>li</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span></span>\\n    <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\nReactDOM<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Router</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>ul</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">ListItemLink</span></span> <span class=\\\"token attr-name\\\">to</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/somewhere<span class=\\\"token punctuation\\\">&quot;</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">ListItemLink</span></span> <span class=\\\"token attr-name\\\">to</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/somewhere-else<span class=\\\"token punctuation\\\">&quot;</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>ul</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Router</span></span><span class=\\\"token punctuation\\\">&gt;</span></span><span class=\\\"token punctuation\\\">,</span>\\n  node\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n<p>This could also be useful for animations:</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span>\\n  <span class=\\\"token attr-name\\\">children</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\"><span class=\\\"token punctuation\\\">{</span> match<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token operator\\\">...</span>rest <span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token punctuation\\\">{</span><span class=\\\"token comment\\\">/* Animate will always render, so you can use lifecycles\\n        to animate its child in and out */</span><span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Animate</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token punctuation\\\">{</span>match <span class=\\\"token operator\\\">&amp;&amp;</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Something</span></span> <span class=\\\"token spread\\\"><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">...</span><span class=\\\"token attr-value\\\">rest</span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">/&gt;</span></span><span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Animate</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span></span>\\n<span class=\\\"token punctuation\\\">/&gt;</span></span>\\n</code></pre>\\n<p><strong>Warning:</strong> <code>&lt;Route children&gt;</code> takes precedence over both <code>&lt;Route component&gt;</code> and <code>&lt;Route render&gt;</code> so don&#x2019;t use more than one in the same <code>&lt;Route&gt;</code>.</p>\\n<h2 id=\\\"Route-path-string-string\\\"><a href=\\\"/core/api/Route/path-string-string\\\" class=\\\"internal-link\\\">path: string | string[]</a></h2>\\n<p>Any valid URL path or array of paths that <a href=\\\"https://github.com/pillarjs/path-to-regexp/tree/v1.7.0\\\"><code>path-to-regexp@^1.7.0</code></a> understands.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/users/:id<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">User</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Route</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n</code></pre>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">&quot;/users/:id&quot;</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">&quot;/profile/:id&quot;</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">User</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Route</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n</code></pre>\\n<p>Routes without a <code>path</code> <em>always</em> match.</p>\\n<h2 id=\\\"Route-exact-bool\\\"><a href=\\\"/core/api/Route/exact-bool\\\" class=\\\"internal-link\\\">exact: bool</a></h2>\\n<p>When <code>true</code>, will only match if the path matches the <code>location.pathname</code> <em>exactly</em>.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token attr-name\\\">exact</span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/one<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">About</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Route</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n</code></pre>\\n<table>\\n<thead>\\n<tr>\\n<th>path</th>\\n<th>location.pathname</th>\\n<th>exact</th>\\n<th>matches?</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><code>/one</code></td>\\n<td><code>/one/two</code></td>\\n<td><code>true</code></td>\\n<td>no</td>\\n</tr>\\n<tr>\\n<td><code>/one</code></td>\\n<td><code>/one/two</code></td>\\n<td><code>false</code></td>\\n<td>yes</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"Route-strict-bool\\\"><a href=\\\"/core/api/Route/strict-bool\\\" class=\\\"internal-link\\\">strict: bool</a></h2>\\n<p>When <code>true</code>, a <code>path</code> that has a trailing slash will only match a <code>location.pathname</code> with a trailing slash. This has no effect when there are additional URL segments in the <code>location.pathname</code>.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token attr-name\\\">strict</span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/one/<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">About</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Route</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n</code></pre>\\n<table>\\n<thead>\\n<tr>\\n<th>path</th>\\n<th>location.pathname</th>\\n<th>matches?</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><code>/one/</code></td>\\n<td><code>/one</code></td>\\n<td>no</td>\\n</tr>\\n<tr>\\n<td><code>/one/</code></td>\\n<td><code>/one/</code></td>\\n<td>yes</td>\\n</tr>\\n<tr>\\n<td><code>/one/</code></td>\\n<td><code>/one/two</code></td>\\n<td>yes</td>\\n</tr>\\n</tbody>\\n</table>\\n<p><strong>Warning:</strong> <code>strict</code> can be used to enforce that a <code>location.pathname</code> has no trailing slash, but in order to do this both <code>strict</code> and <code>exact</code> must be <code>true</code>.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token attr-name\\\">exact</span> <span class=\\\"token attr-name\\\">strict</span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/one<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">About</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Route</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n</code></pre>\\n<table>\\n<thead>\\n<tr>\\n<th>path</th>\\n<th>location.pathname</th>\\n<th>matches?</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><code>/one</code></td>\\n<td><code>/one</code></td>\\n<td>yes</td>\\n</tr>\\n<tr>\\n<td><code>/one</code></td>\\n<td><code>/one/</code></td>\\n<td>no</td>\\n</tr>\\n<tr>\\n<td><code>/one</code></td>\\n<td><code>/one/two</code></td>\\n<td>no</td>\\n</tr>\\n</tbody>\\n</table>\\n<h2 id=\\\"Route-location-object\\\"><a href=\\\"/core/api/Route/location-object\\\" class=\\\"internal-link\\\">location: object</a></h2>\\n<p>A <code>&lt;Route&gt;</code> element tries to match its <code>path</code> to the current history location (usually the current browser URL).\\nHowever, a <a href=\\\"/core/api/location\\\" class=\\\"internal-link\\\"><code>location</code></a> with a different <code>pathname</code> can also be passed for matching.</p>\\n<p>This is useful in cases when you need to match a <code>&lt;Route&gt;</code> to a location other than the current history location, as shown in the <a href=\\\"https://reactrouter.com/web/example/animated-transitions\\\">Animated Transitions</a> example.</p>\\n<p>If a <code>&lt;Route&gt;</code> element is wrapped in a <code>&lt;Switch&gt;</code> and matches the location passed to the <code>&lt;Switch&gt;</code> (or the current history location), then the <code>location</code> prop passed to <code>&lt;Route&gt;</code> will be overridden by the one used by the <code>&lt;Switch&gt;</code> (given <a href=\\\"https://github.com/remix-run/react-router/blob/main/packages/react-router/modules/Switch.js#L51\\\">here</a>).</p>\\n<h2 id=\\\"Route-sensitive-bool\\\"><a href=\\\"/core/api/Route/sensitive-bool\\\" class=\\\"internal-link\\\">sensitive: bool</a></h2>\\n<p>When <code>true</code>, will match if the path is <strong>case sensitive</strong>.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token attr-name\\\">sensitive</span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/one<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">About</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Route</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n</code></pre>\\n<table>\\n<thead>\\n<tr>\\n<th>path</th>\\n<th>location.pathname</th>\\n<th>sensitive</th>\\n<th>matches?</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><code>/one</code></td>\\n<td><code>/one</code></td>\\n<td><code>true</code></td>\\n<td>yes</td>\\n</tr>\\n<tr>\\n<td><code>/One</code></td>\\n<td><code>/one</code></td>\\n<td><code>true</code></td>\\n<td>no</td>\\n</tr>\\n<tr>\\n<td><code>/One</code></td>\\n<td><code>/one</code></td>\\n<td><code>false</code></td>\\n<td>yes</td>\\n</tr>\\n</tbody>\\n</table>\\n\",\"headers\":[{\"text\":\"Route render methods\",\"slug\":\"route-render-methods\"},{\"text\":\"Route props\",\"slug\":\"route-props\"},{\"text\":\"component\",\"slug\":\"component\"},{\"text\":\"render: func\",\"slug\":\"render-func\"},{\"text\":\"children: func\",\"slug\":\"children-func\"},{\"text\":\"path: string | string[]\",\"slug\":\"path-string-string\"},{\"text\":\"exact: bool\",\"slug\":\"exact-bool\"},{\"text\":\"strict: bool\",\"slug\":\"strict-bool\"},{\"text\":\"location: object\",\"slug\":\"location-object\"},{\"text\":\"sensitive: bool\",\"slug\":\"sensitive-bool\"}],\"title\":{\"text\":\"<Route>\",\"slug\":\"Route\"}}","module.exports = {\"markup\":\"<h1 id=\\\"Router\\\"><a href=\\\"/core/api/Router\\\" class=\\\"internal-link\\\">&lt;Router&gt;</a></h1>\\n<p>The common low-level interface for all router components. Typically apps will use one of the high-level routers instead:</p>\\n<ul>\\n<li><a href=\\\"/web/api/BrowserRouter\\\" class=\\\"internal-link\\\"><code>&lt;BrowserRouter&gt;</code></a></li>\\n<li><a href=\\\"/web/api/HashRouter\\\" class=\\\"internal-link\\\"><code>&lt;HashRouter&gt;</code></a></li>\\n<li><a href=\\\"/core/api/MemoryRouter\\\" class=\\\"internal-link\\\"><code>&lt;MemoryRouter&gt;</code></a></li>\\n<li><a href=\\\"/native/api/NativeRouter\\\" class=\\\"internal-link\\\"><code>&lt;NativeRouter&gt;</code></a></li>\\n<li><a href=\\\"/core/api/StaticRouter\\\" class=\\\"internal-link\\\"><code>&lt;StaticRouter&gt;</code></a></li>\\n</ul>\\n<p>The most common use-case for using the low-level <code>&lt;Router&gt;</code> is to\\nsynchronize a custom history with a state management lib like Redux or Mobx. Note that this is not required to use state management libs alongside React Router, it&#x2019;s only for deep integration.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">import</span> React <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> ReactDOM <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react-dom&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> Router <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react-router&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> createBrowserHistory <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;history&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> history <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">createBrowserHistory</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\nReactDOM<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Router</span></span> <span class=\\\"token attr-name\\\">history</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>history<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">App</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Router</span></span><span class=\\\"token punctuation\\\">&gt;</span></span><span class=\\\"token punctuation\\\">,</span>\\n  node\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n<h2 id=\\\"Router-history-object\\\"><a href=\\\"/core/api/Router/history-object\\\" class=\\\"internal-link\\\">history: object</a></h2>\\n<p>A <a href=\\\"https://github.com/remix-run/history\\\"><code>history</code></a> object to use for navigation.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">import</span> React <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> ReactDOM <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react-dom&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> createBrowserHistory <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;history&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> customHistory <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">createBrowserHistory</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\nReactDOM<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Router</span></span> <span class=\\\"token attr-name\\\">history</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>customHistory<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span><span class=\\\"token punctuation\\\">,</span> node<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n<h2 id=\\\"Router-children-node\\\"><a href=\\\"/core/api/Router/children-node\\\" class=\\\"internal-link\\\">children: node</a></h2>\\n<p>A child element to render.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Router</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">App</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Router</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n</code></pre>\\n\",\"headers\":[{\"text\":\"history: object\",\"slug\":\"history-object\"},{\"text\":\"children: node\",\"slug\":\"children-node\"}],\"title\":{\"text\":\"<Router>\",\"slug\":\"Router\"}}","module.exports = {\"markup\":\"<h1 id=\\\"StaticRouter\\\"><a href=\\\"/core/api/StaticRouter\\\" class=\\\"internal-link\\\">&lt;StaticRouter&gt;</a></h1>\\n<p>A <a href=\\\"Router.md\\\"><code>&lt;Router&gt;</code></a> that never changes location.</p>\\n<p>This can be useful in server-side rendering scenarios when the user isn&#x2019;t actually clicking around, so the location never actually changes. Hence, the name: static. It&#x2019;s also useful in simple tests when you just need to plug in a location and make assertions on the render output.</p>\\n<p>Here&#x2019;s an example node server that sends a 302 status code for <a href=\\\"Redirect.md\\\"><code>&lt;Redirect&gt;</code></a>s and regular HTML for other requests:</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">import</span> http <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;http&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> React <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> ReactDOMServer <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react-dom/server&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> StaticRouter <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react-router&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n\\nhttp\\n  <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">createServer</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">req<span class=\\\"token punctuation\\\">,</span> res</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">// This context object contains the results of the render</span>\\n    <span class=\\\"token keyword\\\">const</span> context <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token keyword\\\">const</span> html <span class=\\\"token operator\\\">=</span> ReactDOMServer<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">renderToString</span><span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">StaticRouter</span></span> <span class=\\\"token attr-name\\\">location</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>req<span class=\\\"token punctuation\\\">.</span>url<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token attr-name\\\">context</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>context<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">App</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">StaticRouter</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token comment\\\">// context.url will contain the URL to redirect to if a &lt;Redirect&gt; was used</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>context<span class=\\\"token punctuation\\\">.</span>url<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      res<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">writeHead</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">302</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>\\n        Location<span class=\\\"token punctuation\\\">:</span> context<span class=\\\"token punctuation\\\">.</span>url\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      res<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">end</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n      res<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">write</span><span class=\\\"token punctuation\\\">(</span>html<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      res<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">end</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">listen</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">3000</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n<h2 id=\\\"StaticRouter-basename-string\\\"><a href=\\\"/core/api/StaticRouter/basename-string\\\" class=\\\"internal-link\\\">basename: string</a></h2>\\n<p>The base URL for all locations. A properly formatted basename should have a leading slash, but no trailing slash.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">StaticRouter</span></span> <span class=\\\"token attr-name\\\">basename</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/calendar<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Link</span></span> <span class=\\\"token attr-name\\\">to</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/today<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">/&gt;</span></span> <span class=\\\"token comment\\\">// renders &lt;a href=&quot;/calendar/today&quot;&gt;</span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">StaticRouter</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n</code></pre>\\n<h2 id=\\\"StaticRouter-location-string\\\"><a href=\\\"/core/api/StaticRouter/location-string\\\" class=\\\"internal-link\\\">location: string</a></h2>\\n<p>The URL the server received, probably <code>req.url</code> on a node server.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">StaticRouter</span></span> <span class=\\\"token attr-name\\\">location</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>req<span class=\\\"token punctuation\\\">.</span>url<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">App</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">StaticRouter</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n</code></pre>\\n<h2 id=\\\"StaticRouter-location-object\\\"><a href=\\\"/core/api/StaticRouter/location-object\\\" class=\\\"internal-link\\\">location: object</a></h2>\\n<p>A location object shaped like <code>{ pathname, search, hash, state }</code></p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">StaticRouter</span></span> <span class=\\\"token attr-name\\\">location</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">{</span> pathname<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">&quot;/bubblegum&quot;</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">App</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">StaticRouter</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n</code></pre>\\n<h2 id=\\\"StaticRouter-context-object\\\"><a href=\\\"/core/api/StaticRouter/context-object\\\" class=\\\"internal-link\\\">context: object</a></h2>\\n<p>A plain JavaScript object. During the render, components can add properties to the object to store information about the render.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">const</span> context <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">StaticRouter</span></span> <span class=\\\"token attr-name\\\">context</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>context<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">App</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">StaticRouter</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n</code></pre>\\n<p>When a <code>&lt;Route&gt;</code> matches, it will pass the context object to the component it renders as the <code>staticContext</code> prop. Check out the <a href=\\\"/web/guides/server-rendering\\\" class=\\\"internal-link\\\">Server Rendering guide</a> for more information on how to do this yourself.</p>\\n<p>After the render, these properties can be used to to configure the server&#x2019;s response.</p>\\n<pre><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>context<span class=\\\"token punctuation\\\">.</span>status <span class=\\\"token operator\\\">===</span> <span class=\\\"token string\\\">&quot;404&quot;</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">// ...</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n<h2 id=\\\"StaticRouter-children-node\\\"><a href=\\\"/core/api/StaticRouter/children-node\\\" class=\\\"internal-link\\\">children: node</a></h2>\\n<p>The child elements to render.</p>\\n<p>Note: On React &lt; 16 you must use a <a href=\\\"https://facebook.github.io/react/docs/react-api.html#reactchildrenonly\\\">single child element</a> since a render method cannot return more than one element. If you need more than one element, you might try wrapping them in an extra <code>&lt;div&gt;</code> or <code>&lt;React.Fragment&gt;</code>.</p>\\n\",\"headers\":[{\"text\":\"basename: string\",\"slug\":\"basename-string\"},{\"text\":\"location: string\",\"slug\":\"location-string\"},{\"text\":\"location: object\",\"slug\":\"location-object\"},{\"text\":\"context: object\",\"slug\":\"context-object\"},{\"text\":\"children: node\",\"slug\":\"children-node\"}],\"title\":{\"text\":\"<StaticRouter>\",\"slug\":\"StaticRouter\"}}","module.exports = {\"markup\":\"<h1 id=\\\"Switch\\\"><a href=\\\"/core/api/Switch\\\" class=\\\"internal-link\\\">&lt;Switch&gt;</a></h1>\\n<p>Renders the first child <a href=\\\"Route.md\\\"><code>&lt;Route&gt;</code></a> or <a href=\\\"Redirect.md\\\"><code>&lt;Redirect&gt;</code></a> that matches the location.</p>\\n<p><strong>How is this different than just using a bunch of <code>&lt;Route&gt;</code>s?</strong></p>\\n<p><code>&lt;Switch&gt;</code> is unique in that it renders a route <em>exclusively</em>. In contrast, every <code>&lt;Route&gt;</code> that matches the location renders <em>inclusively</em>. Consider these routes:</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> Route <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react-router&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">let</span> routes <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/about<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">About</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Route</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/:user<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">User</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Route</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">NoMatch</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Route</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n<p>If the URL is <code>/about</code>, then <code>&lt;About&gt;</code>, <code>&lt;User&gt;</code>, and <code>&lt;NoMatch&gt;</code> will all render because they all match the path. This is by design, allowing us to compose <code>&lt;Route&gt;</code>s into our apps in many ways, like sidebars and breadcrumbs, bootstrap tabs, etc.</p>\\n<p>Occasionally, however, we want to pick only one <code>&lt;Route&gt;</code> to render. If we&#x2019;re at <code>/about</code> we don&#x2019;t want to also match <code>/:user</code> (or show our &#x201C;404&#x201D; page). Here&#x2019;s how to do it with <code>Switch</code>:</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> Route<span class=\\\"token punctuation\\\">,</span> Switch <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react-router&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">let</span> routes <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Switch</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token attr-name\\\">exact</span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Home</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Route</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/about<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">About</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Route</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/:user<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">User</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Route</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">NoMatch</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Route</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Switch</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n<p>Now, if we&#x2019;re at <code>/about</code>, <code>&lt;Switch&gt;</code> will start looking for a matching <code>&lt;Route&gt;</code>. <code>&lt;Route path=&quot;/about&quot;/&gt;</code> will match and <code>&lt;Switch&gt;</code> will stop looking for matches and render <code>&lt;About&gt;</code>. Similarly, if we&#x2019;re at <code>/michael</code> then <code>&lt;User&gt;</code> will render.</p>\\n<p>This is also useful for animated transitions since the matched <code>&lt;Route&gt;</code> is rendered in the same position as the previous one.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">let</span> routes <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Fade</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Switch</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token punctuation\\\">{</span><span class=\\\"token comment\\\">/* there will only ever be one child here */</span><span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Switch</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Fade</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">let</span> routes <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Fade</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token punctuation\\\">{</span><span class=\\\"token comment\\\">/* there will always be two children here,\\n        one might render null though, making transitions\\n        a bit more cumbersome to work out */</span><span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Fade</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n<h2 id=\\\"Switch-location-object\\\"><a href=\\\"/core/api/Switch/location-object\\\" class=\\\"internal-link\\\">location: object</a></h2>\\n<p>A <a href=\\\"/core/api/location\\\" class=\\\"internal-link\\\"><code>location</code></a> object to be used for matching children elements instead of the current history location (usually the current browser URL).</p>\\n<h2 id=\\\"Switch-children-node\\\"><a href=\\\"/core/api/Switch/children-node\\\" class=\\\"internal-link\\\">children: node</a></h2>\\n<p>All children of a <code>&lt;Switch&gt;</code> should be <code>&lt;Route&gt;</code> or <code>&lt;Redirect&gt;</code> elements. Only the first child to match the current location will be rendered.</p>\\n<p><code>&lt;Route&gt;</code> elements are matched using their <code>path</code> prop and <code>&lt;Redirect&gt;</code> elements are matched using their <code>from</code> prop. A <code>&lt;Route&gt;</code> with no <code>path</code> prop or a <code>&lt;Redirect&gt;</code> with no <code>from</code> prop will always match the current location.</p>\\n<p>When you include a <code>&lt;Redirect&gt;</code> in a <code>&lt;Switch&gt;</code>, it can use any of the <code>&lt;Route&gt;</code>&apos;s location matching props: <code>path</code>, <code>exact</code>, and <code>strict</code>. <code>from</code> is just an alias for the <code>path</code> prop.</p>\\n<p>If a <code>location</code> prop is given to the <code>&lt;Switch&gt;</code>, it will override the <code>location</code> prop on the matching child element.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> Redirect<span class=\\\"token punctuation\\\">,</span> Route<span class=\\\"token punctuation\\\">,</span> Switch <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react-router&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">let</span> routes <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Switch</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token attr-name\\\">exact</span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Home</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Route</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/users<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Users</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Route</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Redirect</span></span> <span class=\\\"token attr-name\\\">from</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/accounts<span class=\\\"token punctuation\\\">&quot;</span></span> <span class=\\\"token attr-name\\\">to</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/users<span class=\\\"token punctuation\\\">&quot;</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">NoMatch</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Route</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Switch</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n\",\"headers\":[{\"text\":\"location: object\",\"slug\":\"location-object\"},{\"text\":\"children: node\",\"slug\":\"children-node\"}],\"title\":{\"text\":\"<Switch>\",\"slug\":\"Switch\"}}","module.exports = {\"markup\":\"<h1 id=\\\"history\\\"><a href=\\\"/core/api/history\\\" class=\\\"internal-link\\\">history</a></h1>\\n<p>The term &#x201C;history&#x201D; and &quot;<code>history</code> object&quot; in this documentation refers to <a href=\\\"%5Bhttps://github.com/remix-run/history%5D(https://github.com/remix-run/history/tree/v4)\\\">the <code>history</code> package</a>, which is one of only 2 major dependencies of React Router (besides React itself), and which provides several different implementations for managing session history in JavaScript in various environments.</p>\\n<p>The following terms are also used:</p>\\n<ul>\\n<li>&#x201C;browser history&#x201D; - A DOM-specific implementation, useful in web browsers that support the HTML5 history API</li>\\n<li>&#x201C;hash history&#x201D; - A DOM-specific implementation for legacy web browsers</li>\\n<li>&#x201C;memory history&#x201D; - An in-memory history implementation, useful in testing and non-DOM environments like React Native</li>\\n</ul>\\n<p><code>history</code> objects typically have the following properties and methods:</p>\\n<ul>\\n<li><code>length</code> - (number) The number of entries in the history stack</li>\\n<li><code>action</code> - (string) The current action (<code>PUSH</code>, <code>REPLACE</code>, or <code>POP</code>)</li>\\n<li><code>location</code> - (object) The current location. May have the following properties:\\n<ul>\\n<li><code>pathname</code> - (string) The path of the URL</li>\\n<li><code>search</code> - (string) The URL query string</li>\\n<li><code>hash</code> - (string) The URL hash fragment</li>\\n<li><code>state</code> - (object) location-specific state that was provided to e.g. <code>push(path, state)</code> when this location was pushed onto the stack. Only available in browser and memory history.</li>\\n</ul>\\n</li>\\n<li><code>push(path, [state])</code> - (function) Pushes a new entry onto the history stack</li>\\n<li><code>replace(path, [state])</code> - (function) Replaces the current entry on the history stack</li>\\n<li><code>go(n)</code> - (function) Moves the pointer in the history stack by <code>n</code> entries</li>\\n<li><code>goBack()</code> - (function) Equivalent to <code>go(-1)</code></li>\\n<li><code>goForward()</code> - (function) Equivalent to <code>go(1)</code></li>\\n<li><code>block(prompt)</code> - (function) Prevents navigation (see <a href=\\\"https://github.com/remix-run/history/blob/main/docs/blocking-transitions.md\\\">the history docs</a></li>\\n</ul>\\n<h2 id=\\\"history-history-is-mutable\\\"><a href=\\\"/core/api/history/history-is-mutable\\\" class=\\\"internal-link\\\">history is mutable</a></h2>\\n<p>The history object is mutable. Therefore it is recommended to access the <a href=\\\"/core/api/location\\\" class=\\\"internal-link\\\"><code>location</code></a> from the render props of <a href=\\\"/core/api/Route\\\" class=\\\"internal-link\\\"><code>&lt;Route&gt;</code></a>, not from <code>history.location</code>. This ensures your assumptions about React are correct in lifecycle hooks. For example:</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Comp</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">componentDidUpdate</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">prevProps</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">// will be true</span>\\n    <span class=\\\"token keyword\\\">const</span> locationChanged <span class=\\\"token operator\\\">=</span>\\n      <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">.</span>location <span class=\\\"token operator\\\">!==</span> prevProps<span class=\\\"token punctuation\\\">.</span>location<span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token comment\\\">// INCORRECT, will *always* be false because history is mutable.</span>\\n    <span class=\\\"token keyword\\\">const</span> locationChanged <span class=\\\"token operator\\\">=</span>\\n      <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">.</span>history<span class=\\\"token punctuation\\\">.</span>location <span class=\\\"token operator\\\">!==</span> prevProps<span class=\\\"token punctuation\\\">.</span>history<span class=\\\"token punctuation\\\">.</span>location<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token attr-name\\\">component</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>Comp<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n<p>Additional properties may also be present depending on the implementation you&#x2019;re using. Please refer to <a href=\\\"https://github.com/remix-run/history/tree/main/docs\\\">the history documentation</a> for more details.</p>\\n\",\"headers\":[{\"text\":\"history is mutable\",\"slug\":\"history-is-mutable\"}],\"title\":{\"text\":\"history\",\"slug\":\"history\"}}","module.exports = {\"markup\":\"<h1 id=\\\"location\\\"><a href=\\\"/core/api/location\\\" class=\\\"internal-link\\\">location</a></h1>\\n<p>Locations represent where the app is now, where you want it to go, or\\neven where it was. It looks like this:</p>\\n<pre><code class=\\\"language-js\\\"><span class=\\\"token punctuation\\\">{</span>\\n  key<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">&apos;ac3df4&apos;</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\">// not with HashHistory!</span>\\n  pathname<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">&apos;/somewhere&apos;</span><span class=\\\"token punctuation\\\">,</span>\\n  search<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">&apos;?some=search-string&apos;</span><span class=\\\"token punctuation\\\">,</span>\\n  hash<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">&apos;#howdy&apos;</span><span class=\\\"token punctuation\\\">,</span>\\n  state<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token punctuation\\\">[</span>userDefined<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n<p>The router will provide you with a location object in a few places:</p>\\n<ul>\\n<li><a href=\\\"/core/api/Route/component\\\" class=\\\"internal-link\\\">Route component</a> as <code>this.props.location</code></li>\\n<li><a href=\\\"/core/api/Route/render-func\\\" class=\\\"internal-link\\\">Route render</a> as <code>({ location }) =&gt; ()</code></li>\\n<li><a href=\\\"/core/api/Route/children-func\\\" class=\\\"internal-link\\\">Route children</a> as <code>({ location }) =&gt; ()</code></li>\\n<li><a href=\\\"/core/api/withRouter\\\" class=\\\"internal-link\\\">withRouter</a> as <code>this.props.location</code></li>\\n</ul>\\n<p>It is also found on <code>history.location</code> but you shouldn&#x2019;t use that because it&#x2019;s mutable. You can read more about that in the <a href=\\\"/core/api/history\\\" class=\\\"internal-link\\\">history</a> doc.</p>\\n<p>A location object is never mutated so you can use it in the lifecycle hooks to determine when navigation happens, this is really useful for data fetching and animation.</p>\\n<pre><code class=\\\"language-js\\\"><span class=\\\"token function\\\">componentWillReceiveProps</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">nextProps</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>nextProps<span class=\\\"token punctuation\\\">.</span>location <span class=\\\"token operator\\\">!==</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">.</span>location<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">// navigated!</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n<p>You can provide locations instead of strings to the various places that navigate:</p>\\n<ul>\\n<li>Web <a href=\\\"/web/api/Link/to\\\" class=\\\"internal-link\\\">Link to</a></li>\\n<li>Native <a href=\\\"/native/api/Link/to\\\" class=\\\"internal-link\\\">Link to</a></li>\\n<li><a href=\\\"/core/api/Redirect/to\\\" class=\\\"internal-link\\\">Redirect to</a></li>\\n<li><a href=\\\"/core/api/history/push\\\" class=\\\"internal-link\\\">history.push</a></li>\\n<li><a href=\\\"/core/api/history/push\\\" class=\\\"internal-link\\\">history.replace</a></li>\\n</ul>\\n<p>Normally you just use a string, but if you need to add some &#x201C;location state&#x201D; that will be available whenever the app returns to that specific location, you can use a location object instead. This is useful if you want to branch UI based on navigation history instead of just paths (like modals).</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token comment\\\">// usually all you need</span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Link</span></span> <span class=\\\"token attr-name\\\">to</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/somewhere<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">/&gt;</span></span>\\n\\n<span class=\\\"token comment\\\">// but you can use a location instead</span>\\n<span class=\\\"token keyword\\\">const</span> location <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  pathname<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">&apos;/somewhere&apos;</span><span class=\\\"token punctuation\\\">,</span>\\n  state<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span> fromDashboard<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span> <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Link</span></span> <span class=\\\"token attr-name\\\">to</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>location<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">/&gt;</span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Redirect</span></span> <span class=\\\"token attr-name\\\">to</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>location<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">/&gt;</span></span>\\nhistory<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">push</span><span class=\\\"token punctuation\\\">(</span>location<span class=\\\"token punctuation\\\">)</span>\\nhistory<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">replace</span><span class=\\\"token punctuation\\\">(</span>location<span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n<p>Finally, you can pass a location to the following components:</p>\\n<ul>\\n<li><a href=\\\"/core/api/Route/location\\\" class=\\\"internal-link\\\">Route</a></li>\\n<li><a href=\\\"/core/api/Switch/location\\\" class=\\\"internal-link\\\">Switch</a></li>\\n</ul>\\n<p>This will prevent them from using the actual location in the router&#x2019;s state. This is useful for animation and pending navigation, or any time you want to trick a component into rendering at a different location than the real one.</p>\\n\",\"headers\":[],\"title\":{\"text\":\"location\",\"slug\":\"location\"}}","module.exports = {\"markup\":\"<h1 id=\\\"match\\\"><a href=\\\"/core/api/match\\\" class=\\\"internal-link\\\">match</a></h1>\\n<p>A <code>match</code> object contains information about how a <code>&lt;Route path&gt;</code> matched the URL. <code>match</code> objects contain the following properties:</p>\\n<ul>\\n<li><code>params</code> - (object) Key/value pairs parsed from the URL corresponding to the dynamic segments of the path</li>\\n<li><code>isExact</code> - (boolean) <code>true</code> if the entire URL was matched (no trailing characters)</li>\\n<li><code>path</code> - (string) The path pattern used to match. Useful for building nested <code>&lt;Route&gt;</code>s</li>\\n<li><code>url</code> - (string) The matched portion of the URL. Useful for building nested <code>&lt;Link&gt;</code>s</li>\\n</ul>\\n<p>You&#x2019;ll have access to <code>match</code> objects in various places:</p>\\n<ul>\\n<li><a href=\\\"/core/api/Route/component\\\" class=\\\"internal-link\\\">Route component</a> as <code>this.props.match</code></li>\\n<li><a href=\\\"/core/api/Route/render-func\\\" class=\\\"internal-link\\\">Route render</a> as <code>({ match }) =&gt; ()</code></li>\\n<li><a href=\\\"/core/api/Route/children-func\\\" class=\\\"internal-link\\\">Route children</a> as <code>({ match }) =&gt; ()</code></li>\\n<li><a href=\\\"/core/api/withRouter\\\" class=\\\"internal-link\\\">withRouter</a> as <code>this.props.match</code></li>\\n<li><a href=\\\"/core/api/matchPath\\\" class=\\\"internal-link\\\">matchPath</a> as the return value</li>\\n<li><a href=\\\"/core/api/hooks/useroutematch\\\" class=\\\"internal-link\\\">useRouteMatch</a> as the return value</li>\\n</ul>\\n<p>If a Route does not have a <code>path</code>, and therefore always matches, you&#x2019;ll get the closest parent match. Same goes for <code>withRouter</code>.</p>\\n<h2 id=\\\"match-null-matches\\\"><a href=\\\"/core/api/match/null-matches\\\" class=\\\"internal-link\\\">null matches</a></h2>\\n<p>A <code>&lt;Route&gt;</code> that uses the <code>children</code> prop will call its <code>children</code> function even when the route&#x2019;s <code>path</code> does not match the current location. When this is the case, the <code>match</code> will be <code>null</code>. Being able to render a <code>&lt;Route&gt;</code>&apos;s contents when it does match can be useful, but certain challenges arise from this situation.</p>\\n<p>The default way to &#x201C;resolve&#x201D; URLs is to join the <code>match.url</code> string to the &#x201C;relative&#x201D; path.</p>\\n<pre><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">let</span> path <span class=\\\"token operator\\\">=</span> <span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>match<span class=\\\"token punctuation\\\">.</span>url<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">/relative-path</span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n<p>If you attempt to do this when the match is <code>null</code>, you will end up with a <code>TypeError</code>. This means that it is considered unsafe to attempt to join &#x201C;relative&#x201D; paths inside of a <code>&lt;Route&gt;</code> when using the <code>children</code> prop.</p>\\n<p>A similar, but more subtle situation occurs when you use a pathless <code>&lt;Route&gt;</code> inside of a <code>&lt;Route&gt;</code> that generates a <code>null</code> match object.</p>\\n<pre><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">// location.pathname = &apos;/matches&apos;</span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span> <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/does-not-match<span class=\\\"token punctuation\\\">&quot;</span></span>\\n  <span class=\\\"token attr-name\\\">children</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\"><span class=\\\"token punctuation\\\">{</span> match <span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token comment\\\">// match === null</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span>\\n      <span class=\\\"token attr-name\\\">render</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\"><span class=\\\"token punctuation\\\">{</span> match<span class=\\\"token punctuation\\\">:</span> pathlessMatch <span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">(</span>\\n        <span class=\\\"token comment\\\">// pathlessMatch === ???</span>\\n      <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span></span>\\n    <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span></span>\\n<span class=\\\"token punctuation\\\">/&gt;</span></span>\\n</code></pre>\\n<p>Pathless <code>&lt;Route&gt;</code>s inherit their <code>match</code> object from their parent. If their parent <code>match</code> is <code>null</code>, then their match will also be <code>null</code>. This means that a) any child routes/links will have to be absolute because there is no parent to resolve with and b) a pathless route whose parent <code>match</code> can be <code>null</code> will need to use the <code>children</code> prop to render.</p>\\n\",\"headers\":[{\"text\":\"null matches\",\"slug\":\"null-matches\"}],\"title\":{\"text\":\"match\",\"slug\":\"match\"}}","module.exports = {\"markup\":\"<h1 id=\\\"withRouter\\\"><a href=\\\"/core/api/withRouter\\\" class=\\\"internal-link\\\">withRouter</a></h1>\\n<p>You can get access to the <a href=\\\"/core/api/history\\\" class=\\\"internal-link\\\"><code>history</code></a> object&#x2019;s properties and the closest <a href=\\\"/core/api/Route\\\" class=\\\"internal-link\\\"><code>&lt;Route&gt;</code></a>&apos;s <a href=\\\"/core/api/match\\\" class=\\\"internal-link\\\"><code>match</code></a> via the <code>withRouter</code> higher-order component. <code>withRouter</code> will pass updated <code>match</code>, <code>location</code>, and <code>history</code> props to the wrapped component whenever it renders.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">import</span> React <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> PropTypes <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;prop-types&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> withRouter <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react-router&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// A simple component that shows the pathname of the current location</span>\\n<span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">ShowTheLocation</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">static</span> propTypes <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n    match<span class=\\\"token punctuation\\\">:</span> PropTypes<span class=\\\"token punctuation\\\">.</span>object<span class=\\\"token punctuation\\\">.</span>isRequired<span class=\\\"token punctuation\\\">,</span>\\n    location<span class=\\\"token punctuation\\\">:</span> PropTypes<span class=\\\"token punctuation\\\">.</span>object<span class=\\\"token punctuation\\\">.</span>isRequired<span class=\\\"token punctuation\\\">,</span>\\n    history<span class=\\\"token punctuation\\\">:</span> PropTypes<span class=\\\"token punctuation\\\">.</span>object<span class=\\\"token punctuation\\\">.</span>isRequired\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> match<span class=\\\"token punctuation\\\">,</span> location<span class=\\\"token punctuation\\\">,</span> history <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span>You are now at <span class=\\\"token punctuation\\\">{</span>location<span class=\\\"token punctuation\\\">.</span>pathname<span class=\\\"token punctuation\\\">}</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token comment\\\">// Create a new component that is &quot;connected&quot; (to borrow redux</span>\\n<span class=\\\"token comment\\\">// terminology) to the router.</span>\\n<span class=\\\"token keyword\\\">const</span> ShowTheLocationWithRouter <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">withRouter</span><span class=\\\"token punctuation\\\">(</span>ShowTheLocation<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n<h4>Important Note</h4>\\n<p><code>withRouter</code> does not subscribe to location changes like React Redux&#x2019;s <code>connect</code> does for state changes. Instead, re-renders after location changes propagate out from the <code>&lt;Router&gt;</code> component. This means that <code>withRouter</code> does <em>not</em> re-render on route transitions unless its parent component re-renders.</p>\\n<h4>Static Methods and Properties</h4>\\n<p>All non-react specific static methods and properties of the wrapped component are automatically copied to the\\n&quot;connected&quot; component.</p>\\n<h2 id=\\\"withRouter-componentwrappedcomponent\\\"><a href=\\\"/core/api/withRouter/componentwrappedcomponent\\\" class=\\\"internal-link\\\">Component.WrappedComponent</a></h2>\\n<p>The wrapped component is exposed as the static property <code>WrappedComponent</code> on the returned component, which can be used\\nfor testing the component in isolation, among other things.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token comment\\\">// MyComponent.js</span>\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token function\\\">withRouter</span><span class=\\\"token punctuation\\\">(</span>MyComponent<span class=\\\"token punctuation\\\">)</span>\\n\\n<span class=\\\"token comment\\\">// MyComponent.test.js</span>\\n<span class=\\\"token keyword\\\">import</span> MyComponent <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&apos;./MyComponent&apos;</span>\\n<span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">MyComponent.WrappedComponent</span></span> <span class=\\\"token attr-name\\\">location</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token operator\\\">...</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token attr-name\\\">...</span> <span class=\\\"token punctuation\\\">/&gt;</span></span><span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n<h2 id=\\\"withRouter-wrappedcomponentref-func\\\"><a href=\\\"/core/api/withRouter/wrappedcomponentref-func\\\" class=\\\"internal-link\\\">wrappedComponentRef: func</a></h2>\\n<p>A function that will be passed as the <code>ref</code> prop to the wrapped component.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Container</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">componentDidMount</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>component<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">doSomething</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">MyComponent</span></span> <span class=\\\"token attr-name\\\">wrappedComponentRef</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token parameter\\\">c</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>component <span class=\\\"token operator\\\">=</span> c<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n\",\"headers\":[{\"text\":\"Component.WrappedComponent\",\"slug\":\"componentwrappedcomponent\"},{\"text\":\"wrappedComponentRef: func\",\"slug\":\"wrappedcomponentref-func\"}],\"title\":{\"text\":\"withRouter\",\"slug\":\"withRouter\"}}","module.exports = {\"markup\":\"<h1 id=\\\"generatePath\\\"><a href=\\\"/core/api/generatePath\\\" class=\\\"internal-link\\\">generatePath</a></h1>\\n<p>The <code>generatePath</code> function can be used to generate URLs to the routes. Internally the <code>path-to-regexp</code> library is used.</p>\\n<pre><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> generatePath <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react-router&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">generatePath</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;/user/:id/:entity(posts|comments)&quot;</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>\\n  id<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span>\\n  entity<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">&quot;posts&quot;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// Will return /user/1/posts</span>\\n</code></pre>\\n<p>Results of compiling paths into regular expressions are cached, so there is no overhead on generating multiple paths with the same pattern.</p>\\n<h2 id=\\\"generatePath-pattern-string\\\"><a href=\\\"/core/api/generatePath/pattern-string\\\" class=\\\"internal-link\\\">pattern: string</a></h2>\\n<p><code>generatePath</code> takes 2 arguments. The first one is a pattern provided as a path attribute to the <code>Route</code> component.</p>\\n<h2 id=\\\"generatePath-params-object\\\"><a href=\\\"/core/api/generatePath/params-object\\\" class=\\\"internal-link\\\">params: object</a></h2>\\n<p>The second argument is an object with corresponding params for the pattern to use.</p>\\n<p>If provided params and path don&#x2019;t match, an error will be thrown:</p>\\n<pre><code class=\\\"language-js\\\"><span class=\\\"token function\\\">generatePath</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;/user/:id/:entity(posts|comments)&quot;</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span> id<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">1</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// TypeError: Expected &quot;entity&quot; to be defined</span>\\n</code></pre>\\n\",\"headers\":[{\"text\":\"pattern: string\",\"slug\":\"pattern-string\"},{\"text\":\"params: object\",\"slug\":\"params-object\"}],\"title\":{\"text\":\"generatePath\",\"slug\":\"generatePath\"}}","module.exports = {\"markup\":\"<h1 id=\\\"quick-start\\\"><a href=\\\"/core/guides/quick-start\\\" class=\\\"internal-link\\\">Quick Start</a></h1>\\n<p>You probably want to read one of these instead:</p>\\n<ul>\\n<li><a href=\\\"/web/guides/quick-start\\\" class=\\\"internal-link\\\">Web Quick Start</a></li>\\n<li><a href=\\\"/native/guides/quick-start\\\" class=\\\"internal-link\\\">Native Quick Start</a></li>\\n</ul>\\n<h2 id=\\\"quick-start-installation\\\"><a href=\\\"/core/guides/quick-start/installation\\\" class=\\\"internal-link\\\">Installation</a></h2>\\n<p>React Router Core is published to <a href=\\\"https://npm.im/react-router\\\">npm</a> so you can install it with either <code>npm</code> or <a href=\\\"https://yarnpkg.com\\\"><code>yarn</code></a>.</p>\\n<pre><code class=\\\"language-sh\\\"><span class=\\\"token function\\\">npm</span> <span class=\\\"token function\\\">install</span> react-router\\n<span class=\\\"token comment\\\"># or</span>\\n<span class=\\\"token function\\\">yarn</span> <span class=\\\"token function\\\">add</span> react-router\\n</code></pre>\\n\",\"headers\":[{\"text\":\"Installation\",\"slug\":\"installation\"}],\"title\":{\"text\":\"Quick Start\",\"slug\":\"quick-start\"}}","module.exports = {\"markup\":\"<h1 id=\\\"testing\\\"><a href=\\\"/core/guides/testing\\\" class=\\\"internal-link\\\">Testing</a></h1>\\n<p>React Router relies on React context to work. This affects how you can\\ntest your components that use our components.</p>\\n<h2 id=\\\"testing-context\\\"><a href=\\\"/core/guides/testing/context\\\" class=\\\"internal-link\\\">Context</a></h2>\\n<p>If you try to unit test one of your components that renders a <code>&lt;Link&gt;</code> or a <code>&lt;Route&gt;</code>, etc. you&#x2019;ll get some errors and warnings about context. While you may be tempted to stub out the router context yourself, we recommend you wrap your unit test in one of the <code>Router</code> components: the base <code>Router</code> with a <code>history</code> prop, or a <code>&lt;StaticRouter&gt;</code>, <code>&lt;MemoryRouter&gt;</code>, or <code>&lt;BrowserRouter&gt;</code> (if <code>window.history</code> is available as a global in the test enviroment).</p>\\n<p>Using <code>MemoryRouter</code> or a custom <code>history</code> is recommended in order to be able to reset the router between tests.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">Sidebar</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">Component</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">// ...</span>\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>button</span> <span class=\\\"token attr-name\\\">onClick</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>toggleExpand<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>expand<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>button</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>ul</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n          <span class=\\\"token punctuation\\\">{</span>users<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">map</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">user</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">(</span>\\n            <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>li</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n              <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Link</span></span> <span class=\\\"token attr-name\\\">to</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>user<span class=\\\"token punctuation\\\">.</span>path<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">&gt;</span></span><span class=\\\"token punctuation\\\">{</span>user<span class=\\\"token punctuation\\\">.</span>name<span class=\\\"token punctuation\\\">}</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Link</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n            <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>li</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n          <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>ul</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token comment\\\">// broken</span>\\n<span class=\\\"token function\\\">test</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;it expands when the button is clicked&quot;</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Sidebar</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token function\\\">click</span><span class=\\\"token punctuation\\\">(</span>theButton<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token function\\\">expect</span><span class=\\\"token punctuation\\\">(</span>theThingToBeOpen<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// fixed!</span>\\n<span class=\\\"token function\\\">test</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;it expands when the button is clicked&quot;</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">MemoryRouter</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Sidebar</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">MemoryRouter</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token function\\\">click</span><span class=\\\"token punctuation\\\">(</span>theButton<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token function\\\">expect</span><span class=\\\"token punctuation\\\">(</span>theThingToBeOpen<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n<h2 id=\\\"testing-starting-at-specific-routes\\\"><a href=\\\"/core/guides/testing/starting-at-specific-routes\\\" class=\\\"internal-link\\\">Starting at specific routes</a></h2>\\n<p><code>&lt;MemoryRouter&gt;</code> supports the <code>initialEntries</code> and <code>initialIndex</code> props,\\nso you can boot up an app (or any smaller part of an app) at a specific\\nlocation.</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token function\\\">test</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;current user is active in sidebar&quot;</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">MemoryRouter</span></span> <span class=\\\"token attr-name\\\">initialEntries</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">&quot;/users/2&quot;</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Sidebar</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">MemoryRouter</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token function\\\">expectUserToBeActive</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n<h2 id=\\\"testing-navigating\\\"><a href=\\\"/core/guides/testing/navigating\\\" class=\\\"internal-link\\\">Navigating</a></h2>\\n<p>We have a lot of tests that the routes work when the location changes, so you probably don&#x2019;t need to test this stuff. But if you need to test navigation within your app, you can do so like this:</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token comment\\\">// app.js (a component file)</span>\\n<span class=\\\"token keyword\\\">import</span> React <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> Route<span class=\\\"token punctuation\\\">,</span> Link <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react-router-dom&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// our Subject, the App, but you can test any sub</span>\\n<span class=\\\"token comment\\\">// section of your app too</span>\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">App</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span>\\n      <span class=\\\"token attr-name\\\">exact</span>\\n      <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/<span class=\\\"token punctuation\\\">&quot;</span></span>\\n      <span class=\\\"token attr-name\\\">render</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">(</span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n          <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>h1</span><span class=\\\"token punctuation\\\">&gt;</span></span>Welcome<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>h1</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span></span>\\n    <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span>\\n      <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/dashboard<span class=\\\"token punctuation\\\">&quot;</span></span>\\n      <span class=\\\"token attr-name\\\">render</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">(</span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n          <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>h1</span><span class=\\\"token punctuation\\\">&gt;</span></span>Dashboard<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>h1</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n          <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Link</span></span> <span class=\\\"token attr-name\\\">to</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>/<span class=\\\"token punctuation\\\">&quot;</span></span> <span class=\\\"token attr-name\\\">id</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>click-me<span class=\\\"token punctuation\\\">&quot;</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n            Home\\n          <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Link</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n        <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span></span>\\n    <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// you can also use a renderer like &quot;@testing-library/react&quot; or &quot;enzyme/mount&quot; here</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> render<span class=\\\"token punctuation\\\">,</span> unmountComponentAtNode <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react-dom&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> act <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&apos;react-dom/test-utils&apos;</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> MemoryRouter <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react-router-dom&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// app.test.js</span>\\n<span class=\\\"token function\\\">it</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;navigates home when you click the logo&quot;</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">// in a real test a renderer like &quot;@testing-library/react&quot;</span>\\n  <span class=\\\"token comment\\\">// would take care of setting up the DOM elements</span>\\n  <span class=\\\"token keyword\\\">const</span> root <span class=\\\"token operator\\\">=</span> document<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">createElement</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&apos;div&apos;</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  document<span class=\\\"token punctuation\\\">.</span>body<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">appendChild</span><span class=\\\"token punctuation\\\">(</span>root<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token comment\\\">// Render app</span>\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">MemoryRouter</span></span> <span class=\\\"token attr-name\\\">initialEntries</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">&apos;/dashboard&apos;</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">App</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">MemoryRouter</span></span><span class=\\\"token punctuation\\\">&gt;</span></span><span class=\\\"token punctuation\\\">,</span>\\n    root\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token comment\\\">// Interact with page</span>\\n  <span class=\\\"token function\\\">act</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">// Find the link (perhaps using the text content)</span>\\n    <span class=\\\"token keyword\\\">const</span> goHomeLink <span class=\\\"token operator\\\">=</span> document<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">querySelector</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&apos;#click-me&apos;</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token comment\\\">// Click it</span>\\n    goHomeLink<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">dispatchEvent</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">MouseEvent</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;click&quot;</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span> bubbles<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token boolean\\\">true</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token comment\\\">// Check correct page content showed up</span>\\n  <span class=\\\"token function\\\">expect</span><span class=\\\"token punctuation\\\">(</span>document<span class=\\\"token punctuation\\\">.</span>body<span class=\\\"token punctuation\\\">.</span>textContent<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">toBe</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&apos;Welcome&apos;</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n<h2 id=\\\"testing-checking-location-in-tests\\\"><a href=\\\"/core/guides/testing/checking-location-in-tests\\\" class=\\\"internal-link\\\">Checking location in tests</a></h2>\\n<p>You shouldn&#x2019;t have to access the <code>location</code> or <code>history</code> objects very often in tests, but if you do (such as to validate that new query params are set in the url bar), you can add a route that updates a variable in the test:</p>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token comment\\\">// app.test.js</span>\\n<span class=\\\"token function\\\">test</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;clicking filter links updates product query params&quot;</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">let</span> testHistory<span class=\\\"token punctuation\\\">,</span> testLocation<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">MemoryRouter</span></span> <span class=\\\"token attr-name\\\">initialEntries</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">&quot;/my/initial/route&quot;</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">App</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Route</span></span>\\n        <span class=\\\"token attr-name\\\">path</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">&quot;</span>*<span class=\\\"token punctuation\\\">&quot;</span></span>\\n        <span class=\\\"token attr-name\\\">render</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\"><span class=\\\"token punctuation\\\">{</span> history<span class=\\\"token punctuation\\\">,</span> location <span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">{</span>\\n          testHistory <span class=\\\"token operator\\\">=</span> history<span class=\\\"token punctuation\\\">;</span>\\n          testLocation <span class=\\\"token operator\\\">=</span> location<span class=\\\"token punctuation\\\">;</span>\\n          <span class=\\\"token keyword\\\">return</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></span>\\n      <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">MemoryRouter</span></span><span class=\\\"token punctuation\\\">&gt;</span></span><span class=\\\"token punctuation\\\">,</span>\\n    node\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token function\\\">act</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">// example: click a &lt;Link&gt; to /products?id=1234</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token comment\\\">// assert about url</span>\\n  <span class=\\\"token function\\\">expect</span><span class=\\\"token punctuation\\\">(</span>testLocation<span class=\\\"token punctuation\\\">.</span>pathname<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">toBe</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;/products&quot;</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> searchParams <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">URLSearchParams</span><span class=\\\"token punctuation\\\">(</span>testLocation<span class=\\\"token punctuation\\\">.</span>search<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token function\\\">expect</span><span class=\\\"token punctuation\\\">(</span>searchParams<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">has</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;id&quot;</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">toBe</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token function\\\">expect</span><span class=\\\"token punctuation\\\">(</span>searchParams<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">get</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;id&quot;</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">toEqual</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;1234&quot;</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n<h3>Alternatives</h3>\\n<ol>\\n<li>You can also use <code>BrowserRouter</code> if your test environment has the browser globals <code>window.location</code> and <code>window.history</code> (which is the default in Jest through JSDOM, but you cannot reset the history between tests).</li>\\n<li>Instead of passing a custom route to MemoryRouter, you can use the base <code>Router</code> with a <code>history</code> prop from the <a href=\\\"https://github.com/remix-run/history\\\"><code>history</code></a> package:</li>\\n</ol>\\n<pre><code class=\\\"language-jsx\\\"><span class=\\\"token comment\\\">// app.test.js</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> createMemoryHistory <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;history&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> Router <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">&quot;react-router&quot;</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">test</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;redirects to login page&quot;</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=&gt;</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> history <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">createMemoryHistory</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Router</span></span> <span class=\\\"token attr-name\\\">history</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>history<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">&gt;</span></span>\\n      <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">App</span></span> <span class=\\\"token attr-name\\\">signedInUser</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/&gt;</span></span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Router</span></span><span class=\\\"token punctuation\\\">&gt;</span></span><span class=\\\"token punctuation\\\">,</span>\\n    node\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token function\\\">expect</span><span class=\\\"token punctuation\\\">(</span>history<span class=\\\"token punctuation\\\">.</span>location<span class=\\\"token punctuation\\\">.</span>pathname<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">toBe</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">&quot;/login&quot;</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n<h2 id=\\\"testing-react-testing-library\\\"><a href=\\\"/core/guides/testing/react-testing-library\\\" class=\\\"internal-link\\\">React Testing Library</a></h2>\\n<p>See an example in the official documentation: <a href=\\\"https://testing-library.com/docs/example-react-router\\\">Testing React Router with React Testing Library</a></p>\\n\",\"headers\":[{\"text\":\"Context\",\"slug\":\"context\"},{\"text\":\"Starting at specific routes\",\"slug\":\"starting-at-specific-routes\"},{\"text\":\"Navigating\",\"slug\":\"navigating\"},{\"text\":\"Checking location in tests\",\"slug\":\"checking-location-in-tests\"},{\"text\":\"React Testing Library\",\"slug\":\"react-testing-library\"}],\"title\":{\"text\":\"Testing\",\"slug\":\"testing\"}}","module.exports = {\"markup\":\"<h1 id=\\\"static-routes\\\"><a href=\\\"/core/guides/static-routes\\\" class=\\\"internal-link\\\">Static Routes</a></h1>\\n<p>Previous versions of React Router used static routes to configure your application&#x2019;s routing. This allows for inspection and matching of routes before rendering. Since v4 moved to dynamic components instead of route configs, some previous use-cases became less obvious and tricky.</p>\\n<p>We are developing a package to work with static route configs and React Router, to continue to meet those use-cases. It is under development now but we&#x2019;d love for you to try it out and help out.</p>\\n<p><a href=\\\"https://github.com/remix-run/react-router/tree/main/packages/react-router-config\\\">React Router Config</a></p>\\n\",\"headers\":[],\"title\":{\"text\":\"Static Routes\",\"slug\":\"static-routes\"}}"],"sourceRoot":""}