{"pageProps":{"toc":"[{\"url\":\"#\",\"text\":\"概览\",\"depth\":2},{\"url\":\"#reference\",\"depth\":2,\"text\":\"参考 \"},{\"url\":\"#use-form-status\",\"depth\":3,\"text\":[[\"$r\",\"code\",null,{\"children\":\"useFormStatus()\"}],\" \"]},{\"url\":\"#usage\",\"depth\":2,\"text\":\"用法 \"},{\"url\":\"#display-a-pending-state-during-form-submission\",\"depth\":3,\"text\":\"在表单提交期间显示待定状态 \"},{\"url\":\"#read-form-data-being-submitted\",\"depth\":3,\"text\":\"查看正在提交的表单数据 \"},{\"url\":\"#troubleshooting\",\"depth\":2,\"text\":\"疑难解答 \"},{\"url\":\"#pending-is-never-true\",\"depth\":3,\"text\":[[\"$r\",\"code\",null,{\"children\":\"status.pending\"}],\" 从不为 \",[\"$r\",\"code\",null,{\"children\":\"true\"}],\" \"]}]","content":"[[\"$r\",\"MaxWidth\",\"48\",{\"children\":[[\"$r\",\"Canary\",null,{\"children\":[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"useFormStatus\"}],\" Hook 目前仅在 React Canary 与 experimental 渠道中可用。在此处了解更多关于 \",[\"$r\",\"a\",null,{\"href\":\"/community/versioning-policy#all-release-channels\",\"children\":\"React 发布渠道\"}],\" 的信息。\"]}]}],\"\\n\",[\"$r\",\"Intro\",null,{\"children\":[[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"useFormStatus\"}],\" 是一个提供上次表单提交状态信息的 Hook。\"]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"const { pending, data, method, action } = useFormStatus();\\n\"}]}]]}],\"\\n\",[\"$r\",\"InlineToc\",null,{}],\"\\n\",[\"$r\",\"hr\",null,{}],\"\\n\",[\"$r\",\"h2\",null,{\"id\":\"reference\",\"children\":\"参考 \"}],\"\\n\",[\"$r\",\"h3\",null,{\"id\":\"use-form-status\",\"children\":[[\"$r\",\"code\",null,{\"children\":\"useFormStatus()\"}],\" \"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"useFormStatus\"}],\" Hook 提供了上次表单提交的状态信息。\"]}],\"\\n\",[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"meta\":\"{5},[[1, 6, \\\"status.pending\\\"]]\",\"children\":\"import { useFormStatus } from \\\"react-dom\\\";\\nimport action from './actions';\\n\\nfunction Submit() {\\n  const status = useFormStatus();\\n  return <button disabled={status.pending}>提交</button>\\n}\\n\\nexport default function App() {\\n  return (\\n    <form action={action}>\\n      <Submit />\\n    </form>\\n  );\\n}\\n\"}]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"Submit\"}],\" 组件必须在 \",[\"$r\",\"code\",null,{\"children\":\"<form>\"}],\" 内部渲染以获取状态信息。该 Hook 返回诸如 \",[\"$r\",\"CodeStep\",null,{\"step\":1,\"children\":[\"$r\",\"code\",null,{\"children\":\"pending\"}]}],\" 属性的信息，用于指示表单是否正在提交中。\"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"在上面的示例中，\",[\"$r\",\"code\",null,{\"children\":\"Submit\"}],\" 利用此信息来在表单提交时禁用 \",[\"$r\",\"code\",null,{\"children\":\"<button>\"}],\" 按钮的按压操作。\"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"a\",null,{\"href\":\"#usage\",\"children\":\"参见下方更多示例\"}],\"。\"]}],\"\\n\",[\"$r\",\"h4\",null,{\"id\":\"parameters\",\"children\":\"参数 \"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"useFormStatus\"}],\" 不接收任何参数。\"]}],\"\\n\",[\"$r\",\"h4\",null,{\"id\":\"returns\",\"children\":\"返回值 \"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"useFormStatus\"}],\" 返回一个包含以下属性的 \",[\"$r\",\"code\",null,{\"children\":\"status\"}],\" 对象：\"]}],\"\\n\",[\"$r\",\"ul\",null,{\"children\":[\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"\\n\",[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"pending\"}],\"：布尔值。如果为 \",[\"$r\",\"code\",null,{\"children\":\"true\"}],\"，则表示父级 \",[\"$r\",\"code\",null,{\"children\":\"<form>\"}],\" 正在等待提交；否则为 \",[\"$r\",\"code\",null,{\"children\":\"false\"}],\"。\"]}],\"\\n\"]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"\\n\",[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"data\"}],\"：实现了 \",[\"$r\",\"a\",null,{\"href\":\"https://developer.mozilla.org/en-US/docs/Web/API/FormData\",\"target\":\"_blank\",\"rel\":\"nofollow noopener noreferrer\",\"children\":[\"$r\",\"code\",null,{\"children\":\"FormData interface\"}]}],\" 的对象，包含父级 \",[\"$r\",\"code\",null,{\"children\":\"<form>\"}],\" 正在提交的数据；如果没有进行提交或没有父级 \",[\"$r\",\"code\",null,{\"children\":\"<form>\"}],\"，它将为 \",[\"$r\",\"code\",null,{\"children\":\"null\"}],\"。\"]}],\"\\n\"]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"\\n\",[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"method\"}],\"：字符串，可以是 \",[\"$r\",\"code\",null,{\"children\":\"'get'\"}],\" 或 \",[\"$r\",\"code\",null,{\"children\":\"'post'\"}],\"。表示父级 \",[\"$r\",\"code\",null,{\"children\":\"<form>\"}],\" 使用 \",[\"$r\",\"code\",null,{\"children\":\"GET\"}],\" 或 \",[\"$r\",\"code\",null,{\"children\":\"POST\"}],\" \",[\"$r\",\"a\",null,{\"href\":\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods\",\"target\":\"_blank\",\"rel\":\"nofollow noopener noreferrer\",\"children\":\"HTTP 方法\"}],\" 进行提交。默认情况下，\",[\"$r\",\"code\",null,{\"children\":\"<form>\"}],\" 将使用 \",[\"$r\",\"code\",null,{\"children\":\"GET\"}],\" 方法，并可以通过 \",[\"$r\",\"a\",null,{\"href\":\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form#method\",\"target\":\"_blank\",\"rel\":\"nofollow noopener noreferrer\",\"children\":[\"$r\",\"code\",null,{\"children\":\"method\"}]}],\" 属性指定。\"]}],\"\\n\"]}],\"\\n\"]}],\"\\n\",[\"$r\",\"ul\",null,{\"children\":[\"\\n\",[\"$r\",\"li\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"action\"}],\"：一个传递给父级 \",[\"$r\",\"code\",null,{\"children\":\"<form>\"}],\" 的 \",[\"$r\",\"code\",null,{\"children\":\"action\"}],\" 属性的函数引用。如果没有父级 \",[\"$r\",\"code\",null,{\"children\":\"<form>\"}],\"，则该属性为 \",[\"$r\",\"code\",null,{\"children\":\"null\"}],\"。如果在 \",[\"$r\",\"code\",null,{\"children\":\"action\"}],\" 属性上提供了 URI 值，或者未指定 \",[\"$r\",\"code\",null,{\"children\":\"action\"}],\" 属性，\",[\"$r\",\"code\",null,{\"children\":\"status.action\"}],\" 将为 \",[\"$r\",\"code\",null,{\"children\":\"null\"}],\"。\"]}],\"\\n\"]}],\"\\n\",[\"$r\",\"h4\",null,{\"id\":\"caveats\",\"children\":\"注意 \"}],\"\\n\",[\"$r\",\"ul\",null,{\"children\":[\"\\n\",[\"$r\",\"li\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"useFormStatus\"}],\" Hook 必须从在 \",[\"$r\",\"code\",null,{\"children\":\"<form>\"}],\" 内渲染的组件中调用。\"]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"useFormStatus\"}],\" 仅会返回父级 \",[\"$r\",\"code\",null,{\"children\":\"<form>\"}],\" 的状态信息。它不会返回同一组件或子组件中渲染的任何 \",[\"$r\",\"code\",null,{\"children\":\"<form>\"}],\" 的状态信息。\"]}],\"\\n\"]}],\"\\n\",[\"$r\",\"hr\",null,{}],\"\\n\",[\"$r\",\"h2\",null,{\"id\":\"usage\",\"children\":\"用法 \"}],\"\\n\",[\"$r\",\"h3\",null,{\"id\":\"display-a-pending-state-during-form-submission\",\"children\":\"在表单提交期间显示待定状态 \"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"可以在 \",[\"$r\",\"code\",null,{\"children\":\"<form>\"}],\" 中渲染的子组件中调用 \",[\"$r\",\"code\",null,{\"children\":\"useFormStatus\"}],\" Hook，并读取返回的 \",[\"$r\",\"code\",null,{\"children\":\"pending\"}],\" 属性，以在表单提交期间显示待定状态。\"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"下面的示例使用 \",[\"$r\",\"code\",null,{\"children\":\"pending\"}],\" 属性指示表单正在提交。\"]}],\"\\n\"]}],[\"$r\",\"Sandpack\",null,{\"children\":[[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"meta\":\"src/App.js\",\"children\":\"import { useFormStatus } from \\\"react-dom\\\";\\nimport { submitForm } from \\\"./actions.js\\\";\\n\\nfunction Submit() {\\n  const { pending } = useFormStatus();\\n  return (\\n    <button type=\\\"submit\\\" disabled={pending}>\\n      {pending ? \\\"提交中……\\\" : \\\"提交\\\"}\\n    </button>\\n  );\\n}\\n\\nfunction Form({ action }) {\\n  return (\\n    <form action={action}>\\n      <Submit />\\n    </form>\\n  );\\n}\\n\\nexport default function App() {\\n  return <Form action={submitForm} />;\\n}\\n\"}]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"meta\":\"src/actions.js hidden\",\"children\":\"export async function submitForm(query) {\\n    await new Promise((res) => setTimeout(res, 1000));\\n}\\n\"}]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-json\",\"meta\":\"package.json hidden\",\"children\":\"{\\n  \\\"dependencies\\\": {\\n    \\\"react\\\": \\\"canary\\\",\\n    \\\"react-dom\\\": \\\"canary\\\",\\n    \\\"react-scripts\\\": \\\"^5.0.0\\\"\\n  },\\n  \\\"main\\\": \\\"/index.js\\\",\\n  \\\"devDependencies\\\": {}\\n}\\n\"}]}]]}],[\"$r\",\"MaxWidth\",\"58\",{\"children\":[\"\\n\",[\"$r\",\"Pitfall\",null,{\"children\":[[\"$r\",\"h5\",null,{\"id\":\"useformstatus-will-not-return-status-information-for-a-form-rendered-in-the-same-component\",\"children\":[[\"$r\",\"code\",null,{\"children\":\"useFormStatus\"}],\" 不会返回在同一组件中渲染的 \",[\"$r\",\"code\",null,{\"children\":\"<form>\"}],\" 的状态信息 \"]}],[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"useFormStatus\"}],\" Hook 只会返回父级 \",[\"$r\",\"code\",null,{\"children\":\"<form>\"}],\" 的状态信息，而不会返回在调用 Hook 的同一组件中渲染的任何 \",[\"$r\",\"code\",null,{\"children\":\"<form>\"}],\" 的状态信息，也不会返回子组件的状态信息。\"]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"function Form() {\\n  // 🚩 `pending` 永远不会为 true\\n  // useFormStatus 不会跟踪在此组件中渲染的表单\\n  const { pending } = useFormStatus();\\n  return <form action={submit}></form>;\\n}\\n\"}]}],[\"$r\",\"p\",null,{\"children\":[\"正确的做法是从位于 \",[\"$r\",\"code\",null,{\"children\":\"<form>\"}],\" 内部的组件中调用 \",[\"$r\",\"code\",null,{\"children\":\"useFormStatus\"}],\"。\"]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"function Submit() {\\n  // ✅ `pending` 将从包裹 Submit 组件的表单派生\\n  const { pending } = useFormStatus(); \\n  return <button disabled={pending}>...</button>;\\n}\\n\\nfunction Form() {\\n  // <form> `useFormStatus` 将会追踪它\\n  return (\\n    <form action={submit}>\\n      <Submit />\\n    </form>\\n  );\\n}\\n\"}]}]]}],\"\\n\",[\"$r\",\"h3\",null,{\"id\":\"read-form-data-being-submitted\",\"children\":\"查看正在提交的表单数据 \"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"可以使用从 \",[\"$r\",\"code\",null,{\"children\":\"useFormStatus\"}],\" 返回的状态信息中的 \",[\"$r\",\"code\",null,{\"children\":\"data\"}],\" 属性来显示用户正在提交的数据是什么。\"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"下面的示例中有一个表单，用户可以请求一个用户名。那么可以使用 \",[\"$r\",\"code\",null,{\"children\":\"useFormStatus\"}],\" 来显示一个临时状态消息，确认请求了什么用户名。\"]}],\"\\n\"]}],[\"$r\",\"Sandpack\",null,{\"children\":[[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"meta\":\"src/UsernameForm.js active\",\"children\":\"import {useState, useMemo, useRef} from 'react';\\nimport {useFormStatus} from 'react-dom';\\n\\nexport default function UsernameForm() {\\n  const {pending, data} = useFormStatus();\\n\\n  return (\\n    <div>\\n      <h3>请求用户名：</h3>\\n      <input type=\\\"text\\\" name=\\\"username\\\" disabled={pending}/>\\n      <button type=\\\"submit\\\" disabled={pending}>\\n        提交  \\n      </button>\\n      <br />\\n      <p>{data ? `请求 ${data?.get(\\\"username\\\")}...`: ''}</p>\\n    </div>\\n  );\\n}\\n\"}]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"meta\":\"src/App.js\",\"children\":\"import UsernameForm from './UsernameForm';\\nimport { submitForm } from \\\"./actions.js\\\";\\nimport {useRef} from 'react';\\n\\nexport default function App() {\\n  const ref = useRef(null);\\n  return (\\n    <form ref={ref} action={async (formData) => {\\n      await submitForm(formData);\\n      ref.current.reset();\\n    }}>\\n      <UsernameForm />\\n    </form>\\n  );\\n}\\n\"}]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"meta\":\"src/actions.js hidden\",\"children\":\"export async function submitForm(query) {\\n    await new Promise((res) => setTimeout(res, 2000));\\n}\\n\"}]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-css\",\"children\":\"p {\\n    height: 14px;\\n    padding: 0;\\n    margin: 2px 0 0 0 ;\\n    font-size: 14px\\n}\\n\\nbutton {\\n    margin-left: 2px;\\n}\\n\\n\"}]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-json\",\"meta\":\"package.json hidden\",\"children\":\"{\\n  \\\"dependencies\\\": {\\n    \\\"react\\\": \\\"canary\\\",\\n    \\\"react-dom\\\": \\\"canary\\\",\\n    \\\"react-scripts\\\": \\\"^5.0.0\\\"\\n  },\\n  \\\"main\\\": \\\"/index.js\\\",\\n  \\\"devDependencies\\\": {}\\n}\\n\"}]}]]}],[\"$r\",\"MaxWidth\",\"last\",{\"children\":[\"\\n\",[\"$r\",\"hr\",null,{}],\"\\n\",[\"$r\",\"h2\",null,{\"id\":\"troubleshooting\",\"children\":\"疑难解答 \"}],\"\\n\",[\"$r\",\"h3\",null,{\"id\":\"pending-is-never-true\",\"children\":[[\"$r\",\"code\",null,{\"children\":\"status.pending\"}],\" 从不为 \",[\"$r\",\"code\",null,{\"children\":\"true\"}],\" \"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"useFormStatus\"}],\" 仅会返回父级 \",[\"$r\",\"code\",null,{\"children\":\"<form>\"}],\" 的状态信息。\"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"如果调用 \",[\"$r\",\"code\",null,{\"children\":\"useFormStatus\"}],\" 的组件未嵌套在 \",[\"$r\",\"code\",null,{\"children\":\"<form>\"}],\" 中，\",[\"$r\",\"code\",null,{\"children\":\"status.pending\"}],\" 总是返回 \",[\"$r\",\"code\",null,{\"children\":\"false\"}],\"。请验证 \",[\"$r\",\"code\",null,{\"children\":\"useFormStatus\"}],\" 是否在 \",[\"$r\",\"code\",null,{\"children\":\"<form>\"}],\" 元素的子组件中调用。\"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"useFormStatus\"}],\" 不会追踪同一组件中渲染的 \",[\"$r\",\"code\",null,{\"children\":\"<form>\"}],\" 的状态。参阅 \",[\"$r\",\"a\",null,{\"href\":\"#useformstatus-will-not-return-status-information-for-a-form-rendered-in-the-same-component\",\"children\":\"陷阱\"}],\" 以了解更多详细信息。\"]}]]}]]","meta":{"title":"useFormStatus","canary":true}},"__N_SSG":true}