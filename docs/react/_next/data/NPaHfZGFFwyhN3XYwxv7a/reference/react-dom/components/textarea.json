{"pageProps":{"toc":"[{\"url\":\"#\",\"text\":\"概览\",\"depth\":2},{\"url\":\"#reference\",\"depth\":2,\"text\":\"参考 \"},{\"url\":\"#textarea\",\"depth\":3,\"text\":[[\"$r\",\"code\",null,{\"children\":\"<textarea>\"}],\" \"]},{\"url\":\"#usage\",\"depth\":2,\"text\":\"用法 \"},{\"url\":\"#displaying-a-text-area\",\"depth\":3,\"text\":\"展示一个文本框 \"},{\"url\":\"#providing-a-label-for-a-text-area\",\"depth\":3,\"text\":\"为文本框提供 label 属性 \"},{\"url\":\"#providing-an-initial-value-for-a-text-area\",\"depth\":3,\"text\":\"提供初始值 \"},{\"url\":\"#reading-the-text-area-value-when-submitting-a-form\",\"depth\":3,\"text\":\"提交表单时读取文本框的值 \"},{\"url\":\"#controlling-a-text-area-with-a-state-variable\",\"depth\":3,\"text\":\"使用 state 控制文本框 \"},{\"url\":\"#troubleshooting\",\"depth\":2,\"text\":\"故障排除 \"},{\"url\":\"#my-text-area-doesnt-update-when-i-type-into-it\",\"depth\":3,\"text\":\"输入时文本框没有更新 \"},{\"url\":\"#my-text-area-caret-jumps-to-the-beginning-on-every-keystroke\",\"depth\":3,\"text\":\"当我输入时，文本框光标会跳到开头 \"},{\"url\":\"#im-getting-an-error-a-component-is-changing-an-uncontrolled-input-to-be-controlled\",\"depth\":3,\"text\":\"收到错误：“A component is changing an uncontrolled input to be controlled” \"}]","content":"[[\"$r\",\"MaxWidth\",\"46\",{\"children\":[[\"$r\",\"Intro\",null,{\"children\":[[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"a\",null,{\"href\":\"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/textarea\",\"target\":\"_blank\",\"rel\":\"nofollow noopener noreferrer\",\"children\":[\"浏览器内置的 \",[\"$r\",\"code\",null,{\"children\":\"<textarea>\"}],\" 组件\"]}],\" 允许你渲染一个多行文本输入框。\"]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"<textarea />\\n\"}]}]]}],\"\\n\",[\"$r\",\"InlineToc\",null,{}],\"\\n\",[\"$r\",\"hr\",null,{}],\"\\n\",[\"$r\",\"h2\",null,{\"id\":\"reference\",\"children\":\"参考 \"}],\"\\n\",[\"$r\",\"h3\",null,{\"id\":\"textarea\",\"children\":[[\"$r\",\"code\",null,{\"children\":\"<textarea>\"}],\" \"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"使用 \",[\"$r\",\"a\",null,{\"href\":\"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/textarea\",\"target\":\"_blank\",\"rel\":\"nofollow noopener noreferrer\",\"children\":[\"浏览器内置的 \",[\"$r\",\"code\",null,{\"children\":\"<textarea>\"}],\" 组件\"]}],\" 渲染一个多行文本输入框。\"]}],\"\\n\",[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"<textarea name=\\\"postContent\\\" />\\n\"}]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"a\",null,{\"href\":\"#usage\",\"children\":\"参见下面更多示例\"}],\"。\"]}],\"\\n\",[\"$r\",\"h4\",null,{\"id\":\"props\",\"children\":\"属性 \"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"<textarea>\"}],\" 支持所有 \",[\"$r\",\"a\",null,{\"href\":\"/reference/react-dom/components/common#props\",\"children\":\"常见的元素属性\"}],\"。\"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"你可以通过传递 \",[\"$r\",\"code\",null,{\"children\":\"value\"}],\" 属性 \",[\"$r\",\"a\",null,{\"href\":\"#controlling-a-text-area-with-a-state-variable\",\"children\":\"以控制文本框\"}],\"。\"]}],\"\\n\",[\"$r\",\"ul\",null,{\"children\":[\"\\n\",[\"$r\",\"li\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"value\"}],\"：一个字符串，用于控制文本框内的文本。\"]}],\"\\n\"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"当你传递 \",[\"$r\",\"code\",null,{\"children\":\"value\"}],\" 时，你必须同时传递一个 \",[\"$r\",\"code\",null,{\"children\":\"onChange\"}],\" 处理函数，用于更新传递的值。\"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"如果 \",[\"$r\",\"code\",null,{\"children\":\"<textarea>\"}],\" 是非受控组件，那么你应该传递 \",[\"$r\",\"code\",null,{\"children\":\"defaultValue\"}],\" 参数：\"]}],\"\\n\",[\"$r\",\"ul\",null,{\"children\":[\"\\n\",[\"$r\",\"li\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"defaultValue\"}],\"：一个字符串，表示文本框的 \",[\"$r\",\"a\",null,{\"href\":\"#providing-an-initial-value-for-a-text-area\",\"children\":\"初始值\"}],\"。\"]}],\"\\n\"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"以下 \",[\"$r\",\"code\",null,{\"children\":\"<textarea>\"}],\" 属性均可用于受控与非受控组件：\"]}],\"\\n\",[\"$r\",\"ul\",null,{\"children\":[\"\\n\",[\"$r\",\"li\",null,{\"children\":[[\"$r\",\"a\",null,{\"href\":\"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/textarea#autocomplete\",\"target\":\"_blank\",\"rel\":\"nofollow noopener noreferrer\",\"children\":[\"$r\",\"code\",null,{\"children\":\"autoComplete\"}]}],\"：可以为 \",[\"$r\",\"code\",null,{\"children\":\"'on'\"}],\" 或 \",[\"$r\",\"code\",null,{\"children\":\"'off'\"}],\"，表示自动完成的行为。\"]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[[\"$r\",\"a\",null,{\"href\":\"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/textarea#autofocus\",\"target\":\"_blank\",\"rel\":\"nofollow noopener noreferrer\",\"children\":[\"$r\",\"code\",null,{\"children\":\"autoFocus\"}]}],\"：布尔值。如果为 \",[\"$r\",\"code\",null,{\"children\":\"true\"}],\"，React 将在挂载时聚焦该元素。\"]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"children\"}],\"：\",[\"$r\",\"code\",null,{\"children\":\"<textarea>\"}],\" 不接受子元素，如果要设置初始值，请使用 \",[\"$r\",\"code\",null,{\"children\":\"defaultValue\"}],\"。\"]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[[\"$r\",\"a\",null,{\"href\":\"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/textarea#cols\",\"target\":\"_blank\",\"rel\":\"nofollow noopener noreferrer\",\"children\":[\"$r\",\"code\",null,{\"children\":\"cols\"}]}],\"：数字，表示默认宽度，以平均字符宽度计算。默认为 \",[\"$r\",\"code\",null,{\"children\":\"20\"}],\"。\"]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[[\"$r\",\"a\",null,{\"href\":\"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/textarea#disabled\",\"target\":\"_blank\",\"rel\":\"nofollow noopener noreferrer\",\"children\":[\"$r\",\"code\",null,{\"children\":\"disabled\"}]}],\"：布尔值。如果为 \",[\"$r\",\"code\",null,{\"children\":\"true\"}],\"，则输入框将不可交互且显示为禁用状态（dimmed）。\"]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[[\"$r\",\"a\",null,{\"href\":\"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/textarea#form\",\"target\":\"_blank\",\"rel\":\"nofollow noopener noreferrer\",\"children\":[\"$r\",\"code\",null,{\"children\":\"form\"}]}],\"：字符串，表示此文本框所属的 \",[\"$r\",\"code\",null,{\"children\":\"<form>\"}],\" 的 \",[\"$r\",\"code\",null,{\"children\":\"id\"}],\"。如果未指定，则为最近的父表单。\"]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[[\"$r\",\"a\",null,{\"href\":\"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/textarea#maxlength\",\"target\":\"_blank\",\"rel\":\"nofollow noopener noreferrer\",\"children\":[\"$r\",\"code\",null,{\"children\":\"maxLength\"}]}],\"：数字，表示文本的最大长度。\"]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[[\"$r\",\"a\",null,{\"href\":\"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/textarea#minlength\",\"target\":\"_blank\",\"rel\":\"nofollow noopener noreferrer\",\"children\":[\"$r\",\"code\",null,{\"children\":\"minLength\"}]}],\"：数字，表示文本的最小长度。\"]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[[\"$r\",\"a\",null,{\"href\":\"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/input#name\",\"target\":\"_blank\",\"rel\":\"nofollow noopener noreferrer\",\"children\":[\"$r\",\"code\",null,{\"children\":\"name\"}]}],\"：字符串，表示在表单提交时与此输入框关联的名称。\"]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"onChange\"}],\"：一个 \",[\"$r\",\"a\",null,{\"href\":\"/reference/react-dom/components/common#event-handler\",\"children\":[[\"$r\",\"code\",null,{\"children\":\"Event\"}],\" 处理函数\"]}],\"。对于 \",[\"$r\",\"a\",null,{\"href\":\"#controlling-a-text-area-with-a-state-variable\",\"children\":\"受控文本框\"}],\"，在用户更改输入值时立即触发（例如，对于每个按键）。此行为类似于浏览器 \",[\"$r\",\"a\",null,{\"href\":\"https://developer.mozilla.org/zh-CN/docs/Web/API/HTMLElement/input_event\",\"target\":\"_blank\",\"rel\":\"nofollow noopener noreferrer\",\"children\":[[\"$r\",\"code\",null,{\"children\":\"input\"}],\" 事件\"]}],\"。\"]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"onChangeCapture\"}],\"：与 \",[\"$r\",\"code\",null,{\"children\":\"onChange\"}],\" 类似，但是是在 \",[\"$r\",\"a\",null,{\"href\":\"/learn/responding-to-events#capture-phase-events\",\"children\":\"捕获阶段\"}],\" 触发。\"]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[[\"$r\",\"a\",null,{\"href\":\"https://developer.mozilla.org/zh-CN/docs/Web/API/HTMLElement/input_event\",\"target\":\"_blank\",\"rel\":\"nofollow noopener noreferrer\",\"children\":[\"$r\",\"code\",null,{\"children\":\"onInput\"}]}],\"：一个 \",[\"$r\",\"a\",null,{\"href\":\"/reference/react-dom/components/common#event-handler\",\"children\":[[\"$r\",\"code\",null,{\"children\":\"Event\"}],\" 处理函数\"]}],\"。在用户更改值时立即触发。由于历史原因，在 React 习惯于使用工作方式类似的 \",[\"$r\",\"code\",null,{\"children\":\"onChange\"}],\"。\"]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"onInputCapture\"}],\"：与 \",[\"$r\",\"code\",null,{\"children\":\"onInput\"}],\" 类似，但是是在 \",[\"$r\",\"a\",null,{\"href\":\"/learn/responding-to-events#capture-phase-events\",\"children\":\"捕获阶段\"}],\" 触发。\"]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[[\"$r\",\"a\",null,{\"href\":\"https://developer.mozilla.org/zh-CN/docs/Web/API/HTMLInputElement/invalid_event\",\"target\":\"_blank\",\"rel\":\"nofollow noopener noreferrer\",\"children\":[\"$r\",\"code\",null,{\"children\":\"onInvalid\"}]}],\"：一个 \",[\"$r\",\"a\",null,{\"href\":\"/reference/react-dom/components/common#event-handler\",\"children\":[[\"$r\",\"code\",null,{\"children\":\"Event\"}],\" 处理函数\"]}],\"。如果输入的内容在表单提交时未通过验证，则会触发此事件。与内置的 \",[\"$r\",\"code\",null,{\"children\":\"invalid\"}],\" 事件不同，React 的 \",[\"$r\",\"code\",null,{\"children\":\"onInvalid\"}],\" 事件可以进行冒泡。\"]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"onInvalidCapture\"}],\"：与 \",[\"$r\",\"code\",null,{\"children\":\"onInvalid\"}],\" 类似，但是是在 \",[\"$r\",\"a\",null,{\"href\":\"/learn/responding-to-events#capture-phase-events\",\"children\":\"捕获阶段\"}],\" 触发。\"]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[[\"$r\",\"a\",null,{\"href\":\"https://developer.mozilla.org/zh-CN/docs/Web/API/HTMLTextAreaElement/select_event\",\"target\":\"_blank\",\"rel\":\"nofollow noopener noreferrer\",\"children\":[\"$r\",\"code\",null,{\"children\":\"onSelect\"}]}],\"：一个 \",[\"$r\",\"a\",null,{\"href\":\"/reference/react-dom/components/common#event-handler\",\"children\":[[\"$r\",\"code\",null,{\"children\":\"Event\"}],\" 处理函数\"]}],\"。当 \",[\"$r\",\"code\",null,{\"children\":\"<textarea>\"}],\" 的选择内容发生变化后触发。React 扩展了 \",[\"$r\",\"code\",null,{\"children\":\"onSelect\"}],\" 事件，还会在空选择和编辑（可能会影响选择）时触发。\"]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"onSelectCapture\"}],\": 与 \",[\"$r\",\"code\",null,{\"children\":\"onSelect\"}],\" 类似，但是是在 \",[\"$r\",\"a\",null,{\"href\":\"/learn/responding-to-events#capture-phase-events\",\"children\":\"捕获阶段\"}],\" 触发。\"]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[[\"$r\",\"a\",null,{\"href\":\"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/textarea#placeholder\",\"target\":\"_blank\",\"rel\":\"nofollow noopener noreferrer\",\"children\":[\"$r\",\"code\",null,{\"children\":\"placeholder\"}]}],\"：字符串，表示当文本框的值为空时，以淡色显示的占位符。\"]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[[\"$r\",\"a\",null,{\"href\":\"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/textarea#readonly\",\"target\":\"_blank\",\"rel\":\"nofollow noopener noreferrer\",\"children\":[\"$r\",\"code\",null,{\"children\":\"readOnly\"}]}],\"：布尔值，如果为 \",[\"$r\",\"code\",null,{\"children\":\"true\"}],\"，文本框将无法被用户编辑。\"]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[[\"$r\",\"a\",null,{\"href\":\"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/textarea#required\",\"target\":\"_blank\",\"rel\":\"nofollow noopener noreferrer\",\"children\":[\"$r\",\"code\",null,{\"children\":\"required\"}]}],\"：布尔值，如果为 \",[\"$r\",\"code\",null,{\"children\":\"true\"}],\"，则必须提供值才能在表单中提交。\"]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[[\"$r\",\"a\",null,{\"href\":\"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/textarea#rows\",\"target\":\"_blank\",\"rel\":\"nofollow noopener noreferrer\",\"children\":[\"$r\",\"code\",null,{\"children\":\"rows\"}]}],\"：数字，表示默认高度，以平均字符高度计算。默认为 \",[\"$r\",\"code\",null,{\"children\":\"2\"}],\"。\"]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[[\"$r\",\"a\",null,{\"href\":\"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/textarea#wrap\",\"target\":\"_blank\",\"rel\":\"nofollow noopener noreferrer\",\"children\":[\"$r\",\"code\",null,{\"children\":\"wrap\"}]}],\"：可以是 \",[\"$r\",\"code\",null,{\"children\":\"'hard'\"}],\"、\",[\"$r\",\"code\",null,{\"children\":\"'soft'\"}],\" 或 \",[\"$r\",\"code\",null,{\"children\":\"'off'\"}],\" 中的一个值，表示提交表单时文本应如何换行。\"]}],\"\\n\"]}],\"\\n\",[\"$r\",\"h4\",null,{\"id\":\"caveats\",\"children\":\"注意 \"}],\"\\n\",[\"$r\",\"ul\",null,{\"children\":[\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"不允许传递像 \",[\"$r\",\"code\",null,{\"children\":\"<textarea>something</textarea>\"}],\" 这样的子元素，你应该 \",[\"$r\",\"a\",null,{\"href\":\"#providing-an-initial-value-for-a-text-area\",\"children\":[\"使用 \",[\"$r\",\"code\",null,{\"children\":\"defaultValue\"}],\" 提供初始值\"]}],\"。\"]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"如果一个文本框接收字符串类型的 \",[\"$r\",\"code\",null,{\"children\":\"value\"}],\" 属性，那么它将被视为 \",[\"$r\",\"a\",null,{\"href\":\"#controlling-a-text-area-with-a-state-variable\",\"children\":\"受控组件\"}],\"。\"]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":\"一个文本框不能同时既是受控组件又是非受控组件。\"}],\"\\n\",[\"$r\",\"li\",null,{\"children\":\"一个文本框在其生命周期内无法在受控和非受控之间切换。\"}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"每个受控文本框都需要一个 \",[\"$r\",\"code\",null,{\"children\":\"onChange\"}],\" 事件处理程序，以同步更新其后面的新值。\"]}],\"\\n\"]}],\"\\n\",[\"$r\",\"hr\",null,{}],\"\\n\",[\"$r\",\"h2\",null,{\"id\":\"usage\",\"children\":\"用法 \"}],\"\\n\",[\"$r\",\"h3\",null,{\"id\":\"displaying-a-text-area\",\"children\":\"展示一个文本框 \"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"使用 \",[\"$r\",\"code\",null,{\"children\":\"<textarea>\"}],\" 渲染文本框。你可以使用 \",[\"$r\",\"a\",null,{\"href\":\"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/textarea#rows\",\"target\":\"_blank\",\"rel\":\"nofollow noopener noreferrer\",\"children\":[\"$r\",\"code\",null,{\"children\":\"rows\"}]}],\" 和 \",[\"$r\",\"a\",null,{\"href\":\"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/textarea#cols\",\"target\":\"_blank\",\"rel\":\"nofollow noopener noreferrer\",\"children\":[\"$r\",\"code\",null,{\"children\":\"cols\"}]}],\" 属性指定其默认大小，但默认情况下用户可以调整大小。如果要禁用调整大小功能，可以在 CSS 中指定 \",[\"$r\",\"code\",null,{\"children\":\"resize: none\"}],\"。\"]}],\"\\n\"]}],[\"$r\",\"Sandpack\",null,{\"children\":[[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"export default function NewPost() {\\n  return (\\n    <label>\\n      写下你的贴子：\\n      <textarea name=\\\"postContent\\\" rows={4} cols={40} />\\n    </label>\\n  );\\n}\\n\"}]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-css\",\"children\":\"input { margin-left: 5px; }\\ntextarea { margin-top: 10px; }\\nlabel { margin: 10px; }\\nlabel, textarea { display: block; }\\n\"}]}]]}],[\"$r\",\"MaxWidth\",\"56\",{\"children\":[\"\\n\",[\"$r\",\"hr\",null,{}],\"\\n\",[\"$r\",\"h3\",null,{\"id\":\"providing-a-label-for-a-text-area\",\"children\":\"为文本框提供 label 属性 \"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"一般而言，应该将每个 \",[\"$r\",\"code\",null,{\"children\":\"<textarea>\"}],\" 都放置在 \",[\"$r\",\"a\",null,{\"href\":\"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/label\",\"target\":\"_blank\",\"rel\":\"nofollow noopener noreferrer\",\"children\":[\"$r\",\"code\",null,{\"children\":\"<label>\"}]}],\" 内，表示此标签与该选择框相关联。当用户单击标签时，浏览器将自动聚焦选择框。这对于可访问性也非常重要：当用户聚焦选择框时，屏幕阅读器将宣布标签标题。\"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"如果无法将 \",[\"$r\",\"code\",null,{\"children\":\"<textarea>\"}],\" 放置在 \",[\"$r\",\"code\",null,{\"children\":\"<label>\"}],\" 内，请通过将相同的 ID 传递给 \",[\"$r\",\"code\",null,{\"children\":\"<textareaid>\"}],\" 与 \",[\"$r\",\"a\",null,{\"href\":\"https://developer.mozilla.org/zh-CN/docs/Web/API/HTMLLabelElement/htmlFor\",\"target\":\"_blank\",\"rel\":\"nofollow noopener noreferrer\",\"children\":[\"$r\",\"code\",null,{\"children\":\"<label htmlFor>\"}]}],\" 来将它们关联起来。为了避免组件在多个实例之间产生冲突，使用 \",[\"$r\",\"a\",null,{\"href\":\"/reference/react/useId\",\"children\":[\"$r\",\"code\",null,{\"children\":\"useId\"}]}],\" 生成这样的 ID。\"]}],\"\\n\"]}],[\"$r\",\"Sandpack\",null,{\"children\":[[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"import { useId } from 'react';\\n\\nexport default function Form() {\\n  const postTextAreaId = useId();\\n  return (\\n    <>\\n      <label htmlFor={postTextAreaId}>\\n        写下你的贴子：\\n      </label>\\n      <textarea\\n        id={postTextAreaId}\\n        name=\\\"postContent\\\"\\n        rows={4}\\n        cols={40}\\n      />\\n    </>\\n  );\\n}\\n\"}]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-css\",\"children\":\"input { margin: 5px; }\\n\"}]}]]}],[\"$r\",\"MaxWidth\",\"64\",{\"children\":[\"\\n\",[\"$r\",\"hr\",null,{}],\"\\n\",[\"$r\",\"h3\",null,{\"id\":\"providing-an-initial-value-for-a-text-area\",\"children\":\"提供初始值 \"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"使用 \",[\"$r\",\"code\",null,{\"children\":\"defaultValue\"}],\" 属性传递字符串，指定文本框初始值。\"]}],\"\\n\"]}],[\"$r\",\"Sandpack\",null,{\"children\":[[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"export default function EditPost() {\\n  return (\\n    <label>\\n      编辑你的贴子：\\n      <textarea\\n        name=\\\"postContent\\\"\\n        defaultValue=\\\"I really enjoyed biking yesterday!\\\"\\n        rows={4}\\n        cols={40}\\n      />\\n    </label>\\n  );\\n}\\n\"}]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-css\",\"children\":\"input { margin-left: 5px; }\\ntextarea { margin-top: 10px; }\\nlabel { margin: 10px; }\\nlabel, textarea { display: block; }\\n\"}]}]]}],[\"$r\",\"MaxWidth\",\"74\",{\"children\":[\"\\n\",[\"$r\",\"Pitfall\",null,{\"children\":[\"$r\",\"p\",null,{\"children\":[\"与 HTML 不同，像这样传递初始值 \",[\"$r\",\"code\",null,{\"children\":\"<textarea>Some content</textarea>\"}],\" 将不受支持。\"]}]}],\"\\n\",[\"$r\",\"hr\",null,{}],\"\\n\",[\"$r\",\"h3\",null,{\"id\":\"reading-the-text-area-value-when-submitting-a-form\",\"children\":\"提交表单时读取文本框的值 \"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"在文本框周围添加一个包含 \",[\"$r\",\"a\",null,{\"href\":\"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/button\",\"target\":\"_blank\",\"rel\":\"nofollow noopener noreferrer\",\"children\":[\"$r\",\"code\",null,{\"children\":\"<button type=\\\"submit\\\">\"}]}],\" 按钮的 \",[\"$r\",\"a\",null,{\"href\":\"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/form\",\"target\":\"_blank\",\"rel\":\"nofollow noopener noreferrer\",\"children\":[\"$r\",\"code\",null,{\"children\":\"<form>\"}]}],\" 组件。这将调用 \",[\"$r\",\"code\",null,{\"children\":\"<form onSubmit>\"}],\" 事件处理程序。默认情况下，浏览器将向当前 URL 发送表单数据并刷新页面。你可以通过调用 \",[\"$r\",\"code\",null,{\"children\":\"e.preventDefault()\"}],\" 取消此默认行为，并使用 \",[\"$r\",\"a\",null,{\"href\":\"https://developer.mozilla.org/zh-CN/docs/Web/API/FormData\",\"target\":\"_blank\",\"rel\":\"nofollow noopener noreferrer\",\"children\":[\"$r\",\"code\",null,{\"children\":\"new FormData(e.target)\"}]}],\" 读取表单数据。\"]}],\"\\n\"]}],[\"$r\",\"Sandpack\",null,{\"children\":[[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"export default function EditPost() {\\n  function handleSubmit(e) {\\n    // 阻止浏览器重新加载页面\\n    e.preventDefault();\\n\\n    // 读取表单数据\\n    const form = e.target;\\n    const formData = new FormData(form);\\n\\n    // 你可以直接将 formData 作为 fetch 请求的 body：\\n    fetch('/some-api', { method: form.method, body: formData });\\n\\n    // 也可以使用普通的对象：\\n    const formJson = Object.fromEntries(formData.entries());\\n    console.log(formJson);\\n  }\\n\\n  return (\\n    <form method=\\\"post\\\" onSubmit={handleSubmit}>\\n      <label>\\n        贴子标题：<input name=\\\"postTitle\\\" defaultValue=\\\"骑车\\\" />\\n      </label>\\n      <label>\\n        编辑你的贴子：\\n        <textarea\\n          name=\\\"postContent\\\"\\n          defaultValue=\\\"我昨天骑车很高兴！\\\"\\n          rows={4}\\n          cols={40}\\n        />\\n      </label>\\n      <hr />\\n      <button type=\\\"reset\\\">重新编辑</button>\\n      <button type=\\\"submit\\\">保存贴子</button>\\n    </form>\\n  );\\n}\\n\"}]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-css\",\"children\":\"label { display: block; }\\ninput { margin: 5px; }\\n\"}]}]]}],[\"$r\",\"MaxWidth\",\"92\",{\"children\":[\"\\n\",[\"$r\",\"Note\",null,{\"children\":[\"$r\",\"p\",null,{\"children\":[\"给 \",[\"$r\",\"code\",null,{\"children\":\"<textarea>\"}],\" 添加 \",[\"$r\",\"code\",null,{\"children\":\"name\"}],\" 属性，例如 \",[\"$r\",\"code\",null,{\"children\":\"<textarea name=\\\"postContent\\\" />\"}],\"。指定的 \",[\"$r\",\"code\",null,{\"children\":\"name\"}],\" 将作为表单数据中的一个键，例如 \",[\"$r\",\"code\",null,{\"children\":\"{ postContent: \\\"Your post\\\" }\"}],\"。\"]}]}],\"\\n\",[\"$r\",\"Pitfall\",null,{\"children\":[\"$r\",\"p\",null,{\"children\":[\"默认情况下，\",[\"$r\",\"code\",null,{\"children\":\"<form>\"}],\" 内的任何 \",[\"$r\",\"code\",null,{\"children\":\"<button>\"}],\" 都可以提交表单。这可能会让人感到惊讶！如果你有自定义 \",[\"$r\",\"code\",null,{\"children\":\"Button\"}],\" 组件，请考虑使用 \",[\"$r\",\"a\",null,{\"href\":\"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/input/button\",\"target\":\"_blank\",\"rel\":\"nofollow noopener noreferrer\",\"children\":[\"$r\",\"code\",null,{\"children\":\"<button type=\\\"button\\\">\"}]}],\" 而不是 \",[\"$r\",\"code\",null,{\"children\":\"<button>\"}],\"。如果你想要明确指定提交表单的按钮，请使用 \",[\"$r\",\"code\",null,{\"children\":\"<button type=\\\"submit\\\">\"}],\"。\"]}]}],\"\\n\",[\"$r\",\"hr\",null,{}],\"\\n\",[\"$r\",\"h3\",null,{\"id\":\"controlling-a-text-area-with-a-state-variable\",\"children\":\"使用 state 控制文本框 \"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"像 \",[\"$r\",\"code\",null,{\"children\":\"<textarea />\"}],\" 这样的选择框是非受控的。即使你 \",[\"$r\",\"a\",null,{\"href\":\"#providing-an-initial-value-for-a-text-area\",\"children\":\"传递了初始值\"}],\"，比如 \",[\"$r\",\"code\",null,{\"children\":\"<textarea defaultValue=\\\"Initial text\\\" />\"}],\"，你的 JSX 也只是指定了初始值，而非当前时刻的值。\"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"strong\",null,{\"children\":[\"如果要渲染一个受控选择框，请传递 \",[\"$r\",\"code\",null,{\"children\":\"value\"}],\" 属性\"]}],\"。React 将强制传递 \",[\"$r\",\"code\",null,{\"children\":\"value\"}],\" 属性给文本框。通常，你可以通过声明一个 \",[\"$r\",\"a\",null,{\"href\":\"/reference/react/useState\",\"children\":\"state\"}],\" 来控制文本框：\"]}],\"\\n\",[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"meta\":\"{2,6,7}\",\"children\":\"function NewPost() {\\n  const [postContent, setPostContent] = useState(''); // 声明一个 state 变量...\\n  // ...\\n  return (\\n    <textarea\\n      value={postContent} // ...强制文本框的值与 state 相匹配...\\n      onChange={e => setPostContent(e.target.value)} // ...并在每次改变（change）时更新 state！\\n    />\\n  );\\n}\\n\"}]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":\"这将帮助你在每次按键时都触发重新渲染。\"}],\"\\n\"]}],[\"$r\",\"Sandpack\",null,{\"children\":[[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"import { useState } from 'react';\\nimport MarkdownPreview from './MarkdownPreview.js';\\n\\nexport default function MarkdownEditor() {\\n  const [postContent, setPostContent] = useState('_Hello,_ **Markdown**!');\\n  return (\\n    <>\\n      <label>\\n      \\t输入一些 markdown 语言：\\n        <textarea\\n          value={postContent}\\n          onChange={e => setPostContent(e.target.value)}\\n        />\\n      </label>\\n      <hr />\\n      <MarkdownPreview markdown={postContent} />\\n    </>\\n  );\\n}\\n\"}]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"meta\":\"src/MarkdownPreview.js\",\"children\":\"import { Remarkable } from 'remarkable';\\n\\nconst md = new Remarkable();\\n\\nexport default function MarkdownPreview({ markdown }) {\\n  const renderedHTML = md.render(markdown);\\n  return <div dangerouslySetInnerHTML={{__html: renderedHTML}} />;\\n}\\n\"}]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-json\",\"meta\":\"package.json\",\"children\":\"{\\n  \\\"dependencies\\\": {\\n    \\\"react\\\": \\\"latest\\\",\\n    \\\"react-dom\\\": \\\"latest\\\",\\n    \\\"react-scripts\\\": \\\"latest\\\",\\n    \\\"remarkable\\\": \\\"2.0.1\\\"\\n  },\\n  \\\"scripts\\\": {\\n    \\\"start\\\": \\\"react-scripts start\\\",\\n    \\\"build\\\": \\\"react-scripts build\\\",\\n    \\\"test\\\": \\\"react-scripts test --env=jsdom\\\",\\n    \\\"eject\\\": \\\"react-scripts eject\\\"\\n  }\\n}\\n\"}]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-css\",\"children\":\"textarea { display: block; margin-top: 5px; margin-bottom: 10px; }\\n\"}]}]]}],[\"$r\",\"MaxWidth\",\"last\",{\"children\":[\"\\n\",[\"$r\",\"Pitfall\",null,{\"children\":[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"strong\",null,{\"children\":[\"如果传递了 \",[\"$r\",\"code\",null,{\"children\":\"value\"}],\" 但没有传递 \",[\"$r\",\"code\",null,{\"children\":\"onChange\"}],\"，那么将无法在文本框输入任何内容\"]}],\"。当你通过传递 \",[\"$r\",\"code\",null,{\"children\":\"value\"}],\" 来控制文本框时，你需要保证文本框始终具有你传递的值。因此，如果你将一个 state 作为 \",[\"$r\",\"code\",null,{\"children\":\"value\"}],\" 传递，但在 \",[\"$r\",\"code\",null,{\"children\":\"onChange\"}],\" 事件处理程序中忘记同步更新该状态变量，React 将在每次插入字符后将选择框恢复到你指定的 \",[\"$r\",\"code\",null,{\"children\":\"value\"}],\"。\"]}]}],\"\\n\",[\"$r\",\"hr\",null,{}],\"\\n\",[\"$r\",\"h2\",null,{\"id\":\"troubleshooting\",\"children\":\"故障排除 \"}],\"\\n\",[\"$r\",\"h3\",null,{\"id\":\"my-text-area-doesnt-update-when-i-type-into-it\",\"children\":\"输入时文本框没有更新 \"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"如果传递了 \",[\"$r\",\"code\",null,{\"children\":\"value\"}],\" 但没有传递 \",[\"$r\",\"code\",null,{\"children\":\"onChange\"}],\"，你将在控制台中看到一个错误：\"]}],\"\\n\",[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"// 🔴 Bug: controlled text area with no onChange handler\\n<textarea value={something} />\\n\"}]}],\"\\n\",[\"$r\",\"ConsoleBlock\",null,{\"level\":\"error\",\"children\":[\"$r\",\"p\",null,{\"children\":[\"如果在没有提供 \",[\"$r\",\"code\",null,{\"children\":\"onChange\"}],\" 处理程序的情况下向表单字段提供了 \",[\"$r\",\"code\",null,{\"children\":\"value\"}],\" 属性，这将导致文本框只读。如果文本框的内容是可变的，请使用 \",[\"$r\",\"code\",null,{\"children\":\"defaultValue\"}],\"；否则，请指定 \",[\"$r\",\"code\",null,{\"children\":\"onChange\"}],\" 或 \",[\"$r\",\"code\",null,{\"children\":\"readOnly\"}],\"。\"]}]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"正如错误消息所提示的那样，如果你只想 \",[\"$r\",\"a\",null,{\"href\":\"#providing-an-initial-value-for-a-text-area\",\"children\":\"指定初始值\"}],\"，请改为使用 \",[\"$r\",\"code\",null,{\"children\":\"defaultValue\"}],\"：\"]}],\"\\n\",[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"// ✅ Good: uncontrolled text area with an initial value\\n<textarea defaultValue={something} />\\n\"}]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"如果你想 \",[\"$r\",\"a\",null,{\"href\":\"#controlling-a-text-area-with-a-state-variable\",\"children\":\"使用 state 控制文本框\"}],\"，请指定 \",[\"$r\",\"code\",null,{\"children\":\"onChange\"}],\" 处理程序：\"]}],\"\\n\",[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"// ✅ Good: controlled text area with onChange\\n<textarea value={something} onChange={e => setSomething(e.target.value)} />\\n\"}]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"如果文本框的内容是只读的，请指定 \",[\"$r\",\"code\",null,{\"children\":\"readOnly\"}],\" 属性：\"]}],\"\\n\",[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"// ✅ Good: readonly controlled text area without on change\\n<textarea value={something} readOnly={true} />\\n\"}]}],\"\\n\",[\"$r\",\"hr\",null,{}],\"\\n\",[\"$r\",\"h3\",null,{\"id\":\"my-text-area-caret-jumps-to-the-beginning-on-every-keystroke\",\"children\":\"当我输入时，文本框光标会跳到开头 \"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"如果你想要 \",[\"$r\",\"a\",null,{\"href\":\"#controlling-a-text-area-with-a-state-variable\",\"children\":\"控制文本框\"}],\"，你应该在 \",[\"$r\",\"code\",null,{\"children\":\"onChange\"}],\" 期间将对应的 state 变量更新为来自 DOM 的文本框的值。\"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"你不应该将它更新为 \",[\"$r\",\"code\",null,{\"children\":\"e.target.value\"}],\" 以外的值：\"]}],\"\\n\",[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"function handleChange(e) {\\n  // 🔴 Bug: updating an input to something other than e.target.value\\n  setFirstName(e.target.value.toUpperCase());\\n}\\n\"}]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":\"你也不应该异步更新：\"}],\"\\n\",[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"function handleChange(e) {\\n  // 🔴 Bug: updating an input asynchronously\\n  setTimeout(() => {\\n    setFirstName(e.target.value);\\n  }, 100);\\n}\\n\"}]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"将 state 同步更新 \",[\"$r\",\"code\",null,{\"children\":\"e.target.value\"}],\" 以解决此问题：\"]}],\"\\n\",[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"function handleChange(e) {\\n  // ✅ Updating a controlled input to e.target.value synchronously\\n  setFirstName(e.target.value);\\n}\\n\"}]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"如果这不能解决问题，有可能是因为每次输入时文本框都从 DOM 中删除并重新添加。同样，如果在每次重新渲染时不小心 \",[\"$r\",\"a\",null,{\"href\":\"/learn/preserving-and-resetting-state\",\"children\":\"重置了 state\"}],\"，就会发生这种情况。例如，如果文本框或其祖先组件总是接收不同的 \",[\"$r\",\"code\",null,{\"children\":\"key\"}],\"，或者嵌套使用组件（这在 React 中是不允许的，并且会导致“内部”组件在每次渲染时重新挂载），就会发生这种情况。\"]}],\"\\n\",[\"$r\",\"hr\",null,{}],\"\\n\",[\"$r\",\"h3\",null,{\"id\":\"im-getting-an-error-a-component-is-changing-an-uncontrolled-input-to-be-controlled\",\"children\":\"收到错误：“A component is changing an uncontrolled input to be controlled” \"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"提供的 \",[\"$r\",\"code\",null,{\"children\":\"value\"}],\" 属性必须在整个生命周期中都为字符串。\"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"你不能一会传递 \",[\"$r\",\"code\",null,{\"children\":\"value={undefined}\"}],\" 一会传递 \",[\"$r\",\"code\",null,{\"children\":\"value=\\\"some string\\\"\"}],\"，这会导致 React 不清楚你是想指定受控组件还是非受控组件。受控组件的 \",[\"$r\",\"code\",null,{\"children\":\"value\"}],\" 属性应该始终接收字符串，而不是 \",[\"$r\",\"code\",null,{\"children\":\"null\"}],\" 或 \",[\"$r\",\"code\",null,{\"children\":\"undefined\"}],\"。\"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"如果 \",[\"$r\",\"code\",null,{\"children\":\"value\"}],\" 来自 API 或 state，它可能会被初始化为 \",[\"$r\",\"code\",null,{\"children\":\"null\"}],\" 或 \",[\"$r\",\"code\",null,{\"children\":\"undefined\"}],\"。在这种情况下，要么最初将其设置为空字符串（\",[\"$r\",\"code\",null,{\"children\":\"''\"}],\"），要么传递 \",[\"$r\",\"code\",null,{\"children\":\"value={someValue ?? ''}\"}],\" 以确保 \",[\"$r\",\"code\",null,{\"children\":\"value\"}],\" 是一个字符串。\"]}]]}]]","meta":{"title":"<textarea>"}},"__N_SSG":true}