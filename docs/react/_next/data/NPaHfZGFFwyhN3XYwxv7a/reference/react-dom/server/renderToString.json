{"pageProps":{"toc":"[{\"url\":\"#\",\"text\":\"概览\",\"depth\":2},{\"url\":\"#reference\",\"depth\":2,\"text\":\"Reference \"},{\"url\":\"#rendertostring\",\"depth\":3,\"text\":[[\"$r\",\"code\",null,{\"children\":\"renderToString(reactNode, options?)\"}],\" \"]},{\"url\":\"#usage\",\"depth\":2,\"text\":\"用法 \"},{\"url\":\"#rendering-a-react-tree-as-html-to-a-string\",\"depth\":3,\"text\":\"将 React 树渲染为 HTML 字符串 \"},{\"url\":\"#alternatives\",\"depth\":2,\"text\":\"替代方案 \"},{\"url\":\"#migrating-from-rendertostring-to-a-streaming-method-on-the-server\",\"depth\":3,\"text\":[\"从 \",[\"$r\",\"code\",null,{\"children\":\"renderToString\"}],\" 迁移到服务器上的流式传输方法 \"]},{\"url\":\"#removing-rendertostring-from-the-client-code\",\"depth\":3,\"text\":[\"从客户端代码中移除 \",[\"$r\",\"code\",null,{\"children\":\"renderToString\"}],\" \"]},{\"url\":\"#troubleshooting\",\"depth\":2,\"text\":\"故障排除 \"},{\"url\":\"#when-a-component-suspends-the-html-always-contains-a-fallback\",\"depth\":3,\"text\":\"当组件暂停时，HTML 中始终包含一个后备方案 \"}]","content":"[[\"$r\",\"MaxWidth\",\"last\",{\"children\":[[\"$r\",\"Pitfall\",null,{\"children\":[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"renderToString\"}],\" 不支持流式传输或等待数据。\",[\"$r\",\"a\",null,{\"href\":\"#alternatives\",\"children\":\"请参考替代方案\"}],\"。\"]}]}],\"\\n\",[\"$r\",\"Intro\",null,{\"children\":[[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"renderToString\"}],\" 将 React 树渲染为一个 HTML 字符串。\"]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"const html = renderToString(reactNode, options?)\\n\"}]}]]}],\"\\n\",[\"$r\",\"InlineToc\",null,{}],\"\\n\",[\"$r\",\"hr\",null,{}],\"\\n\",[\"$r\",\"h2\",null,{\"id\":\"reference\",\"children\":\"Reference \"}],\"\\n\",[\"$r\",\"h3\",null,{\"id\":\"rendertostring\",\"children\":[[\"$r\",\"code\",null,{\"children\":\"renderToString(reactNode, options?)\"}],\" \"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"在服务器，调用 \",[\"$r\",\"code\",null,{\"children\":\"renderToString\"}],\" 将你的应用渲染为 HTML。\"]}],\"\\n\",[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"import { renderToString } from 'react-dom/server';\\n\\nconst html = renderToString(<App />);\\n\"}]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"在客户端，调用 \",[\"$r\",\"a\",null,{\"href\":\"/reference/react-dom/client/hydrateRoot\",\"children\":[\"$r\",\"code\",null,{\"children\":\"hydrateRoot\"}]}],\" 来使服务器生成的 HTML 具有交互性。\"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"a\",null,{\"href\":\"#usage\",\"children\":\"请参考下面的更多示例\"}],\"。\"]}],\"\\n\",[\"$r\",\"h4\",null,{\"id\":\"parameters\",\"children\":\"参数 \"}],\"\\n\",[\"$r\",\"ul\",null,{\"children\":[\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"\\n\",[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"reactNode\"}],\"：你要渲染为 HTML 的 React 节点。例如，一个 JSX 节点，就像 \",[\"$r\",\"code\",null,{\"children\":\"<App />\"}],\"。\"]}],\"\\n\"]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"\\n\",[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"strong\",null,{\"children\":\"optional\"}],\" \",[\"$r\",\"code\",null,{\"children\":\"options\"}],\": An object for server render.\"]}],\"\\n\",[\"$r\",\"ul\",null,{\"children\":[\"\\n\",[\"$r\",\"li\",null,{\"children\":[[\"$r\",\"strong\",null,{\"children\":\"optional\"}],\" \",[\"$r\",\"code\",null,{\"children\":\"identifierPrefix\"}],\": A string prefix React uses for IDs generated by \",[\"$r\",\"a\",null,{\"href\":\"/reference/react/useId\",\"children\":[[\"$r\",\"code\",null,{\"children\":\"useId\"}],\".\"]}],\" Useful to avoid conflicts when using multiple roots on the same page. Must be the same prefix as passed to \",[\"$r\",\"a\",null,{\"href\":\"/reference/react-dom/client/hydrateRoot#parameters\",\"children\":[[\"$r\",\"code\",null,{\"children\":\"hydrateRoot\"}],\".\"]}]]}],\"\\n\"]}],\"\\n\"]}],\"\\n\"]}],\"\\n\",[\"$r\",\"h4\",null,{\"id\":\"returns\",\"children\":\"Returns \"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":\"一个 HTML 字符串。\"}],\"\\n\",[\"$r\",\"h4\",null,{\"id\":\"caveats\",\"children\":\"注意事项 \"}],\"\\n\",[\"$r\",\"ul\",null,{\"children\":[\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"\\n\",[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"renderToString\"}],\" 对 Suspense 的支持有限。如果一个组件挂起（suspend），\",[\"$r\",\"code\",null,{\"children\":\"renderToString\"}],\" 会立即将其后备方案作为 HTML 发送。\"]}],\"\\n\"]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"\\n\",[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"renderToString\"}],\" 可以在浏览器中工作，但 \",[\"$r\",\"a\",null,{\"href\":\"#removing-rendertostring-from-the-client-code\",\"children\":\"不推荐\"}],\" 在客户端代码中使用它。\"]}],\"\\n\"]}],\"\\n\"]}],\"\\n\",[\"$r\",\"hr\",null,{}],\"\\n\",[\"$r\",\"h2\",null,{\"id\":\"usage\",\"children\":\"用法 \"}],\"\\n\",[\"$r\",\"h3\",null,{\"id\":\"rendering-a-react-tree-as-html-to-a-string\",\"children\":\"将 React 树渲染为 HTML 字符串 \"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"调用 \",[\"$r\",\"code\",null,{\"children\":\"renderToString\"}],\" 将你的应用渲染为 HTML 字符串，你可以将其与服务器响应一起发送：\"]}],\"\\n\",[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"meta\":\"{5-6}\",\"children\":\"import { renderToString } from 'react-dom/server';\\n\\n// 路由处理程序的语法取决于你使用的后端框架\\napp.use('/', (request, response) => {\\n  const html = renderToString(<App />);\\n  response.send(html);\\n});\\n\"}]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"这将生成你的 React 组件的初始非交互式 HTML 输出。在客户端上，你需要调用 \",[\"$r\",\"a\",null,{\"href\":\"/reference/react-dom/client/hydrateRoot\",\"children\":[\"$r\",\"code\",null,{\"children\":\"hydrateRoot\"}]}],\" 来将服务器生成的 HTML 进行 hydrate 处理，使其具有交互功能。\"]}],\"\\n\",[\"$r\",\"Pitfall\",null,{\"children\":[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"renderToString\"}],\" 不支持流式传输或等待数据。\",[\"$r\",\"a\",null,{\"href\":\"#alternatives\",\"children\":\"请参考替代方案\"}],\"。\"]}]}],\"\\n\",[\"$r\",\"hr\",null,{}],\"\\n\",[\"$r\",\"h2\",null,{\"id\":\"alternatives\",\"children\":\"替代方案 \"}],\"\\n\",[\"$r\",\"h3\",null,{\"id\":\"migrating-from-rendertostring-to-a-streaming-method-on-the-server\",\"children\":[\"从 \",[\"$r\",\"code\",null,{\"children\":\"renderToString\"}],\" 迁移到服务器上的流式传输方法 \"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"renderToString\"}],\" 立即返回一个字符串，因此不支持流式传输或等待数据。\"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":\"如果可能的话，我们建议使用这些功能完整的替代方法：\"}],\"\\n\",[\"$r\",\"ul\",null,{\"children\":[\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"如果你使用 Node.js，请使用 \",[\"$r\",\"a\",null,{\"href\":\"/reference/react-dom/server/renderToPipeableStream\",\"children\":[\"$r\",\"code\",null,{\"children\":\"renderToPipeableStream\"}]}],\"。\"]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"如果你使用 Deno 或支持 \",[\"$r\",\"a\",null,{\"href\":\"https://developer.mozilla.org/zh-CN/docs/Web/API/Streams_API\",\"target\":\"_blank\",\"rel\":\"nofollow noopener noreferrer\",\"children\":\"Web Streams\"}],\" 的现代运行时，请使用 \",[\"$r\",\"a\",null,{\"href\":\"/reference/react-dom/server/renderToReadableStream\",\"children\":[\"$r\",\"code\",null,{\"children\":\"renderToReadableStream\"}]}],\"。\"]}],\"\\n\"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"如果你的服务器环境不支持流式传输，你仍然可以继续使用 \",[\"$r\",\"code\",null,{\"children\":\"renderToString\"}],\"。\"]}],\"\\n\",[\"$r\",\"hr\",null,{}],\"\\n\",[\"$r\",\"h3\",null,{\"id\":\"removing-rendertostring-from-the-client-code\",\"children\":[\"从客户端代码中移除 \",[\"$r\",\"code\",null,{\"children\":\"renderToString\"}],\" \"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"有时，\",[\"$r\",\"code\",null,{\"children\":\"renderToString\"}],\" 用于在客户端将某个组件转换为 HTML。\"]}],\"\\n\",[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"meta\":\"{1-2}\",\"children\":\"// 🚩 不必要：在客户端使用 renderToString\\nimport { renderToString } from 'react-dom/server';\\n\\nconst html = renderToString(<MyIcon />);\\nconsole.log(html); // 例如，\\\"<svg>...</svg>\\\"\\n\"}]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"在客户端导入 \",[\"$r\",\"code\",null,{\"children\":\"react-dom/server\"}],\" 会不必要地增加 bundle 大小，所以应该避免这样做。如果你需要在浏览器中将某个组件渲染为 HTML，请使用 \",[\"$r\",\"a\",null,{\"href\":\"/reference/react-dom/client/createRoot\",\"children\":[\"$r\",\"code\",null,{\"children\":\"createRoot\"}]}],\" 并从 DOM 中读取 HTML。\"]}],\"\\n\",[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"import { createRoot } from 'react-dom/client';\\nimport { flushSync } from 'react-dom';\\n\\nconst div = document.createElement('div');\\nconst root = createRoot(div);\\nflushSync(() => {\\n  root.render(<MyIcon />);\\n});\\nconsole.log(div.innerHTML); // 例如，\\\"<svg>...</svg>\\\"\\n\"}]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"a\",null,{\"href\":\"/reference/react-dom/flushSync\",\"children\":[\"$r\",\"code\",null,{\"children\":\"flushSync\"}]}],\" 调用是必要的，以便在读取 \",[\"$r\",\"a\",null,{\"href\":\"https://developer.mozilla.org/zh-CN/docs/Web/API/Element/innerHTML\",\"target\":\"_blank\",\"rel\":\"nofollow noopener noreferrer\",\"children\":[\"$r\",\"code\",null,{\"children\":\"innerHTML\"}]}],\" 属性之前更新 DOM。\"]}],\"\\n\",[\"$r\",\"hr\",null,{}],\"\\n\",[\"$r\",\"h2\",null,{\"id\":\"troubleshooting\",\"children\":\"故障排除 \"}],\"\\n\",[\"$r\",\"h3\",null,{\"id\":\"when-a-component-suspends-the-html-always-contains-a-fallback\",\"children\":\"当组件暂停时，HTML 中始终包含一个后备方案 \"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"renderToString\"}],\" 不完全支持 Suspense。\"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"如果某个组件 suspend（例如，因为它使用 \",[\"$r\",\"a\",null,{\"href\":\"/reference/react/lazy\",\"children\":[\"$r\",\"code\",null,{\"children\":\"lazy\"}]}],\" 定义或获取数据），\",[\"$r\",\"code\",null,{\"children\":\"renderToString\"}],\" 不会等待其内容解析完成。相反，\",[\"$r\",\"code\",null,{\"children\":\"renderToString\"}],\" 将找到最近的 \",[\"$r\",\"a\",null,{\"href\":\"/reference/react/Suspense\",\"children\":[\"$r\",\"code\",null,{\"children\":\"<Suspense>\"}]}],\" 边界，并在 HTML 中渲染其 \",[\"$r\",\"code\",null,{\"children\":\"fallback\"}],\" 属性。直到客户端代码加载后，内容才会显示出来。\"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"要解决这个问题，请使用其中一个 \",[\"$r\",\"a\",null,{\"href\":\"#migrating-from-rendertostring-to-a-streaming-method-on-the-server\",\"children\":\"推荐的流式解决方案\"}],\"。它们可以在服务器上逐步以块的形式流式传输内容，使用户在客户端代码加载之前逐步看到页面填充。\"]}]]}]]","meta":{"title":"renderToString"}},"__N_SSG":true}