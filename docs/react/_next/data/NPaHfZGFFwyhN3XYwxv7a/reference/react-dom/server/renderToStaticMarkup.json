{"pageProps":{"toc":"[{\"url\":\"#\",\"text\":\"概览\",\"depth\":2},{\"url\":\"#reference\",\"depth\":2,\"text\":\"参考 \"},{\"url\":\"#rendertostaticmarkup\",\"depth\":3,\"text\":[[\"$r\",\"code\",null,{\"children\":\"renderToStaticMarkup(reactNode, options?)\"}],\" \"]},{\"url\":\"#usage\",\"depth\":2,\"text\":\"用法 \"},{\"url\":\"#rendering-a-non-interactive-react-tree-as-html-to-a-string\",\"depth\":3,\"text\":\"将一个非交互式的 React 树渲染成 HTML 字符串 \"}]","content":"[[\"$r\",\"MaxWidth\",\"last\",{\"children\":[[\"$r\",\"Intro\",null,{\"children\":[[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"renderToStaticMarkup\"}],\" 会将非交互的 React 组件树渲染成 HTML 字符串。\"]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"const html = renderToStaticMarkup(reactNode, options?)\\n\"}]}]]}],\"\\n\",[\"$r\",\"InlineToc\",null,{}],\"\\n\",[\"$r\",\"hr\",null,{}],\"\\n\",[\"$r\",\"h2\",null,{\"id\":\"reference\",\"children\":\"参考 \"}],\"\\n\",[\"$r\",\"h3\",null,{\"id\":\"rendertostaticmarkup\",\"children\":[[\"$r\",\"code\",null,{\"children\":\"renderToStaticMarkup(reactNode, options?)\"}],\" \"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"在服务器上，调用 \",[\"$r\",\"code\",null,{\"children\":\"renderToStaticMarkup\"}],\" 将你的应用程序渲染成 HTML。\"]}],\"\\n\",[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"import { renderToStaticMarkup } from 'react-dom/server';\\n\\nconst html = renderToStaticMarkup(<Page />);\\n\"}]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":\"它将会把 React 组件转换为非交互式 HTML 。\"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"a\",null,{\"href\":\"#usage\",\"children\":\"请看下方更多示例\"}],\"。\"]}],\"\\n\",[\"$r\",\"h4\",null,{\"id\":\"parameters\",\"children\":\"参数 \"}],\"\\n\",[\"$r\",\"ul\",null,{\"children\":[\"\\n\",[\"$r\",\"li\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"reactNode\"}],\": A React node you want to render to HTML. For example, a JSX node like \",[\"$r\",\"code\",null,{\"children\":\"<Page />\"}],\".\"]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[[\"$r\",\"strong\",null,{\"children\":\"optional\"}],\" \",[\"$r\",\"code\",null,{\"children\":\"options\"}],\": An object for server render.\",\"\\n\",[\"$r\",\"ul\",null,{\"children\":[\"\\n\",[\"$r\",\"li\",null,{\"children\":[[\"$r\",\"strong\",null,{\"children\":\"optional\"}],\" \",[\"$r\",\"code\",null,{\"children\":\"identifierPrefix\"}],\": A string prefix React uses for IDs generated by \",[\"$r\",\"a\",null,{\"href\":\"/reference/react/useId\",\"children\":[[\"$r\",\"code\",null,{\"children\":\"useId\"}],\".\"]}],\" Useful to avoid conflicts when using multiple roots on the same page.\"]}],\"\\n\"]}],\"\\n\"]}],\"\\n\"]}],\"\\n\",[\"$r\",\"h4\",null,{\"id\":\"returns\",\"children\":\"返回值 \"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":\"一个 HTML 字符串。\"}],\"\\n\",[\"$r\",\"h4\",null,{\"id\":\"caveats\",\"children\":\"注意事项 \"}],\"\\n\",[\"$r\",\"ul\",null,{\"children\":[\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"\\n\",[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"renderToStaticMarkup\"}],\" 的输出无法进行二次渲染。\"]}],\"\\n\"]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"\\n\",[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"renderToStaticMarkup\"}],\" 对 Suspense 的支持有限。如果一个组件触发了 Suspense，\",[\"$r\",\"code\",null,{\"children\":\"renderToStaticMarkup\"}],\" 立即将它的后备方案作为 HTML 输出。\"]}],\"\\n\"]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"\\n\",[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"renderToStaticMarkup\"}],\" 在浏览器中可以使用，但不建议在客户端代码中使用它。如果你需要在浏览器中将组件渲染成 HTML，\",[\"$r\",\"a\",null,{\"href\":\"/reference/react-dom/server/renderToString#removing-rendertostring-from-the-client-code\",\"children\":\"请把它渲染到 DOM 节点中以获取 HTML\"}],\"。\"]}],\"\\n\"]}],\"\\n\"]}],\"\\n\",[\"$r\",\"hr\",null,{}],\"\\n\",[\"$r\",\"h2\",null,{\"id\":\"usage\",\"children\":\"用法 \"}],\"\\n\",[\"$r\",\"h3\",null,{\"id\":\"rendering-a-non-interactive-react-tree-as-html-to-a-string\",\"children\":\"将一个非交互式的 React 树渲染成 HTML 字符串 \"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":\"“\"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"调用 \",[\"$r\",\"code\",null,{\"children\":\"renderToStaticMarkup\"}],\" 将你的应用程序渲染为 HTML 字符串，然后将其与服务器响应一起发送：\"]}],\"\\n\",[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"meta\":\"{5-6}\",\"children\":\"import { renderToStaticMarkup } from 'react-dom/server';\\n\\n// 路由处理程序语法取决于你的后端框架\\napp.use('/', (request, response) => {\\n  const html = renderToStaticMarkup(<Page />);\\n  response.send(html);\\n});\\n\"}]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":\"这将会把 React 组件转换为非交互式 HTML 。\"}],\"\\n\",[\"$r\",\"Pitfall\",null,{\"children\":[[\"$r\",\"p\",null,{\"children\":[\"此方法渲染的是 \",[\"$r\",\"strong\",null,{\"children\":\"无法进行二次渲染的非交互式 HTML\"}],\"。如果你需要使用 React 作为简单静态页面生成器，或者需要呈现纯静态内容（例如邮件），则这种方法非常适用。\"]}],[\"$r\",\"p\",null,{\"children\":[\"对于交互式的应用程序，建议在服务器端使用 \",[\"$r\",\"a\",null,{\"href\":\"/reference/react-dom/server/renderToString\",\"children\":[\"$r\",\"code\",null,{\"children\":\"renderToString\"}]}],\" 方法，而在客户端上使用 \",[\"$r\",\"a\",null,{\"href\":\"/reference/react-dom/client/hydrateRoot\",\"children\":[\"$r\",\"code\",null,{\"children\":\"hydrateRoot\"}]}],\" 方法。\"]}]]}]]}]]","meta":{"title":"renderToStaticMarkup"}},"__N_SSG":true}