{"pageProps":{"toc":"[{\"url\":\"#\",\"text\":\"概览\",\"depth\":2},{\"url\":\"#reference\",\"depth\":2,\"text\":\"参考 \"},{\"url\":\"#createfactory\",\"depth\":3,\"text\":[[\"$r\",\"code\",null,{\"children\":\"createFactory(type)\"}],\" \"]},{\"url\":\"#usage\",\"depth\":2,\"text\":\"用法 \"},{\"url\":\"#creating-react-elements-with-a-factory\",\"depth\":3,\"text\":\"使用工厂函数创建 React 元素 \"},{\"url\":\"#alternatives\",\"depth\":2,\"text\":\"替代方案 \"},{\"url\":\"#copying-createfactory-into-your-project\",\"depth\":3,\"text\":[\"将 \",[\"$r\",\"code\",null,{\"children\":\"createFactory\"}],\" 拷贝进项目中 \"]},{\"url\":\"#replacing-createfactory-with-createelement\",\"depth\":3,\"text\":[\"使用 \",[\"$r\",\"code\",null,{\"children\":\"createElement\"}],\" 替代 \",[\"$r\",\"code\",null,{\"children\":\"createFactory\"}],\" \"]},{\"url\":\"#replacing-createfactory-with-jsx\",\"depth\":3,\"text\":[\"使用 JSX 替代 \",[\"$r\",\"code\",null,{\"children\":\"createFactory\"}],\" \"]}]","content":"[[\"$r\",\"MaxWidth\",\"44\",{\"children\":[[\"$r\",\"Deprecated\",null,{\"children\":[\"$r\",\"p\",null,{\"children\":[\"此 API 将在未来的 React 主要版本中被移除，\",[\"$r\",\"a\",null,{\"href\":\"#alternatives\",\"children\":\"请查看替代方案\"}],\"。\"]}]}],\"\\n\",[\"$r\",\"Intro\",null,{\"children\":[[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"createFactory\"}],\" 可以创建一个能够生成指定类型 React 元素的函数。\"]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"const factory = createFactory(type)\\n\"}]}]]}],\"\\n\",[\"$r\",\"InlineToc\",null,{}],\"\\n\",[\"$r\",\"hr\",null,{}],\"\\n\",[\"$r\",\"h2\",null,{\"id\":\"reference\",\"children\":\"参考 \"}],\"\\n\",[\"$r\",\"h3\",null,{\"id\":\"createfactory\",\"children\":[[\"$r\",\"code\",null,{\"children\":\"createFactory(type)\"}],\" \"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"调用 \",[\"$r\",\"code\",null,{\"children\":\"createFactory(type)\"}],\" 创建一个能够生成指定 \",[\"$r\",\"code\",null,{\"children\":\"type\"}],\" 的 React 元素的工厂函数。\"]}],\"\\n\",[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"import { createFactory } from 'react';\\n\\nconst button = createFactory('button');\\n\"}]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":\"然后你可以在不使用 JSX 的情况下创建 React 元素：\"}],\"\\n\",[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"export default function App() {\\n  return button({\\n    onClick: () => {\\n      alert('Clicked!')\\n    }\\n  }, 'Click me');\\n}\\n\"}]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"a\",null,{\"href\":\"#usage\",\"children\":\"参见下面更多示例\"}],\"。\"]}],\"\\n\",[\"$r\",\"h4\",null,{\"id\":\"parameters\",\"children\":\"参数 \"}],\"\\n\",[\"$r\",\"ul\",null,{\"children\":[\"\\n\",[\"$r\",\"li\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"type\"}],\"：\",[\"$r\",\"code\",null,{\"children\":\"type\"}],\" 参数必须是一个有效的 React 组件类型。例如，它可以是标签名称的字符串（如 \",[\"$r\",\"code\",null,{\"children\":\"'div'\"}],\" 或 \",[\"$r\",\"code\",null,{\"children\":\"'span'\"}],\"），或一个 React 组件（函数式组件、类式组件或一个特殊的组件，如 \",[\"$r\",\"a\",null,{\"href\":\"/reference/react/Fragment\",\"children\":[\"$r\",\"code\",null,{\"children\":\"Fragment\"}]}],\"）。\"]}],\"\\n\"]}],\"\\n\",[\"$r\",\"h4\",null,{\"id\":\"returns\",\"children\":\"返回值 \"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"返回一个工厂函数。该工厂函数接收一个 \",[\"$r\",\"code\",null,{\"children\":\"props\"}],\" 对象作为第一个参数，后跟一系列的 \",[\"$r\",\"code\",null,{\"children\":\"...children\"}],\" 参数，并返回一个具有给定 \",[\"$r\",\"code\",null,{\"children\":\"type\"}],\"、\",[\"$r\",\"code\",null,{\"children\":\"props\"}],\" 和 \",[\"$r\",\"code\",null,{\"children\":\"children\"}],\" 的 React 元素，\"]}],\"\\n\",[\"$r\",\"hr\",null,{}],\"\\n\",[\"$r\",\"h2\",null,{\"id\":\"usage\",\"children\":\"用法 \"}],\"\\n\",[\"$r\",\"h3\",null,{\"id\":\"creating-react-elements-with-a-factory\",\"children\":\"使用工厂函数创建 React 元素 \"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"尽管大多数 React 项目都使用 \",[\"$r\",\"a\",null,{\"href\":\"/learn/writing-markup-with-jsx\",\"children\":\"JSX\"}],\" 来描述用户界面，但并非必须使用 JSX。在过去，\",[\"$r\",\"code\",null,{\"children\":\"createFactory\"}],\" 曾是一种在没有 JSX 的情况下描述用户界面的方法之一。\"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"调用 \",[\"$r\",\"code\",null,{\"children\":\"createFactory\"}],\" 来为特定的元素类型，如 \",[\"$r\",\"code\",null,{\"children\":\"'button'\"}],\"，创建一个 \",[\"$r\",\"strong\",null,{\"children\":\"工厂函数\"}],\"：\"]}],\"\\n\",[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"import { createFactory } from 'react';\\n\\nconst button = createFactory('button');\\n\"}]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"调用该工厂函数将生成具有你提供的 \",[\"$r\",\"code\",null,{\"children\":\"props\"}],\" 和 \",[\"$r\",\"code\",null,{\"children\":\"children\"}],\" 的 React 元素：\"]}],\"\\n\"]}],[\"$r\",\"Sandpack\",null,{\"children\":[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"meta\":\"src/App.js\",\"children\":\"import { createFactory } from 'react';\\n\\nconst button = createFactory('button');\\n\\nexport default function App() {\\n  return button({\\n    onClick: () => {\\n      alert('已点击！')\\n    }\\n  }, '点我');\\n}\\n\"}]}]}],[\"$r\",\"MaxWidth\",\"56\",{\"children\":[\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"这就是 \",[\"$r\",\"code\",null,{\"children\":\"createFactory\"}],\" 作为 JSX 的替代方式的使用方法。但是，\",[\"$r\",\"code\",null,{\"children\":\"createFactory\"}],\" 已被弃用，因此你不应在任何新代码中调用 \",[\"$r\",\"code\",null,{\"children\":\"createFactory\"}],\"。请参阅下面内容，了解如何从 \",[\"$r\",\"code\",null,{\"children\":\"createFactory\"}],\" 迁移。\"]}],\"\\n\",[\"$r\",\"hr\",null,{}],\"\\n\",[\"$r\",\"h2\",null,{\"id\":\"alternatives\",\"children\":\"替代方案 \"}],\"\\n\",[\"$r\",\"h3\",null,{\"id\":\"copying-createfactory-into-your-project\",\"children\":[\"将 \",[\"$r\",\"code\",null,{\"children\":\"createFactory\"}],\" 拷贝进项目中 \"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"如果项目中调用了许多 \",[\"$r\",\"code\",null,{\"children\":\"createFactory\"}],\"，那么请将此 \",[\"$r\",\"code\",null,{\"children\":\"createFactory.js\"}],\" 复制到你的项目中：\"]}],\"\\n\"]}],[\"$r\",\"Sandpack\",null,{\"children\":[[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"meta\":\"src/App.js\",\"children\":\"import { createFactory } from './createFactory.js';\\n\\nconst button = createFactory('button');\\n\\nexport default function App() {\\n  return button({\\n    onClick: () => {\\n      alert('已点击！')\\n    }\\n  }, '点我');\\n}\\n\"}]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"meta\":\"src/createFactory.js\",\"children\":\"import { createElement } from 'react';\\n\\nexport function createFactory(type) {\\n  return createElement.bind(null, type);\\n}\\n\"}]}]]}],[\"$r\",\"MaxWidth\",\"74\",{\"children\":[\"\\n\",[\"$r\",\"p\",null,{\"children\":\"这可以在只更改导入的情况下，保持其他所有代码不变。\"}],\"\\n\",[\"$r\",\"hr\",null,{}],\"\\n\",[\"$r\",\"h3\",null,{\"id\":\"replacing-createfactory-with-createelement\",\"children\":[\"使用 \",[\"$r\",\"code\",null,{\"children\":\"createElement\"}],\" 替代 \",[\"$r\",\"code\",null,{\"children\":\"createFactory\"}],\" \"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"如果只有几个 \",[\"$r\",\"code\",null,{\"children\":\"createFactory\"}],\" 需要手动迁移，并且不想使用 JSX，你可以将调用工厂函数替换为调用 \",[\"$r\",\"a\",null,{\"href\":\"/reference/react/createElement\",\"children\":[\"$r\",\"code\",null,{\"children\":\"createElement\"}]}],\"。例如，你可以将以下代码：\"]}],\"\\n\",[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"meta\":\"{1,3,6}\",\"children\":\"import { createFactory } from 'react';\\n\\nconst button = createFactory('button');\\n\\nexport default function App() {\\n  return button({\\n    onClick: () => {\\n      alert('Clicked!')\\n    }\\n  }, 'Click me');\\n}\\n\"}]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":\"替换为以下代码：\"}],\"\\n\",[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"meta\":\"{1,4}\",\"children\":\"import { createElement } from 'react';\\n\\nexport default function App() {\\n  return createElement('button', {\\n    onClick: () => {\\n      alert('Clicked!')\\n    }\\n  }, 'Click me');\\n}\\n\"}]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":\"这是一个完整的在不使用 JSX 的情况下使用 React 的示例：\"}],\"\\n\"]}],[\"$r\",\"Sandpack\",null,{\"children\":[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"meta\":\"src/App.js\",\"children\":\"import { createElement } from 'react';\\n\\nexport default function App() {\\n  return createElement('button', {\\n    onClick: () => {\\n      alert('已点击！')\\n    }\\n  }, '点我');\\n}\\n\"}]}]}],[\"$r\",\"MaxWidth\",\"82\",{\"children\":[\"\\n\",[\"$r\",\"hr\",null,{}],\"\\n\",[\"$r\",\"h3\",null,{\"id\":\"replacing-createfactory-with-jsx\",\"children\":[\"使用 JSX 替代 \",[\"$r\",\"code\",null,{\"children\":\"createFactory\"}],\" \"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"最终，你可以使用 JSX 替代 \",[\"$r\",\"code\",null,{\"children\":\"createFactory\"}],\"。这也是大多数使用 React 的方式：\"]}],\"\\n\"]}],[\"$r\",\"Sandpack\",null,{\"children\":[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"meta\":\"src/App.js\",\"children\":\"export default function App() {\\n  return (\\n    <button onClick={() => {\\n      alert('已点击！');\\n    }}>\\n      点我\\n    </button>\\n  );\\n};\\n\"}]}]}],[\"$r\",\"MaxWidth\",\"last\",{\"children\":[\"\\n\",[\"$r\",\"Pitfall\",null,{\"children\":[[\"$r\",\"p\",null,{\"children\":[\"有时，现有代码可能会将某个变量而不是 \",[\"$r\",\"code\",null,{\"children\":\"'button'\"}],\" 这样的常亮作为 \",[\"$r\",\"code\",null,{\"children\":\"type\"}],\" 传递：\"]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"meta\":\"{3}\",\"children\":\"function Heading({ isSubheading, ...props }) {\\n  const type = isSubheading ? 'h2' : 'h1';\\n  const factory = createFactory(type);\\n  return factory(props);\\n}\\n\"}]}],[\"$r\",\"p\",null,{\"children\":[\"如果在 JSX 中要做相同的事情，需要将变量重命名为以大写字母开头，例如 \",[\"$r\",\"code\",null,{\"children\":\"Type\"}],\"：\"]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"meta\":\"{2,3}\",\"children\":\"function Heading({ isSubheading, ...props }) {\\n  const Type = isSubheading ? 'h2' : 'h1';\\n  return <Type {...props} />;\\n}\\n\"}]}],[\"$r\",\"p\",null,{\"children\":[\"如果是小写字母开头，React 会将 \",[\"$r\",\"code\",null,{\"children\":\"<type>\"}],\" 作为内置的 HTML 标签。\"]}]]}]]}]]","meta":{"title":"createFactory"}},"__N_SSG":true}