{"pageProps":{"toc":"[{\"url\":\"#\",\"text\":\"概览\",\"depth\":2},{\"url\":\"#reference\",\"depth\":2,\"text\":\"参考 \"},{\"url\":\"#isvalidelement\",\"depth\":3,\"text\":[[\"$r\",\"code\",null,{\"children\":\"isValidElement(value)\"}],\" \"]},{\"url\":\"#usage\",\"depth\":2,\"text\":\"用法 \"},{\"url\":\"#checking-if-something-is-a-react-element\",\"depth\":3,\"text\":\"检测某些值是否是 React 元素 \"}]","content":"[[\"$r\",\"MaxWidth\",\"last\",{\"children\":[[\"$r\",\"Intro\",null,{\"children\":[[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"isValidElement\"}],\" 检测参数值是否为 React 元素。\"]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"const isElement = isValidElement(value)\\n\"}]}]]}],\"\\n\",[\"$r\",\"InlineToc\",null,{}],\"\\n\",[\"$r\",\"hr\",null,{}],\"\\n\",[\"$r\",\"h2\",null,{\"id\":\"reference\",\"children\":\"参考 \"}],\"\\n\",[\"$r\",\"h3\",null,{\"id\":\"isvalidelement\",\"children\":[[\"$r\",\"code\",null,{\"children\":\"isValidElement(value)\"}],\" \"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"调用 \",[\"$r\",\"code\",null,{\"children\":\"isValidElement(value)\"}],\" 来检测 \",[\"$r\",\"code\",null,{\"children\":\"value\"}],\" 是否是 React 元素。\"]}],\"\\n\",[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"import { isValidElement, createElement } from 'react';\\n\\n// ✅ React 元素\\nconsole.log(isValidElement(<p />)); // true\\nconsole.log(isValidElement(createElement('p'))); // true\\n\\n// ❌ 非 React 元素\\nconsole.log(isValidElement(25)); // false\\nconsole.log(isValidElement('Hello')); // false\\nconsole.log(isValidElement({ age: 42 })); // false\\n\"}]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"a\",null,{\"href\":\"#usage\",\"children\":\"请看下方更多示例\"}],\"。\"]}],\"\\n\",[\"$r\",\"h4\",null,{\"id\":\"parameters\",\"children\":\"参数 \"}],\"\\n\",[\"$r\",\"ul\",null,{\"children\":[\"\\n\",[\"$r\",\"li\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"value\"}],\"：你想要检测的 \",[\"$r\",\"code\",null,{\"children\":\"value\"}],\" 值。它可以是任何类型的值。\"]}],\"\\n\"]}],\"\\n\",[\"$r\",\"h4\",null,{\"id\":\"returns\",\"children\":\"返回值 \"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"如果 \",[\"$r\",\"code\",null,{\"children\":\"value\"}],\" 是一个 React 元素，\",[\"$r\",\"code\",null,{\"children\":\"isValidElement\"}],\" 返回 \",[\"$r\",\"code\",null,{\"children\":\"true\"}],\"；否则返回 \",[\"$r\",\"code\",null,{\"children\":\"false\"}],\"。\"]}],\"\\n\",[\"$r\",\"h4\",null,{\"id\":\"caveats\",\"children\":\"注意事项 \"}],\"\\n\",[\"$r\",\"ul\",null,{\"children\":[\"\\n\",[\"$r\",\"li\",null,{\"children\":[[\"$r\",\"strong\",null,{\"children\":[\"只有通过 \",[\"$r\",\"a\",null,{\"href\":\"/reference/react/createElement\",\"children\":[\"$r\",\"code\",null,{\"children\":\"createElement\"}]}],\" 返回的 \",[\"$r\",\"a\",null,{\"href\":\"/learn/writing-markup-with-jsx\",\"children\":\"JSX 标签\"}],\" 和对象会被认为是 React 元素\"]}],\"。例如，即使像 \",[\"$r\",\"code\",null,{\"children\":\"42\"}],\" 这样的数字是一个有效的 React \",[\"$r\",\"strong\",null,{\"children\":\"节点\"}],\"（并且能从一个组件中返回），但它仍然不是有效的 React 元素。使用 \",[\"$r\",\"a\",null,{\"href\":\"/reference/react-dom/createPortal\",\"children\":[\"$r\",\"code\",null,{\"children\":\"createPortal\"}]}],\" 创建的数组和 portal 也 \",[\"$r\",\"strong\",null,{\"children\":\"不被\"}],\" 认为是 React 元素。\"]}],\"\\n\"]}],\"\\n\",[\"$r\",\"hr\",null,{}],\"\\n\",[\"$r\",\"h2\",null,{\"id\":\"usage\",\"children\":\"用法 \"}],\"\\n\",[\"$r\",\"h3\",null,{\"id\":\"checking-if-something-is-a-react-element\",\"children\":\"检测某些值是否是 React 元素 \"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"调用 \",[\"$r\",\"code\",null,{\"children\":\"isValidElement\"}],\" 来检测某个值是否是一个 \",[\"$r\",\"strong\",null,{\"children\":\"React 元素\"}],\"。\"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":\"React 元素指的是：\"}],\"\\n\",[\"$r\",\"ul\",null,{\"children\":[\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"通过 \",[\"$r\",\"a\",null,{\"href\":\"/learn/writing-markup-with-jsx\",\"children\":\"JSX 标签\"}],\" 产生的值\"]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"通过调用 \",[\"$r\",\"a\",null,{\"href\":\"/reference/react/createElement\",\"children\":[\"$r\",\"code\",null,{\"children\":\"createElement\"}]}],\" 产生的值\"]}],\"\\n\"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"对于 React 元素来说，\",[\"$r\",\"code\",null,{\"children\":\"isValidElement\"}],\" 返回 \",[\"$r\",\"code\",null,{\"children\":\"true\"}],\"：\"]}],\"\\n\",[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"import { isValidElement, createElement } from 'react';\\n\\n// ✅ JSX 标签是 React 元素\\nconsole.log(isValidElement(<p />)); // true\\nconsole.log(isValidElement(<MyComponent />)); // true\\n\\n// ✅ 通过 createElement 返回的值是 React 元素\\nconsole.log(isValidElement(createElement('p'))); // true\\nconsole.log(isValidElement(createElement(MyComponent))); // true\\n\"}]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":\"其他任意值，例如字符串，数字或者任意对象和数组等都不是 React 元素。\"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"对于他们来说，\",[\"$r\",\"code\",null,{\"children\":\"isValidElement\"}],\" 返回值为 \",[\"$r\",\"code\",null,{\"children\":\"false\"}],\"：\"]}],\"\\n\",[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"// ❌ 这些 **不是** React 元素\\nconsole.log(isValidElement(null)); // false\\nconsole.log(isValidElement(25)); // false\\nconsole.log(isValidElement('Hello')); // false\\nconsole.log(isValidElement({ age: 42 })); // false\\nconsole.log(isValidElement([<div />, <div />])); // false\\nconsole.log(isValidElement(MyComponent)); // false\\n\"}]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"需要用到 \",[\"$r\",\"code\",null,{\"children\":\"isValidElement\"}],\" 的场景并不常见。如果你调用另外一个 API，它 \",[\"$r\",\"strong\",null,{\"children\":\"只\"}],\" 接受元素（像 \",[\"$r\",\"a\",null,{\"href\":\"/reference/react/cloneElement\",\"children\":[\"$r\",\"code\",null,{\"children\":\"cloneElement\"}]}],\" 那样），并且你想在参数不是 React 元素时避免报错，则这个方法是最有用的。\"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"除非你有某些特定的原因需要添加 \",[\"$r\",\"code\",null,{\"children\":\"isValidElement\"}],\" 检测，否则不需要使用。\"]}],\"\\n\",[\"$r\",\"DeepDive\",null,{\"children\":[[\"$r\",\"h4\",null,{\"id\":\"react-elements-vs-react-nodes\",\"children\":\"React 元素 vs React 节点 \"}],[\"$r\",\"p\",null,{\"children\":[\"当你编写组件时，你可以从中返回任意类型的 \",[\"$r\",\"strong\",null,{\"children\":\"React 节点\"}],\"：\"]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"function MyComponent() {\\n  // ... 你可以返回任何 React 节点 ...\\n}\\n\"}]}],[\"$r\",\"p\",null,{\"children\":\"React 节点可能是：\"}],[\"$r\",\"ul\",null,{\"children\":[\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"像 \",[\"$r\",\"code\",null,{\"children\":\"<div />\"}],\" 或者 \",[\"$r\",\"code\",null,{\"children\":\"createElement('div')\"}],\" 这样被创建的 React 元素\"]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"使用 \",[\"$r\",\"a\",null,{\"href\":\"/reference/react-dom/createPortal\",\"children\":[\"$r\",\"code\",null,{\"children\":\"createPortal\"}]}],\" 创建的 portal\"]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":\"字符串\"}],\"\\n\",[\"$r\",\"li\",null,{\"children\":\"数字\"}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"true\"}],\"、\",[\"$r\",\"code\",null,{\"children\":\"false\"}],\"、\",[\"$r\",\"code\",null,{\"children\":\"null\"}],\" 或者 \",[\"$r\",\"code\",null,{\"children\":\"undefined\"}],\"（不会被展示出来）\"]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":\"其他 React 节点的数组\"}],\"\\n\"]}],[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"strong\",null,{\"children\":[\"注意 \",[\"$r\",\"code\",null,{\"children\":\"isValidElement\"}],\" 只能检测参数是否为 React 元素，而不能检测它是否是 React 节点\"]}],\"。例如 \",[\"$r\",\"code\",null,{\"children\":\"42\"}],\" 不是一个有效的 React 元素，但它是一个有效的 React 节点：\"]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"function MyComponent() {\\n  return 42; // 从组件返回一个数字是没问题的\\n}\\n\"}]}],[\"$r\",\"p\",null,{\"children\":[\"这就是为什么你不应该用 \",[\"$r\",\"code\",null,{\"children\":\"isValidElement\"}],\" 来检测某些东西是否可以被渲染。\"]}]]}]]}]]","meta":{"title":"isValidElement"}},"__N_SSG":true}