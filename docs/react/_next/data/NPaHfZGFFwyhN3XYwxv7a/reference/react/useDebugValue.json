{"pageProps":{"toc":"[{\"url\":\"#\",\"text\":\"概览\",\"depth\":2},{\"url\":\"#reference\",\"depth\":2,\"text\":\"参考 \"},{\"url\":\"#usedebugvalue\",\"depth\":3,\"text\":[[\"$r\",\"code\",null,{\"children\":\"useDebugValue(value, format?)\"}],\" \"]},{\"url\":\"#usage\",\"depth\":2,\"text\":\"用法 \"},{\"url\":\"#adding-a-label-to-a-custom-hook\",\"depth\":3,\"text\":\"为自定义 Hook 添加标签 \"},{\"url\":\"#deferring-formatting-of-a-debug-value\",\"depth\":3,\"text\":\"延迟格式化调试值 \"}]","content":"[[\"$r\",\"MaxWidth\",\"38\",{\"children\":[[\"$r\",\"Intro\",null,{\"children\":[[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"useDebugValue\"}],\" 是一个 React Hook，可以让你在 \",[\"$r\",\"a\",null,{\"href\":\"/learn/react-developer-tools\",\"children\":\"React 开发工具\"}],\" 中为自定义 Hook 添加标签。\"]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"useDebugValue(value, format?)\\n\"}]}]]}],\"\\n\",[\"$r\",\"InlineToc\",null,{}],\"\\n\",[\"$r\",\"hr\",null,{}],\"\\n\",[\"$r\",\"h2\",null,{\"id\":\"reference\",\"children\":\"参考 \"}],\"\\n\",[\"$r\",\"h3\",null,{\"id\":\"usedebugvalue\",\"children\":[[\"$r\",\"code\",null,{\"children\":\"useDebugValue(value, format?)\"}],\" \"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"在你的 \",[\"$r\",\"a\",null,{\"href\":\"/learn/reusing-logic-with-custom-hooks\",\"children\":\"自定义 Hook\"}],\" 的顶层调用 \",[\"$r\",\"code\",null,{\"children\":\"useDebugValue\"}],\"，以显示可读的调试值：\"]}],\"\\n\",[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"import { useDebugValue } from 'react';\\n\\nfunction useOnlineStatus() {\\n  // ...\\n  useDebugValue(isOnline ? 'Online' : 'Offline');\\n  // ...\\n}\\n\"}]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"a\",null,{\"href\":\"#usage\",\"children\":\"请看下方更多示例\"}],\"。\"]}],\"\\n\",[\"$r\",\"h4\",null,{\"id\":\"parameters\",\"children\":\"参数 \"}],\"\\n\",[\"$r\",\"ul\",null,{\"children\":[\"\\n\",[\"$r\",\"li\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"value\"}],\"：你想在 React 开发工具中显示的值。可以是任何类型。\"]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[[\"$r\",\"strong\",null,{\"children\":\"可选\"}],\" \",[\"$r\",\"code\",null,{\"children\":\"format\"}],\"：它接受一个格式化函数。当组件被检查时，React 开发工具将用 \",[\"$r\",\"code\",null,{\"children\":\"value\"}],\" 作为参数来调用格式化函数，然后显示返回的格式化值（可以是任何类型）。如果不指定格式化函数，则会显示 \",[\"$r\",\"code\",null,{\"children\":\"value\"}],\"。\"]}],\"\\n\"]}],\"\\n\",[\"$r\",\"h4\",null,{\"id\":\"returns\",\"children\":\"返回值 \"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"useDebugValue\"}],\" 没有返回值。\"]}],\"\\n\",[\"$r\",\"h2\",null,{\"id\":\"usage\",\"children\":\"用法 \"}],\"\\n\",[\"$r\",\"h3\",null,{\"id\":\"adding-a-label-to-a-custom-hook\",\"children\":\"为自定义 Hook 添加标签 \"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"在 \",[\"$r\",\"a\",null,{\"href\":\"/learn/reusing-logic-with-custom-hooks\",\"children\":\"自定义 Hook\"}],\" 中调用 \",[\"$r\",\"code\",null,{\"children\":\"useDebugValue\"}],\"，可以让 \",[\"$r\",\"a\",null,{\"href\":\"/learn/react-developer-tools\",\"children\":\"React 开发工具\"}],\" 显示可读的 \",[\"$r\",\"CodeStep\",null,{\"step\":1,\"children\":\"调试值\"}],\"。\"]}],\"\\n\",[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"meta\":\"[[1, 5, \\\"isOnline ? 'Online' : 'Offline'\\\"]]\",\"children\":\"import { useDebugValue } from 'react';\\n\\nfunction useOnlineStatus() {\\n  // ...\\n  useDebugValue(isOnline ? 'Online' : 'Offline');\\n  // ...\\n}\\n\"}]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"这样一来，当你检查调用 \",[\"$r\",\"code\",null,{\"children\":\"useOnlineStatus\"}],\" 的组件时，它们会显示一个标签，例如 \",[\"$r\",\"code\",null,{\"children\":\"OnlineStatus: \\\"Online\\\"\"}],\"。\"]}],\"\\n\",[\"$r\",\"img\",null,{\"src\":\"/images/docs/react-devtools-usedebugvalue.png\",\"alt\":\"在 React 开发工具中显示调试值的截图\"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"如果没有使用 \",[\"$r\",\"code\",null,{\"children\":\"useDebugValue\"}],\"，则只会显示底层数据（在此示例中为 \",[\"$r\",\"code\",null,{\"children\":\"true\"}],\"）。\"]}],\"\\n\"]}],[\"$r\",\"Sandpack\",null,{\"children\":[[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"import { useOnlineStatus } from './useOnlineStatus.js';\\n\\nfunction StatusBar() {\\n  const isOnline = useOnlineStatus();\\n  return <h1>{isOnline ? '✅ Online' : '❌ Disconnected'}</h1>;\\n}\\n\\nexport default function App() {\\n  return <StatusBar />;\\n}\\n\"}]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"meta\":\"src/useOnlineStatus.js active\",\"children\":\"import { useSyncExternalStore, useDebugValue } from 'react';\\n\\nexport function useOnlineStatus() {\\n  const isOnline = useSyncExternalStore(subscribe, () => navigator.onLine, () => true);\\n  useDebugValue(isOnline ? 'Online' : 'Offline');\\n  return isOnline;\\n}\\n\\nfunction subscribe(callback) {\\n  window.addEventListener('online', callback);\\n  window.addEventListener('offline', callback);\\n  return () => {\\n    window.removeEventListener('online', callback);\\n    window.removeEventListener('offline', callback);\\n  };\\n}\\n\"}]}]]}],[\"$r\",\"MaxWidth\",\"last\",{\"children\":[\"\\n\",[\"$r\",\"Note\",null,{\"children\":[\"$r\",\"p\",null,{\"children\":\"不必为每个自定义 Hook 添加调试值。这对于那些作为共享库一部分、具有复杂的内部数据结构并且难以检查的自定义 Hook 更有价值。\"}]}],\"\\n\",[\"$r\",\"hr\",null,{}],\"\\n\",[\"$r\",\"h3\",null,{\"id\":\"deferring-formatting-of-a-debug-value\",\"children\":\"延迟格式化调试值 \"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"你也可以将一个格式化函数作为 \",[\"$r\",\"code\",null,{\"children\":\"useDebugValue\"}],\" 的第二个参数传入：\"]}],\"\\n\",[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"meta\":\"[[1, 1, \\\"date\\\", 18], [2, 1, \\\"date.toDateString()\\\"]]\",\"children\":\"useDebugValue(date, date => date.toDateString());\\n\"}]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"格式化函数将接收 \",[\"$r\",\"CodeStep\",null,{\"step\":1,\"children\":\"调试值\"}],\" 作为参数，返回 \",[\"$r\",\"CodeStep\",null,{\"step\":2,\"children\":\"格式化后的显示值\"}],\"。当你的组件被检查时，React 开发工具将调用此函数并显示其返回值。\"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"使用格式化函数，可以避免在组件没有被检查时运行可能开销较大的格式化逻辑。例如，如果 \",[\"$r\",\"code\",null,{\"children\":\"date\"}],\" 是一个日期值，则可以避免在每次渲染时都调用 \",[\"$r\",\"code\",null,{\"children\":\"toDateString()\"}],\" 方法。\"]}]]}]]","meta":{"title":"useDebugValue"}},"__N_SSG":true}