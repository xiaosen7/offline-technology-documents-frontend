{"pageProps":{"toc":"[{\"url\":\"#\",\"text\":\"概览\",\"depth\":2},{\"url\":\"#reference\",\"depth\":2,\"text\":\"参考 \"},{\"url\":\"#createref\",\"depth\":3,\"text\":[[\"$r\",\"code\",null,{\"children\":\"createRef()\"}],\" \"]},{\"url\":\"#usage\",\"depth\":2,\"text\":\"用法 \"},{\"url\":\"#declaring-a-ref-in-a-class-component\",\"depth\":3,\"text\":\"在 class 组件中声明 ref \"},{\"url\":\"#alternatives\",\"depth\":2,\"text\":\"替代方案 \"},{\"url\":\"#migrating-from-a-class-with-createref-to-a-function-with-useref\",\"depth\":3,\"text\":[\"从使用 \",[\"$r\",\"code\",null,{\"children\":\"createRef\"}],\" 的 class 组件迁移到使用 \",[\"$r\",\"code\",null,{\"children\":\"useRef\"}],\" 的函数组件 \"]}]","content":"[[\"$r\",\"MaxWidth\",\"44\",{\"children\":[[\"$r\",\"Pitfall\",null,{\"children\":[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"createRef\"}],\" 主要用于 \",[\"$r\",\"a\",null,{\"href\":\"/reference/react/Component\",\"children\":\"class 组件\"}],\"。而函数组件通常使用 \",[\"$r\",\"a\",null,{\"href\":\"/reference/react/useRef\",\"children\":[\"$r\",\"code\",null,{\"children\":\"useRef\"}]}],\"。\"]}]}],\"\\n\",[\"$r\",\"Intro\",null,{\"children\":[[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"createRef\"}],\" 创建一个 \",[\"$r\",\"a\",null,{\"href\":\"/learn/referencing-values-with-refs\",\"children\":\"ref\"}],\" 对象，该对象可以包含任意值。\"]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"class MyInput extends Component {\\n  inputRef = createRef();\\n  // ...\\n}\\n\"}]}]]}],\"\\n\",[\"$r\",\"InlineToc\",null,{}],\"\\n\",[\"$r\",\"hr\",null,{}],\"\\n\",[\"$r\",\"h2\",null,{\"id\":\"reference\",\"children\":\"参考 \"}],\"\\n\",[\"$r\",\"h3\",null,{\"id\":\"createref\",\"children\":[[\"$r\",\"code\",null,{\"children\":\"createRef()\"}],\" \"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"在 \",[\"$r\",\"a\",null,{\"href\":\"/reference/react/Component\",\"children\":\"class 组件\"}],\" 中调用 \",[\"$r\",\"code\",null,{\"children\":\"createRef\"}],\" 来声明一个 \",[\"$r\",\"a\",null,{\"href\":\"/learn/referencing-values-with-refs\",\"children\":\"ref\"}],\"。\"]}],\"\\n\",[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"import { createRef, Component } from 'react';\\n\\nclass MyComponent extends Component {\\n  intervalRef = createRef();\\n  inputRef = createRef();\\n  // ...\\n\"}]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"a\",null,{\"href\":\"#usage\",\"children\":\"请看下方更多示例\"}],\"。\"]}],\"\\n\",[\"$r\",\"h4\",null,{\"id\":\"parameters\",\"children\":\"参数 \"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"createRef\"}],\" 不接受任何参数。\"]}],\"\\n\",[\"$r\",\"h4\",null,{\"id\":\"returns\",\"children\":\"返回值 \"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"createRef\"}],\" 返回一个对象，该对象只有一个属性：\"]}],\"\\n\",[\"$r\",\"ul\",null,{\"children\":[\"\\n\",[\"$r\",\"li\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"current\"}],\"：初始值为 \",[\"$r\",\"code\",null,{\"children\":\"null\"}],\"，你可以稍后设置为其他内容。如果你把 ref 对象作为 JSX 节点的 \",[\"$r\",\"code\",null,{\"children\":\"ref\"}],\" 属性传递给 React，React 将设置其 \",[\"$r\",\"code\",null,{\"children\":\"current\"}],\" 属性。\"]}],\"\\n\"]}],\"\\n\",[\"$r\",\"h4\",null,{\"id\":\"caveats\",\"children\":\"注意事项 \"}],\"\\n\",[\"$r\",\"ul\",null,{\"children\":[\"\\n\",[\"$r\",\"li\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"createRef\"}],\" 总是返回一个 \",[\"$r\",\"strong\",null,{\"children\":\"不同的\"}],\" 对象。这相当于你自己编写了 \",[\"$r\",\"code\",null,{\"children\":\"{ current: null }\"}],\"。\"]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"在函数组件中，你可能想要使用 \",[\"$r\",\"a\",null,{\"href\":\"/reference/react/useRef\",\"children\":[\"$r\",\"code\",null,{\"children\":\"useRef\"}]}],\"，因为它始终返回相同的对象。\"]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"const ref = useRef()\"}],\" 等同于 \",[\"$r\",\"code\",null,{\"children\":\"const [ref, _] = useState(() => createRef(null))\"}],\"。\"]}],\"\\n\"]}],\"\\n\",[\"$r\",\"hr\",null,{}],\"\\n\",[\"$r\",\"h2\",null,{\"id\":\"usage\",\"children\":\"用法 \"}],\"\\n\",[\"$r\",\"h3\",null,{\"id\":\"declaring-a-ref-in-a-class-component\",\"children\":\"在 class 组件中声明 ref \"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"要在 \",[\"$r\",\"a\",null,{\"href\":\"/reference/react/Component\",\"children\":\"class 组件\"}],\" 中声明一个 ref，请调用 \",[\"$r\",\"code\",null,{\"children\":\"createRef\"}],\" 并将其结果分配给 class 字段：\"]}],\"\\n\",[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"meta\":\"{4}\",\"children\":\"import { Component, createRef } from 'react';\\n\\nclass Form extends Component {\\n  inputRef = createRef();\\n\\n  // ...\\n}\\n\"}]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"如果你现在将 \",[\"$r\",\"code\",null,{\"children\":\"ref={this.inputRef}\"}],\" 传递给 JSX 中的 \",[\"$r\",\"code\",null,{\"children\":\"<input>\"}],\"，React 将把 input 的 DOM 节点赋值给 \",[\"$r\",\"code\",null,{\"children\":\"this.inputRef.current\"}],\"。例如，下面这段代码演示了如何创建一个按钮，点击该按钮会将焦点聚焦在输入框上：\"]}],\"\\n\"]}],[\"$r\",\"Sandpack\",null,{\"children\":[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"import { Component, createRef } from 'react';\\n\\nexport default class Form extends Component {\\n  inputRef = createRef();\\n\\n  handleClick = () => {\\n    this.inputRef.current.focus();\\n  }\\n\\n  render() {\\n    return (\\n      <>\\n        <input ref={this.inputRef} />\\n        <button onClick={this.handleClick}>\\n          聚焦这个输入框\\n        </button>\\n      </>\\n    );\\n  }\\n}\\n\"}]}]}],[\"$r\",\"MaxWidth\",\"56\",{\"children\":[\"\\n\",[\"$r\",\"Pitfall\",null,{\"children\":[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"createRef\"}],\" 主要用于 \",[\"$r\",\"a\",null,{\"href\":\"/reference/react/Component\",\"children\":\"class 组件\"}],\"。而函数组件通常使用 \",[\"$r\",\"a\",null,{\"href\":\"/reference/react/useRef\",\"children\":[\"$r\",\"code\",null,{\"children\":\"useRef\"}]}],\"。\"]}]}],\"\\n\",[\"$r\",\"hr\",null,{}],\"\\n\",[\"$r\",\"h2\",null,{\"id\":\"alternatives\",\"children\":\"替代方案 \"}],\"\\n\",[\"$r\",\"h3\",null,{\"id\":\"migrating-from-a-class-with-createref-to-a-function-with-useref\",\"children\":[\"从使用 \",[\"$r\",\"code\",null,{\"children\":\"createRef\"}],\" 的 class 组件迁移到使用 \",[\"$r\",\"code\",null,{\"children\":\"useRef\"}],\" 的函数组件 \"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"我们建议在新代码中使用函数组件而不是 \",[\"$r\",\"a\",null,{\"href\":\"/reference/react/Component\",\"children\":\"class 组件\"}],\"。如果你有一些使用了 \",[\"$r\",\"code\",null,{\"children\":\"createRef\"}],\" 的 class 组件，以下是如何将它们转换为函数组件。这是原始代码：\"]}],\"\\n\"]}],[\"$r\",\"Sandpack\",null,{\"children\":[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"import { Component, createRef } from 'react';\\n\\nexport default class Form extends Component {\\n  inputRef = createRef();\\n\\n  handleClick = () => {\\n    this.inputRef.current.focus();\\n  }\\n\\n  render() {\\n    return (\\n      <>\\n        <input ref={this.inputRef} />\\n        <button onClick={this.handleClick}>\\n          聚焦这个输入框\\n        </button>\\n      </>\\n    );\\n  }\\n}\\n\"}]}]}],[\"$r\",\"MaxWidth\",\"60\",{\"children\":[\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"当你 \",[\"$r\",\"a\",null,{\"href\":\"/reference/react/Component#alternatives\",\"children\":\"将此组件从 class 组件转化为函数组件\"}],\" 时，用 \",[\"$r\",\"a\",null,{\"href\":\"/reference/react/useRef\",\"children\":[\"$r\",\"code\",null,{\"children\":\"useRef\"}]}],\" 替换 \",[\"$r\",\"code\",null,{\"children\":\"createRef\"}],\" 的调用：\"]}],\"\\n\"]}],[\"$r\",\"Sandpack\",null,{\"children\":[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"import { useRef } from 'react';\\n\\nexport default function Form() {\\n  const inputRef = useRef(null);\\n\\n  function handleClick() {\\n    inputRef.current.focus();\\n  }\\n\\n  return (\\n    <>\\n      <input ref={inputRef} />\\n      <button onClick={handleClick}>\\n        聚焦这个输入框\\n      </button>\\n    </>\\n  );\\n}\\n\"}]}]}]]","meta":{"title":"createRef"}},"__N_SSG":true}