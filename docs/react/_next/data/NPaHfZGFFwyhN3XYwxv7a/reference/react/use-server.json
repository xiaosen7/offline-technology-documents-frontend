{"pageProps":{"toc":"[{\"url\":\"#\",\"text\":\"概览\",\"depth\":2},{\"url\":\"#reference\",\"depth\":2,\"text\":\"参考 \"},{\"url\":\"#use-server\",\"depth\":3,\"text\":[[\"$r\",\"code\",null,{\"children\":\"'use server'\"}],\" \"]},{\"url\":\"#security\",\"depth\":3,\"text\":\"安全考虑 \"},{\"url\":\"#serializable-parameters-and-return-values\",\"depth\":3,\"text\":\"可序列化参数和返回值 \"},{\"url\":\"#usage\",\"depth\":2,\"text\":\"用法 \"},{\"url\":\"#server-actions-in-forms\",\"depth\":3,\"text\":\"表格中的 Server Action \"},{\"url\":\"#calling-a-server-action-outside-of-form\",\"depth\":3,\"text\":[\"在 \",[\"$r\",\"code\",null,{\"children\":\"<form>\"}],\" 之外调用 Server Action \"]}]","content":"[[\"$r\",\"MaxWidth\",\"last\",{\"children\":[[\"$r\",\"Canary\",null,{\"children\":[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"'use server'\"}],\" 仅在 \",[\"$r\",\"a\",null,{\"href\":\"/learn/start-a-new-react-project#bleeding-edge-react-frameworks\",\"children\":\"使用 React 服务器组件\"}],\" 或构建可适配库时需要。\"]}]}],\"\\n\",[\"$r\",\"Intro\",null,{\"children\":[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"'use server'\"}],\" 标记可以从客户端代码调用的服务器函数。\"]}]}],\"\\n\",[\"$r\",\"InlineToc\",null,{}],\"\\n\",[\"$r\",\"hr\",null,{}],\"\\n\",[\"$r\",\"h2\",null,{\"id\":\"reference\",\"children\":\"参考 \"}],\"\\n\",[\"$r\",\"h3\",null,{\"id\":\"use-server\",\"children\":[[\"$r\",\"code\",null,{\"children\":\"'use server'\"}],\" \"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"在异步函数顶部添加 \",[\"$r\",\"code\",null,{\"children\":\"'use server'\"}],\" 以将该函数标记为可由客户端调用。我们将这些函数称为  \",[\"$r\",\"strong\",null,{\"children\":\"Server Action\"}],\"。\"]}],\"\\n\",[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"meta\":\"{2}\",\"children\":\"async function addToCart(data) {\\n  'use server';\\n  // ...\\n}\\n\"}]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":\"在客户端调用 Server Action 时，它将向服务器发出网络请求，其中包含传递的任何参数的序列化副本。如果 Server Action 返回一个值，该值将被序列化并返回给客户端。\"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"可以将 \",[\"$r\",\"code\",null,{\"children\":\"'use server'\"}],\" 指示符添加到文件顶部来代替逐个在函数中添加它。位于文件顶部的指示符会将所有导出都标记为可在任何地方使用的 Server Action，包括在客户端代码中导入。\"]}],\"\\n\",[\"$r\",\"h4\",null,{\"id\":\"caveats\",\"children\":\"注意 \"}],\"\\n\",[\"$r\",\"ul\",null,{\"children\":[\"\\n\",[\"$r\",\"li\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"'use server'\"}],\" 必须位于函数或模块的顶部，在任何导入或其他代码之前（可以位于代码顶部的注释之后）。它们必须用单引号或双引号编写，但不能用反引号。\"]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"'use server'\"}],\" 只能在服务器端文件中使用。生成的 Server Action 可以通过 props 传递给客户端组件。请参阅支持的 \",[\"$r\",\"a\",null,{\"href\":\"#serializable-parameters-and-return-values\",\"children\":\"序列化参数和返回值类型\"}],\"。\"]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"要从 \",[\"$r\",\"a\",null,{\"href\":\"/reference/react/use-client\",\"children\":\"客户端代码\"}],\" 导入 Server Action，必须在模块级别使用该指示符。\"]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"由于底层网络调用始终是异步的，\",[\"$r\",\"code\",null,{\"children\":\"'use server'\"}],\" 只能用于异步函数。\"]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"始终将 Server Action 的参数视为不受信任的输入，并授权任何变更。请参阅 \",[\"$r\",\"a\",null,{\"href\":\"#security\",\"children\":\"安全考虑\"}],\"。\"]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"应在 \",[\"$r\",\"a\",null,{\"href\":\"/reference/react/useTransition\",\"children\":\"transition\"}],\" 中调用 Server Action。传递给 \",[\"$r\",\"a\",null,{\"href\":\"/reference/react-dom/components/form#props\",\"children\":[\"$r\",\"code\",null,{\"children\":\"<form action>\"}]}],\" 或 \",[\"$r\",\"a\",null,{\"href\":\"/reference/react-dom/components/input#props\",\"children\":[\"$r\",\"code\",null,{\"children\":\"formAction\"}]}],\" 的 Server Action 将自动在 transition 中被调用。\"]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":\"Server Action 专为更新服务器端状态的变更而设计，不建议用于数据获取。因此，实现 Server Action 的框架通常一次只处理一个 Action，没有缓存返回值的方式。\"}],\"\\n\"]}],\"\\n\",[\"$r\",\"h3\",null,{\"id\":\"security\",\"children\":\"安全考虑 \"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":\"Server Action 的参数完全由客户端控制。出于安全考虑，始终将它们视为不受信任的输入，并确保根据需要验证和转义参数。\"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":\"在任何 Server Action 中，请确保验证已登录的用户是否被允许执行该操作。\"}],\"\\n\",[\"$r\",\"Wip\",null,{\"children\":[[\"$r\",\"p\",null,{\"children\":\"为防止从 Server Action 中发送敏感数据，提供了实验性的污染 API 用于阻止唯一值和对象传递到客户端代码。\"}],[\"$r\",\"p\",null,{\"children\":[\"请参阅 \",[\"$r\",\"a\",null,{\"href\":\"/reference/react/experimental_taintUniqueValue\",\"children\":\"experimental_taintUniqueValue\"}],\" 与 \",[\"$r\",\"a\",null,{\"href\":\"/reference/react/experimental_taintObjectReference\",\"children\":\"experimental_taintObjectReference\"}],\" 以了解更多。\"]}]]}],\"\\n\",[\"$r\",\"h3\",null,{\"id\":\"serializable-parameters-and-return-values\",\"children\":\"可序列化参数和返回值 \"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":\"当客户端代码通过网络调用 Server Action 时，传递的任何参数都必须是可序列化的。\"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":\"以下是 Server Action 参数支持的类型：\"}],\"\\n\",[\"$r\",\"ul\",null,{\"children\":[\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"原始类型\",\"\\n\",[\"$r\",\"ul\",null,{\"children\":[\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"$r\",\"a\",null,{\"href\":\"https://developer.mozilla.org/zh-CN/docs/Glossary/String\",\"target\":\"_blank\",\"rel\":\"nofollow noopener noreferrer\",\"children\":\"string\"}]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"$r\",\"a\",null,{\"href\":\"https://developer.mozilla.org/zh-CN/docs/Glossary/Number\",\"target\":\"_blank\",\"rel\":\"nofollow noopener noreferrer\",\"children\":\"number\"}]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"$r\",\"a\",null,{\"href\":\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/BigInt\",\"target\":\"_blank\",\"rel\":\"nofollow noopener noreferrer\",\"children\":\"bigint\"}]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"$r\",\"a\",null,{\"href\":\"https://developer.mozilla.org/zh-CN/docs/Glossary/Boolean\",\"target\":\"_blank\",\"rel\":\"nofollow noopener noreferrer\",\"children\":\"boolean\"}]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"$r\",\"a\",null,{\"href\":\"https://developer.mozilla.org/zh-CN/docs/Glossary/Undefined\",\"target\":\"_blank\",\"rel\":\"nofollow noopener noreferrer\",\"children\":\"undefined\"}]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"$r\",\"a\",null,{\"href\":\"https://developer.mozilla.org/zh-CN/docs/Glossary/Null\",\"target\":\"_blank\",\"rel\":\"nofollow noopener noreferrer\",\"children\":\"null\"}]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[[\"$r\",\"a\",null,{\"href\":\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol\",\"target\":\"_blank\",\"rel\":\"nofollow noopener noreferrer\",\"children\":\"symbol\"}],\"，仅包含在全局符号注册表中使用 \",[\"$r\",\"a\",null,{\"href\":\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol/for\",\"target\":\"_blank\",\"rel\":\"nofollow noopener noreferrer\",\"children\":[\"$r\",\"code\",null,{\"children\":\"Symbol.for\"}]}],\" 注册的符号。\"]}],\"\\n\"]}],\"\\n\"]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"包含可序列化值的迭代类型\",\"\\n\",[\"$r\",\"ul\",null,{\"children\":[\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"$r\",\"a\",null,{\"href\":\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String\",\"target\":\"_blank\",\"rel\":\"nofollow noopener noreferrer\",\"children\":\"String\"}]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"$r\",\"a\",null,{\"href\":\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array\",\"target\":\"_blank\",\"rel\":\"nofollow noopener noreferrer\",\"children\":\"Array\"}]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"$r\",\"a\",null,{\"href\":\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Map\",\"target\":\"_blank\",\"rel\":\"nofollow noopener noreferrer\",\"children\":\"Map\"}]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"$r\",\"a\",null,{\"href\":\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Set\",\"target\":\"_blank\",\"rel\":\"nofollow noopener noreferrer\",\"children\":\"Set\"}]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[[\"$r\",\"a\",null,{\"href\":\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/TypedArray\",\"target\":\"_blank\",\"rel\":\"nofollow noopener noreferrer\",\"children\":\"TypedArray\"}],\" 与 \",[\"$r\",\"a\",null,{\"href\":\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\",\"target\":\"_blank\",\"rel\":\"nofollow noopener noreferrer\",\"children\":\"ArrayBuffer\"}]]}],\"\\n\"]}],\"\\n\"]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"$r\",\"a\",null,{\"href\":\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date\",\"target\":\"_blank\",\"rel\":\"nofollow noopener noreferrer\",\"children\":\"Date\"}]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[[\"$r\",\"a\",null,{\"href\":\"https://developer.mozilla.org/zh-CN/docs/Web/API/FormData\",\"target\":\"_blank\",\"rel\":\"nofollow noopener noreferrer\",\"children\":\"FormData\"}],\" 实例\"]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"普通 \",[\"$r\",\"a\",null,{\"href\":\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object\",\"target\":\"_blank\",\"rel\":\"nofollow noopener noreferrer\",\"children\":\"对象\"}],\"：使用 \",[\"$r\",\"a\",null,{\"href\":\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Object_initializer\",\"target\":\"_blank\",\"rel\":\"nofollow noopener noreferrer\",\"children\":\"对象初始化器\"}],\" 创建的、具有可序列化属性\"]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":\"充当 Server Action 的函数\"}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"$r\",\"a\",null,{\"href\":\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise\",\"target\":\"_blank\",\"rel\":\"nofollow noopener noreferrer\",\"children\":\"Promise\"}]}],\"\\n\"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":\"值得注意的是，以下内容不受支持：\"}],\"\\n\",[\"$r\",\"ul\",null,{\"children\":[\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"React 元素或 \",[\"$r\",\"a\",null,{\"href\":\"/learn/writing-markup-with-jsx\",\"children\":\"JSX\"}]]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":\"函数，包括组件函数和其他并非 Server Action 的函数\"}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"$r\",\"a\",null,{\"href\":\"https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/Objects/Classes_in_JavaScript\",\"target\":\"_blank\",\"rel\":\"nofollow noopener noreferrer\",\"children\":\"类\"}]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"任何类的实例对象（除了提到的内置类）或 \",[\"$r\",\"a\",null,{\"href\":\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object#null-prototype_objects\",\"target\":\"_blank\",\"rel\":\"nofollow noopener noreferrer\",\"children\":\"使用 null 作为原型\"}],\" 的对象\"]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"未全局注册的符号，例如 \",[\"$r\",\"code\",null,{\"children\":\"Symbol('my new symbol')\"}]]}],\"\\n\"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"支持的可序列化返回值与边界客户端组件的 \",[\"$r\",\"a\",null,{\"href\":\"/reference/react/use-client#passing-props-from-server-to-client-components\",\"children\":\"可序列化 props\"}],\" 相同。\"]}],\"\\n\",[\"$r\",\"h2\",null,{\"id\":\"usage\",\"children\":\"用法 \"}],\"\\n\",[\"$r\",\"h3\",null,{\"id\":\"server-actions-in-forms\",\"children\":\"表格中的 Server Action \"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"Server Action 的最常见用法将是调用会更改数据的服务器函数。在浏览器中，\",[\"$r\",\"a\",null,{\"href\":\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form\",\"target\":\"_blank\",\"rel\":\"nofollow noopener noreferrer\",\"children\":\"HTML form 元素\"}],\" 是用户提交变更的传统方法。通过 React 服务器组件，React 在 \",[\"$r\",\"a\",null,{\"href\":\"/reference/react-dom/components/form\",\"children\":\"表单\"}],\" 中首次引入了对 Server Action 的一流支持。\"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":\"以下是一个允许用户请求用户名的表单。\"}],\"\\n\",[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"meta\":\"[[1, 3, \\\"formData\\\"]]\",\"children\":\"// App.js\\n\\nasync function requestUsername(formData) {\\n  'use server';\\n  const username = formData.get('username');\\n  // ...\\n}\\n\\nexport default function App() {\\n  return (\\n    <form action={requestUsername}>\\n      <input type=\\\"text\\\" name=\\\"username\\\" />\\n      <button type=\\\"submit\\\">Request</button>\\n    </form>\\n  );\\n}\\n\"}]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"在这个示例中，\",[\"$r\",\"code\",null,{\"children\":\"requestUsername\"}],\" 是一个传递给 \",[\"$r\",\"code\",null,{\"children\":\"<form>\"}],\" 的 Server Action。当用户提交此表单时，会发起一个网络请求到服务器函数 \",[\"$r\",\"code\",null,{\"children\":\"requestUsername\"}],\"。在调用表单中的 Server Action 时，React 将 \",[\"$r\",\"code\",null,{\"children\":\"FormData\"}],\" 作为第一个参数提供给 Server Action。\"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"通过将 Server Action 传递给表单的 \",[\"$r\",\"code\",null,{\"children\":\"action\"}],\"，React 可以 \",[\"$r\",\"a\",null,{\"href\":\"https://developer.mozilla.org/en-US/docs/Glossary/Progressive_Enhancement\",\"target\":\"_blank\",\"rel\":\"nofollow noopener noreferrer\",\"children\":\"逐步增强\"}],\" 表单。这意味着表单可以在 JavaScript 捆绑加载之前提交。\"]}],\"\\n\",[\"$r\",\"h4\",null,{\"id\":\"handling-return-values\",\"children\":\"处理表单中的返回值 \"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"在用户名请求表单中，可能存在用户名不可用的情况。\",[\"$r\",\"code\",null,{\"children\":\"requestUsername\"}],\" 应该告诉我们它是否失败。\"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"请使用 \",[\"$r\",\"a\",null,{\"href\":\"/reference/react-dom/hooks/useFormState\",\"children\":[\"$r\",\"code\",null,{\"children\":\"useFormState\"}]}],\" 以根据 Server Action 的结果更新 UI 并支持逐步增强。\"]}],\"\\n\",[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"// requestUsername.js\\n'use server';\\n\\nexport default async function requestUsername(formData) {\\n  const username = formData.get('username');\\n  if (canRequest(username)) {\\n    // ...\\n    return 'successful';\\n  }\\n  return 'failed';\\n}\\n\"}]}],\"\\n\",[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"meta\":\"{4,8}, [[2, 2, \\\"'use client'\\\"]]\",\"children\":\"// UsernameForm.js\\n'use client';\\n\\nimport { useFormState } from 'react-dom';\\nimport requestUsername from './requestUsername';\\n\\nfunction UsernameForm() {\\n  const [returnValue, action] = useFormState(requestUsername, 'n/a');\\n\\n  return (\\n    <>\\n      <form action={action}>\\n        <input type=\\\"text\\\" name=\\\"username\\\" />\\n        <button type=\\\"submit\\\">请求</button>\\n      </form>\\n      <p>最后一次提交的请求的返回值： {returnValue}</p>\\n    </>\\n  );\\n}\\n\"}]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"请注意，与大多数 Hook 一样，\",[\"$r\",\"code\",null,{\"children\":\"useFormState\"}],\" 只能在 \",[\"$r\",\"CodeStep\",null,{\"step\":1,\"children\":[\"$r\",\"a\",null,{\"href\":\"/reference/react/use-client\",\"children\":\"客户端代码\"}]}],\" 中调用。\"]}],\"\\n\",[\"$r\",\"h3\",null,{\"id\":\"calling-a-server-action-outside-of-form\",\"children\":[\"在 \",[\"$r\",\"code\",null,{\"children\":\"<form>\"}],\" 之外调用 Server Action \"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":\"Server Action 是暴露的服务器端点，可以在客户端代码的任何位置调用。\"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"在 \",[\"$r\",\"code\",null,{\"children\":\"<form>\"}],\" 之外使用 Server Action 时，调用 Server Action 时请使用 \",[\"$r\",\"a\",null,{\"href\":\"/reference/react/useTransition\",\"children\":\"transition\"}],\"，这允许显示加载指示器、显示 \",[\"$r\",\"a\",null,{\"href\":\"/reference/react/useOptimistic\",\"children\":\"乐观状态更新\"}],\" 和处理意外错误。表单会自动在 transition 中包装 Server Action。\"]}],\"\\n\",[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"meta\":\"{9-12}\",\"children\":\"import incrementLike from './actions';\\nimport { useState, useTransition } from 'react';\\n\\nfunction LikeButton() {\\n  const [isPending, startTransition] = useTransition();\\n  const [likeCount, setLikeCount] = useState(0);\\n\\n  const onClick = () => {\\n    startTransition(async () => {\\n      const currentCount = await incrementLike();\\n      setLikeCount(currentCount);\\n    });\\n  };\\n\\n  return (\\n    <>\\n      <p>点赞数量： {likeCount}</p>\\n      <button onClick={onClick} disabled={isPending}>点赞</button>;\\n    </>\\n  );\\n}\\n\"}]}],\"\\n\",[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"// actions.js\\n'use server';\\n\\nlet likeCount = 0;\\nexport default async function incrementLike() {\\n  likeCount++;\\n  return likeCount;\\n}\\n\"}]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"可以使用 \",[\"$r\",\"code\",null,{\"children\":\"await\"}],\" 获取 Promise 的返回值以读取 Server Action 的返回值。\"]}]]}]]","meta":{"title":"'use server'","titleForTitleTag":"'use server' 指示符","canary":true}},"__N_SSG":true}