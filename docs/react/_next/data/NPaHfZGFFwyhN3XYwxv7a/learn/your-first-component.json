{"pageProps":{"toc":"[{\"url\":\"#\",\"text\":\"概览\",\"depth\":2},{\"url\":\"#components-ui-building-blocks\",\"depth\":2,\"text\":\"组件：UI 构成要素 \"},{\"url\":\"#defining-a-component\",\"depth\":2,\"text\":\"定义组件 \"},{\"url\":\"#step-1-export-the-component\",\"depth\":3,\"text\":\"第一步：导出组件 \"},{\"url\":\"#step-2-define-the-function\",\"depth\":3,\"text\":\"第二步：定义函数 \"},{\"url\":\"#step-3-add-markup\",\"depth\":3,\"text\":\"第三步：添加标签 \"},{\"url\":\"#using-a-component\",\"depth\":2,\"text\":\"使用组件 \"},{\"url\":\"#what-the-browser-sees\",\"depth\":3,\"text\":\"浏览器所看到的 \"},{\"url\":\"#nesting-and-organizing-components\",\"depth\":3,\"text\":\"嵌套和组织组件 \"},{\"url\":\"#recap\",\"depth\":2,\"text\":\"Recap\"},{\"url\":\"#challenges\",\"depth\":2,\"text\":\"Challenges\"}]","content":"[[\"$r\",\"MaxWidth\",\"24\",{\"children\":[[\"$r\",\"Intro\",null,{\"children\":[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"strong\",null,{\"children\":\"组件\"}],\" 是 React 的核心概念之一。它们是构建用户界面（UI）的基础，是你开始 React 之旅的最佳起点！\"]}]}],\"\\n\",[\"$r\",\"YouWillLearn\",null,{\"children\":[\"$r\",\"ul\",null,{\"children\":[\"\\n\",[\"$r\",\"li\",null,{\"children\":\"什么是组件\"}],\"\\n\",[\"$r\",\"li\",null,{\"children\":\"组件在 React 应用中扮演的角色\"}],\"\\n\",[\"$r\",\"li\",null,{\"children\":\"如何编写你的第一个 React 组件\"}],\"\\n\"]}]}],\"\\n\",[\"$r\",\"h2\",null,{\"id\":\"components-ui-building-blocks\",\"children\":\"组件：UI 构成要素 \"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"在 Web 当中，HTML 允许我们使用其内置的标签集（如 \",[\"$r\",\"code\",null,{\"children\":\"<h1>\"}],\" 和 \",[\"$r\",\"code\",null,{\"children\":\"<li>\"}],\"）创建丰富的结构化文档：\"]}],\"\\n\",[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-html\",\"children\":\"<article>\\n  <h1>我的第一个组件</h1>\\n  <ol>\\n    <li>组件：UI 构成要素</li>\\n    <li>定义组件</li>\\n    <li>使用组件</li>\\n  </ol>\\n</article>\\n\"}]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"<article>\"}],\" 表示这篇文章，\",[\"$r\",\"code\",null,{\"children\":\"<h1>\"}],\" 表示文章的标题，\",[\"$r\",\"code\",null,{\"children\":\"<ol>\"}],\" 以有序列表的形式表示文章的（缩写的）目录。每一个侧边栏、头像、模态框、下拉框的背后是都是像这样的（结合了用于样式的 CSS 和用于交互的 JavaScript 的）标签——你在 Web 上看到的每一个 UI 模块。\"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"React 允许你将标签、CSS 和 JavaScript 组合成自定义“组件”，即 \",[\"$r\",\"strong\",null,{\"children\":\"应用程序中可复用的 UI 元素\"}],\"。上文中表示目录的代码可以改写成一个能够在每个页面中渲染的 \",[\"$r\",\"code\",null,{\"children\":\"<TableOfContents />\"}],\" 组件。实际上，使用的依然是 \",[\"$r\",\"code\",null,{\"children\":\"<article>\"}],\"、\",[\"$r\",\"code\",null,{\"children\":\"<h1>\"}],\" 等相同的 HTML 标签。\"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":\"就像使用 HTML 标签一样，你可以组合、排序和嵌套组件来绘制整个页面。例如，你正在阅读的文档页面就是由 React 组件构成的：\"}],\"\\n\",[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"<PageLayout>\\n  <NavigationHeader>\\n    <SearchBar />\\n    <Link to=\\\"/docs\\\">文档</Link>\\n  </NavigationHeader>\\n  <Sidebar />\\n  <PageContent>\\n    <TableOfContents />\\n    <DocumentationText />\\n  </PageContent>\\n</PageLayout>\\n\"}]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"随着项目的发展，你会发现很多布局可以通过复用已经完成的组件来实现，从而加快开发进程。上文中提到的目录可以通过 \",[\"$r\",\"code\",null,{\"children\":\"<TableOfContents />\"}],\" 组件添加到任意的画面中！你也可以使用 React 开源社区分享的大量组件（例如 \",[\"$r\",\"a\",null,{\"href\":\"https://chakra-ui.com/\",\"target\":\"_blank\",\"rel\":\"nofollow noopener noreferrer\",\"children\":\"Chakra UI\"}],\" 和 \",[\"$r\",\"a\",null,{\"href\":\"https://material-ui.com/\",\"target\":\"_blank\",\"rel\":\"nofollow noopener noreferrer\",\"children\":\"Material UI\"}],\"）来快速启动项目。\"]}],\"\\n\",[\"$r\",\"h2\",null,{\"id\":\"defining-a-component\",\"children\":\"定义组件 \"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"一直以来，创建网页时，Web 开发人员会用标签描述内容，然后通过 JavaScript 来增加交互。这种在 Web 上添加交互的方式能产生出色的效果。现在许多网站和全部应用都需要交互。React 最为重视交互性且使用了相同的处理方式：\",[\"$r\",\"strong\",null,{\"children\":\"React 组件是一段可以 使用标签进行扩展 的 JavaScript 函数\"}],\"。如下所示（你可以编辑下面的示例）：\"]}],\"\\n\"]}],[\"$r\",\"Sandpack\",null,{\"children\":[[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"export default function Profile() {\\n  return (\\n    <img\\n      src=\\\"https://i.imgur.com/MK3eW3Am.jpg\\\"\\n      alt=\\\"Katherine Johnson\\\"\\n    />\\n  )\\n}\\n\"}]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-css\",\"children\":\"img { height: 200px; }\\n\"}]}]]}],[\"$r\",\"MaxWidth\",\"56\",{\"children\":[\"\\n\",[\"$r\",\"p\",null,{\"children\":\"以下是构建组件的方法：\"}],\"\\n\",[\"$r\",\"h3\",null,{\"id\":\"step-1-export-the-component\",\"children\":\"第一步：导出组件 \"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"export default\"}],\" 前缀是一种 \",[\"$r\",\"a\",null,{\"href\":\"https://developer.mozilla.org/docs/web/javascript/reference/statements/export\",\"target\":\"_blank\",\"rel\":\"nofollow noopener noreferrer\",\"children\":\"JavaScript 标准语法\"}],\"（非 React 的特性）。它允许你导出一个文件中的主要函数以便你以后可以从其他文件引入它。欲了解更多关于导入的内容，请参阅 \",[\"$r\",\"a\",null,{\"href\":\"/learn/importing-and-exporting-components\",\"children\":\"组件的导入与导出\"}],\" 章节！\"]}],\"\\n\",[\"$r\",\"h3\",null,{\"id\":\"step-2-define-the-function\",\"children\":\"第二步：定义函数 \"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"使用 \",[\"$r\",\"code\",null,{\"children\":\"function Profile() { }\"}],\" 定义名为 \",[\"$r\",\"code\",null,{\"children\":\"Profile\"}],\" 的 JavaScript 函数。\"]}],\"\\n\",[\"$r\",\"Pitfall\",null,{\"children\":[\"$r\",\"p\",null,{\"children\":[\"React 组件是常规的 JavaScript 函数，但 \",[\"$r\",\"strong\",null,{\"children\":\"组件的名称必须以大写字母开头\"}],\"，否则它们将无法运行！\"]}]}],\"\\n\",[\"$r\",\"h3\",null,{\"id\":\"step-3-add-markup\",\"children\":\"第三步：添加标签 \"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"这个组件返回一个带有 \",[\"$r\",\"code\",null,{\"children\":\"src\"}],\" 和 \",[\"$r\",\"code\",null,{\"children\":\"alt\"}],\" 属性的 \",[\"$r\",\"code\",null,{\"children\":\"<img />\"}],\" 标签。\",[\"$r\",\"code\",null,{\"children\":\"<img />\"}],\" 写得像 HTML，但实际上是 JavaScript！这种语法被称为 \",[\"$r\",\"a\",null,{\"href\":\"/learn/writing-markup-with-jsx\",\"children\":\"JSX\"}],\"，它允许你在 JavaScript 中嵌入标签。\"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":\"返回语句可以全写在一行上，如下面组件中所示：\"}],\"\\n\",[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"return <img src=\\\"https://i.imgur.com/MK3eW3As.jpg\\\" alt=\\\"Katherine Johnson\\\" />;\\n\"}]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"但是，如果你的标签和 \",[\"$r\",\"code\",null,{\"children\":\"return\"}],\" 关键字不在同一行，则必须把它包裹在一对括号中，如下所示：\"]}],\"\\n\",[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"return (\\n  <div>\\n    <img src=\\\"https://i.imgur.com/MK3eW3As.jpg\\\" alt=\\\"Katherine Johnson\\\" />\\n  </div>\\n);\\n\"}]}],\"\\n\",[\"$r\",\"Pitfall\",null,{\"children\":[\"$r\",\"p\",null,{\"children\":[\"没有括号包裹的话，任何在 \",[\"$r\",\"code\",null,{\"children\":\"return\"}],\" 下一行的代码都 \",[\"$r\",\"a\",null,{\"href\":\"https://stackoverflow.com/questions/2846283/what-are-the-rules-for-javascripts-automatic-semicolon-insertion-asi\",\"target\":\"_blank\",\"rel\":\"nofollow noopener noreferrer\",\"children\":\"将被忽略\"}],\"！\"]}]}],\"\\n\",[\"$r\",\"h2\",null,{\"id\":\"using-a-component\",\"children\":\"使用组件 \"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"现在你已经定义了 \",[\"$r\",\"code\",null,{\"children\":\"Profile\"}],\" 组件，你可以在其他组件中使用它。例如，你可以导出一个内部使用了多个 \",[\"$r\",\"code\",null,{\"children\":\"Profile\"}],\" 组件的 \",[\"$r\",\"code\",null,{\"children\":\"Gallery\"}],\" 组件：\"]}],\"\\n\"]}],[\"$r\",\"Sandpack\",null,{\"children\":[[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"function Profile() {\\n  return (\\n    <img\\n      src=\\\"https://i.imgur.com/MK3eW3As.jpg\\\"\\n      alt=\\\"Katherine Johnson\\\"\\n    />\\n  );\\n}\\n\\nexport default function Gallery() {\\n  return (\\n    <section>\\n      <h1>了不起的科学家</h1>\\n      <Profile />\\n      <Profile />\\n      <Profile />\\n    </section>\\n  );\\n}\\n\"}]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-css\",\"children\":\"img { margin: 0 10px 10px 0; height: 90px; }\\n\"}]}]]}],[\"$r\",\"MaxWidth\",\"80\",{\"children\":[\"\\n\",[\"$r\",\"h3\",null,{\"id\":\"what-the-browser-sees\",\"children\":\"浏览器所看到的 \"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":\"注意下面两者的区别：\"}],\"\\n\",[\"$r\",\"ul\",null,{\"children\":[\"\\n\",[\"$r\",\"li\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"<section>\"}],\" 是小写的，所以 React 知道我们指的是 HTML 标签。\"]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[[\"$r\",\"code\",null,{\"children\":\"<Profile />\"}],\" 以大写 \",[\"$r\",\"code\",null,{\"children\":\"P\"}],\" 开头，所以 React 知道我们想要使用名为 \",[\"$r\",\"code\",null,{\"children\":\"Profile\"}],\" 的组件。\"]}],\"\\n\"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"然而 \",[\"$r\",\"code\",null,{\"children\":\"Profile\"}],\" 包含更多的 HTML：\",[\"$r\",\"code\",null,{\"children\":\"<img />\"}],\"。这是浏览器最后所看到的：\"]}],\"\\n\",[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-html\",\"children\":\"<section>\\n  <h1>了不起的科学家</h1>\\n  <img src=\\\"https://i.imgur.com/MK3eW3As.jpg\\\" alt=\\\"Katherine Johnson\\\" />\\n  <img src=\\\"https://i.imgur.com/MK3eW3As.jpg\\\" alt=\\\"Katherine Johnson\\\" />\\n  <img src=\\\"https://i.imgur.com/MK3eW3As.jpg\\\" alt=\\\"Katherine Johnson\\\" />\\n</section>\\n\"}]}],\"\\n\",[\"$r\",\"h3\",null,{\"id\":\"nesting-and-organizing-components\",\"children\":\"嵌套和组织组件 \"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"组件是常规的 JavaScript 函数，所以你可以将多个组件保存在同一份文件中。当组件相对较小或彼此紧密相关时，这是一种省事的处理方式。如果这个文件变得臃肿，你也可以随时将 \",[\"$r\",\"code\",null,{\"children\":\"Profile\"}],\" 移动到单独的文件中。你可以立即在 \",[\"$r\",\"a\",null,{\"href\":\"/learn/importing-and-exporting-components\",\"children\":\"关于引入的页面\"}],\" 中学习如何做到这些。\"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"因为 \",[\"$r\",\"code\",null,{\"children\":\"Profile\"}],\" 组件在 \",[\"$r\",\"code\",null,{\"children\":\"Gallery\"}],\" 组件中渲染——甚至好几次！——我们可以认为 \",[\"$r\",\"code\",null,{\"children\":\"Gallery\"}],\" 是一个 \",[\"$r\",\"strong\",null,{\"children\":\"父组件\"}],\"，将每个 \",[\"$r\",\"code\",null,{\"children\":\"Profile\"}],\" 渲染为一个“孩子”。这是 React 的神奇之处：你可以只定义组件一次，然后按需多处和多次使用。\"]}],\"\\n\",[\"$r\",\"Pitfall\",null,{\"children\":[[\"$r\",\"p\",null,{\"children\":[\"组件可以渲染其他组件，但是 \",[\"$r\",\"strong\",null,{\"children\":\"请不要嵌套他们的定义\"}],\"：\"]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"meta\":\"{2-5}\",\"children\":\"export default function Gallery() {\\n  // 🔴 永远不要在组件中定义组件\\n  function Profile() {\\n    // ...\\n  }\\n  // ...\\n}\\n\"}]}],[\"$r\",\"p\",null,{\"children\":[\"上面这段代码 \",[\"$r\",\"a\",null,{\"href\":\"/learn/preserving-and-resetting-state#different-components-at-the-same-position-reset-state\",\"children\":\"非常慢，并且会导致 bug 产生\"}],\"。因此，你应该在顶层定义每个组件：\"]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"meta\":\"{5-8}\",\"children\":\"export default function Gallery() {\\n  // ...\\n}\\n\\n// ✅ 在顶层声明组件\\nfunction Profile() {\\n  // ...\\n}\\n\"}]}],[\"$r\",\"p\",null,{\"children\":[\"当子组件需要使用父组件的数据时，你需要 \",[\"$r\",\"a\",null,{\"href\":\"/learn/passing-props-to-a-component\",\"children\":\"通过 props 的形式进行传递\"}],\"，而不是嵌套定义。\"]}]]}],\"\\n\",[\"$r\",\"DeepDive\",null,{\"children\":[[\"$r\",\"h4\",null,{\"id\":\"components-all-the-way-down\",\"children\":\"万物皆组件 \"}],[\"$r\",\"p\",null,{\"children\":[\"你的 React 应用程序从“根”组件开始。通常，它会在启动新项目时自动创建。例如，如果你使用 \",[\"$r\",\"a\",null,{\"href\":\"https://codesandbox.io/\",\"target\":\"_blank\",\"rel\":\"nofollow noopener noreferrer\",\"children\":\"CodeSandbox\"}],\"，根组件定义在 \",[\"$r\",\"code\",null,{\"children\":\"src/App.js\"}],\" 中。如果使用 \",[\"$r\",\"a\",null,{\"href\":\"https://nextjs.org/\",\"target\":\"_blank\",\"rel\":\"nofollow noopener noreferrer\",\"children\":\"Next.js\"}],\" 框架，根组件定义在 \",[\"$r\",\"code\",null,{\"children\":\"pages/index.js\"}],\" 中。在这些示例中，一直有导出根组件。\"]}],[\"$r\",\"p\",null,{\"children\":\"大多数 React 应用程序只有组件。这意味着你不仅可以将组件用于可复用的部分，例如按钮，还可以用于较大块的部分，例如侧边栏、列表以及最终的完整页面！组件是组织 UI 代码和标签的一种快捷方式，即使其中一些组件只使用了一次。\"}],[\"$r\",\"p\",null,{\"children\":\"像 Next.js 这样的框架会做更多事情。与使用一个空白的 HTML 页面并让 React 使用 JavaScript “接手”管理页面不同，框架还会根据你的 React 组件自动生成 HTML。这使你的应用程序在加载 JavaScript 代码之前能够展示一些内容。\"}],[\"$r\",\"p\",null,{\"children\":[\"尽管如此，许多网站仅使用 React 来 \",[\"$r\",\"a\",null,{\"href\":\"/learn/add-react-to-a-website\",\"children\":\"添加“交互性”\"}],\"。它们有很多根组件，而不是整个页面的单个组件。你可以根据需要尽可能多或尽可能少地使用 React。\"]}]]}],\"\\n\",[\"$r\",\"Recap\",null,{\"children\":[[\"$r\",\"p\",null,{\"children\":\"你刚刚第一次体验 React！让我们回顾一些关键点。\"}],[\"$r\",\"ul\",null,{\"children\":[\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"React 允许你创建组件，\",[\"$r\",\"strong\",null,{\"children\":\"应用程序的可复用 UI 元素\"}],\"。\"]}],\"\\n\"]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"\\n\",[\"$r\",\"p\",null,{\"children\":\"在 React 应用程序中，每一个 UI 模块都是一个组件。\"}],\"\\n\"]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"\\n\",[\"$r\",\"p\",null,{\"children\":\"React 是常规的 JavaScript 函数，除了：\"}],\"\\n\",[\"$r\",\"ol\",null,{\"children\":[\"\\n\",[\"$r\",\"li\",null,{\"children\":\"它们的名字总是以大写字母开头。\"}],\"\\n\",[\"$r\",\"li\",null,{\"children\":\"它们返回 JSX 标签。\"}],\"\\n\"]}],\"\\n\"]}],\"\\n\"]}]]}],\"\\n\"]}],[\"$r\",\"Challenges\",null,{\"children\":[[\"$r\",\"h4\",null,{\"id\":\"export-the-component\",\"children\":\"导出组件 \"}],[\"$r\",\"p\",null,{\"children\":\"这个沙箱不起作用，因为根组件没有导出：\"}],[\"$r\",\"Sandpack\",null,{\"children\":[[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"function Profile() {\\n  return (\\n    <img\\n      src=\\\"https://i.imgur.com/lICfvbD.jpg\\\"\\n      alt=\\\"Aklilu Lemma\\\"\\n    />\\n  );\\n}\\n\"}]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-css\",\"children\":\"img { height: 181px; }\\n\"}]}]]}],[\"$r\",\"p\",null,{\"children\":\"看答案之前先尝试自己修复它！\"}],[\"$r\",\"Solution\",null,{\"children\":[[\"$r\",\"p\",null,{\"children\":[\"在函数定义前添加 \",[\"$r\",\"code\",null,{\"children\":\"export default\"}],\"，如下所示：\"]}],[\"$r\",\"Sandpack\",null,{\"children\":[[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"export default function Profile() {\\n  return (\\n    <img\\n      src=\\\"https://i.imgur.com/lICfvbD.jpg\\\"\\n      alt=\\\"Aklilu Lemma\\\"\\n    />\\n  );\\n}\\n\"}]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-css\",\"children\":\"img { height: 181px; }\\n\"}]}]]}],[\"$r\",\"p\",null,{\"children\":[\"你可能想知道为什么单独写 \",[\"$r\",\"code\",null,{\"children\":\"export\"}],\" 不足以解决这个问题。你可以在 \",[\"$r\",\"a\",null,{\"href\":\"/learn/importing-and-exporting-components\",\"children\":\"引入和导出组件\"}],\" 中了解 \",[\"$r\",\"code\",null,{\"children\":\"export\"}],\" 和 \",[\"$r\",\"code\",null,{\"children\":\"export default\"}],\" 两者之间的区别。\"]}]]}],[\"$r\",\"h4\",null,{\"id\":\"fix-the-return-statement\",\"children\":\"修复返回语句 \"}],[\"$r\",\"p\",null,{\"children\":[\"这个 \",[\"$r\",\"code\",null,{\"children\":\"return\"}],\" 语句不太对，你能修复它吗？\"]}],[\"$r\",\"Hint\",null,{\"children\":[\"$r\",\"p\",null,{\"children\":[\"当你尝试修复它时，可能会得到“Unexpected token”的报错。这种情况下，请检查分号是否在右括号 \",[\"$r\",\"strong\",null,{\"children\":\"之后\"}],\"。在 \",[\"$r\",\"code\",null,{\"children\":\"return ( )\"}],\" 里面留下分号将会导致报错。\"]}]}],[\"$r\",\"Sandpack\",null,{\"children\":[[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"export default function Profile() {\\n  return\\n    <img src=\\\"https://i.imgur.com/jA8hHMpm.jpg\\\" alt=\\\"Katsuko Saruhashi\\\" />;\\n}\\n\"}]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-css\",\"children\":\"img { height: 180px; }\\n\"}]}]]}],[\"$r\",\"Solution\",null,{\"children\":[[\"$r\",\"p\",null,{\"children\":\"你可以通过将返回语句移动到一行上来修复这个组件，如下所示：\"}],[\"$r\",\"Sandpack\",null,{\"children\":[[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"export default function Profile() {\\n  return <img src=\\\"https://i.imgur.com/jA8hHMpm.jpg\\\" alt=\\\"Katsuko Saruhashi\\\" />;\\n}\\n\"}]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-css\",\"children\":\"img { height: 180px; }\\n\"}]}]]}],[\"$r\",\"p\",null,{\"children\":[\"或者用括号包裹返回的 JSX 标签，将左括号放在 \",[\"$r\",\"code\",null,{\"children\":\"return\"}],\" 的后面：\"]}],[\"$r\",\"Sandpack\",null,{\"children\":[[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"export default function Profile() {\\n  return (\\n    <img \\n      src=\\\"https://i.imgur.com/jA8hHMpm.jpg\\\" \\n      alt=\\\"Katsuko Saruhashi\\\" \\n    />\\n  );\\n}\\n\"}]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-css\",\"children\":\"img { height: 180px; }\\n\"}]}]]}]]}],[\"$r\",\"h4\",null,{\"id\":\"spot-the-mistake\",\"children\":\"发现错误 \"}],[\"$r\",\"p\",null,{\"children\":[\"下面 \",[\"$r\",\"code\",null,{\"children\":\"Profile\"}],\" 组件的声明和使用存在问题。你能指出其中的错误所在吗？（试着想想 React 是如何区分组件和常规的 HTML 标签的！）\"]}],[\"$r\",\"Sandpack\",null,{\"children\":[[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"function profile() {\\n  return (\\n    <img\\n      src=\\\"https://i.imgur.com/QIrZWGIs.jpg\\\"\\n      alt=\\\"Alan L. Hart\\\"\\n    />\\n  );\\n}\\n\\nexport default function Gallery() {\\n  return (\\n    <section>\\n      <h1>了不起的科学家</h1>\\n      <profile />\\n      <profile />\\n      <profile />\\n    </section>\\n  );\\n}\\n\"}]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-css\",\"children\":\"img { margin: 0 10px 10px 0; height: 90px; }\\n\"}]}]]}],[\"$r\",\"Solution\",null,{\"children\":[[\"$r\",\"p\",null,{\"children\":\"React 组件名字必须以大写字母开头。\"}],[\"$r\",\"p\",null,{\"children\":[\"将 \",[\"$r\",\"code\",null,{\"children\":\"function profile()\"}],\" 改为 \",[\"$r\",\"code\",null,{\"children\":\"function Profile()\"}],\"，然后将每个 \",[\"$r\",\"code\",null,{\"children\":\"<profile />\"}],\" 改为 \",[\"$r\",\"code\",null,{\"children\":\"<Profile />\"}],\"：\"]}],[\"$r\",\"Sandpack\",null,{\"children\":[[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"function Profile() {\\n  return (\\n    <img\\n      src=\\\"https://i.imgur.com/QIrZWGIs.jpg\\\"\\n      alt=\\\"Alan L. Hart\\\"\\n    />\\n  );\\n}\\n\\nexport default function Gallery() {\\n  return (\\n    <section>\\n      <h1>了不起的科学家</h1>\\n      <Profile />\\n      <Profile />\\n      <Profile />\\n    </section>\\n  );\\n}\\n\"}]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-css\",\"children\":\"img { margin: 0 10px 10px 0; }\\n\"}]}]]}]]}],[\"$r\",\"h4\",null,{\"id\":\"your-own-component\",\"children\":\"自定义组件 \"}],[\"$r\",\"p\",null,{\"children\":[\"从头开始编写一个组件。你可以为它指定任何有效名称然后返回任何标签。如果你没有什么想法的话，你可以写一个显示 \",[\"$r\",\"code\",null,{\"children\":\"<h1>干得漂亮！</h1>\"}],\" 的 \",[\"$r\",\"code\",null,{\"children\":\"Congratulations\"}],\" 组件。不要忘了导出它！\"]}],[\"$r\",\"Sandpack\",null,{\"children\":[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"// 在下面写你的组件\\n\\n\"}]}]}],[\"$r\",\"Solution\",null,{\"children\":[\"$r\",\"Sandpack\",null,{\"children\":[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"export default function Congratulations() {\\n  return (\\n    <h1>干得漂亮！</h1>\\n  );\\n}\\n\"}]}]}]}]]}]]","meta":{"title":"你的第一个组件","translators":["fine-bot","nmsn","QC-L"]}},"__N_SSG":true}