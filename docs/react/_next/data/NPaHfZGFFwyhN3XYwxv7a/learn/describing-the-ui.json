{"pageProps":{"toc":"[{\"url\":\"#\",\"text\":\"概览\",\"depth\":2},{\"url\":\"#your-first-component\",\"depth\":2,\"text\":\"你的第一个组件 \"},{\"url\":\"#importing-and-exporting-components\",\"depth\":2,\"text\":\"导入与导出组件 \"},{\"url\":\"#writing-markup-with-jsx\",\"depth\":2,\"text\":\"使用 JSX 编写标签 \"},{\"url\":\"#javascript-in-jsx-with-curly-braces\",\"depth\":2,\"text\":\"在 JSX 中使用大括号编写 JavaScript \"},{\"url\":\"#passing-props-to-a-component\",\"depth\":2,\"text\":[\"将 \",[\"$r\",\"code\",null,{\"children\":\"props\"}],\" 传递给一个组件 \"]},{\"url\":\"#conditional-rendering\",\"depth\":2,\"text\":\"条件渲染 \"},{\"url\":\"#rendering-lists\",\"depth\":2,\"text\":\"渲染列表 \"},{\"url\":\"#keeping-components-pure\",\"depth\":2,\"text\":\"保持组件的纯粹 \"},{\"url\":\"#your-ui-as-a-tree\",\"depth\":2,\"text\":\"将 UI 视为树 \"},{\"url\":\"#whats-next\",\"depth\":2,\"text\":\"接下来应该…… \"}]","content":"[[\"$r\",\"MaxWidth\",\"8\",{\"children\":[[\"$r\",\"Intro\",null,{\"children\":[\"$r\",\"p\",null,{\"children\":[\"React 是一个用于构建用户界面（UI）的 JavaScript 库，用户界面由按钮、文本和图像等小单元内容构建而成。React 帮助你把它们组合成可重用、可嵌套的 \",[\"$r\",\"em\",null,{\"children\":\"组件\"}],\"。从 web 端网站到移动端应用，屏幕上的所有内容都可以被分解成组件。在本章节中，你将学习如何创建、定制以及有条件地显示 React 组件。\"]}]}],\"\\n\",[\"$r\",\"YouWillLearn\",null,{\"isChapter\":true,\"children\":[\"$r\",\"ul\",null,{\"children\":[\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"$r\",\"a\",null,{\"href\":\"/learn/your-first-component\",\"children\":\"如何创建你的第一个组件\"}]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"$r\",\"a\",null,{\"href\":\"/learn/importing-and-exporting-components\",\"children\":\"在什么时候以及如何创建多文件组件\"}]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"$r\",\"a\",null,{\"href\":\"/learn/writing-markup-with-jsx\",\"children\":\"如何使用 JSX 为 JavaScript 添加标签\"}]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"$r\",\"a\",null,{\"href\":\"/learn/javascript-in-jsx-with-curly-braces\",\"children\":\"如何在 JSX 中使用花括号来从组件中使用 JavaScript 功能\"}]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"$r\",\"a\",null,{\"href\":\"/learn/passing-props-to-a-component\",\"children\":\"如何用 props 配置组件\"}]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"$r\",\"a\",null,{\"href\":\"/learn/conditional-rendering\",\"children\":\"如何有条件地渲染组件\"}]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"$r\",\"a\",null,{\"href\":\"/learn/rendering-lists\",\"children\":\"如何在同一时间渲染多个组件\"}]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"$r\",\"a\",null,{\"href\":\"/learn/keeping-components-pure\",\"children\":\"如何通过保持组件的纯粹性来避免令人困惑的错误\"}]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"$r\",\"a\",null,{\"href\":\"/learn/understanding-your-ui-as-a-tree\",\"children\":\"为什么将 UI 理解为树是有用的\"}]}],\"\\n\"]}]}],\"\\n\",[\"$r\",\"h2\",null,{\"id\":\"your-first-component\",\"children\":\"你的第一个组件 \"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"React 应用是由被称为 \",[\"$r\",\"strong\",null,{\"children\":\"组件\"}],\" 的独立 UI 片段构建而成。React 组件本质上是可以任意添加标签的 JavaScript 函数。组件可以小到一个按钮，也可以大到是整个页面。这是一个 \",[\"$r\",\"code\",null,{\"children\":\"Gallery\"}],\" 组件，用于渲染三个 \",[\"$r\",\"code\",null,{\"children\":\"Profile\"}],\" 组件：\"]}],\"\\n\"]}],[\"$r\",\"Sandpack\",null,{\"children\":[[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"function Profile() {\\n  return (\\n    <img\\n      src=\\\"https://i.imgur.com/MK3eW3As.jpg\\\"\\n      alt=\\\"Katherine Johnson\\\"\\n    />\\n  );\\n}\\n\\nexport default function Gallery() {\\n  return (\\n    <section>\\n      <h1>Amazing scientists</h1>\\n      <Profile />\\n      <Profile />\\n      <Profile />\\n    </section>\\n  );\\n}\\n\"}]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-css\",\"children\":\"img { margin: 0 10px 10px 0; height: 90px; }\\n\"}]}]]}],[\"$r\",\"MaxWidth\",\"16\",{\"children\":[\"\\n\",[\"$r\",\"LearnMore\",null,{\"path\":\"/learn/your-first-component\",\"children\":[\"$r\",\"p\",null,{\"children\":[\"请参阅 \",[\"$r\",\"strong\",null,{\"children\":[\"$r\",\"a\",null,{\"href\":\"/learn/your-first-component\",\"children\":\"你的第一个组件\"}]}],\" 以学习如何声明并使用 React 组件\"]}]}],\"\\n\",[\"$r\",\"h2\",null,{\"id\":\"importing-and-exporting-components\",\"children\":\"导入与导出组件 \"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"你可以在一个文件中声明许多组件，但文件的体积过大会变得难以浏览。为了解决这个问题，你可以在一个文件中只\",[\"$r\",\"em\",null,{\"children\":\"导出\"}],\"一个组件，然后再从另一个文件中\",[\"$r\",\"em\",null,{\"children\":\"导入\"}],\"该组件：\"]}],\"\\n\"]}],[\"$r\",\"Sandpack\",null,{\"children\":[[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"meta\":\"src/App.js hidden\",\"children\":\"import Gallery from './Gallery.js';\\n\\nexport default function App() {\\n  return (\\n    <Gallery />\\n  );\\n}\\n\"}]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"meta\":\"src/Gallery.js active\",\"children\":\"import Profile from './Profile.js';\\n\\nexport default function Gallery() {\\n  return (\\n    <section>\\n      <h1>Amazing scientists</h1>\\n      <Profile />\\n      <Profile />\\n      <Profile />\\n    </section>\\n  );\\n}\\n\"}]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"meta\":\"src/Profile.js\",\"children\":\"export default function Profile() {\\n  return (\\n    <img\\n      src=\\\"https://i.imgur.com/QIrZWGIs.jpg\\\"\\n      alt=\\\"Alan L. Hart\\\"\\n    />\\n  );\\n}\\n\"}]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-css\",\"children\":\"img { margin: 0 10px 10px 0; }\\n\"}]}]]}],[\"$r\",\"MaxWidth\",\"26\",{\"children\":[\"\\n\",[\"$r\",\"LearnMore\",null,{\"path\":\"/learn/importing-and-exporting-components\",\"children\":[\"$r\",\"p\",null,{\"children\":[\"请参阅 \",[\"$r\",\"strong\",null,{\"children\":[\"$r\",\"a\",null,{\"href\":\"/learn/importing-and-exporting-components\",\"children\":\"导入与导出组件\"}]}],\" 以学习如何切分组件。\"]}]}],\"\\n\",[\"$r\",\"h2\",null,{\"id\":\"writing-markup-with-jsx\",\"children\":\"使用 JSX 编写标签 \"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":\"每个 React 组件都是一个 JavaScript 函数，它可能包含一些标签，React 会将其渲染到浏览器中。React 组件使用一种叫做 JSX 的语法扩展来表示该标签。JSX 看起来很像 HTML，但它更为严格，可以显示动态信息。\"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":\"如果我们把现有的 HTML 标签粘贴到 React 组件中，它并不一定能成功运行：\"}],\"\\n\"]}],[\"$r\",\"Sandpack\",null,{\"children\":[[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"export default function TodoList() {\\n  return (\\n    // This doesn't quite work!\\n    <h1>Hedy Lamarr's Todos</h1>\\n    <img\\n      src=\\\"https://i.imgur.com/yXOvdOSs.jpg\\\"\\n      alt=\\\"Hedy Lamarr\\\"\\n      class=\\\"photo\\\"\\n    >\\n    <ul>\\n      <li>Invent new traffic lights\\n      <li>Rehearse a movie scene\\n      <li>Improve spectrum technology\\n    </ul>\\n  );\\n}\\n\"}]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-css\",\"children\":\"img { height: 90px; }\\n\"}]}]]}],[\"$r\",\"MaxWidth\",\"30\",{\"children\":[\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"如果你有像这样的现有的 HTML 片段，你可以使用它进行语法转换 \",[\"$r\",\"a\",null,{\"href\":\"https://transform.tools/html-to-jsx\",\"target\":\"_blank\",\"rel\":\"nofollow noopener noreferrer\",\"children\":\"converter\"}],\"：\"]}],\"\\n\"]}],[\"$r\",\"Sandpack\",null,{\"children\":[[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"export default function TodoList() {\\n  return (\\n    <>\\n      <h1>Hedy Lamarr's Todos</h1>\\n      <img\\n        src=\\\"https://i.imgur.com/yXOvdOSs.jpg\\\"\\n        alt=\\\"Hedy Lamarr\\\"\\n        className=\\\"photo\\\"\\n      />\\n      <ul>\\n        <li>Invent new traffic lights</li>\\n        <li>Rehearse a movie scene</li>\\n        <li>Improve spectrum technology</li>\\n      </ul>\\n    </>\\n  );\\n}\\n\"}]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-css\",\"children\":\"img { height: 90px; }\\n\"}]}]]}],[\"$r\",\"MaxWidth\",\"38\",{\"children\":[\"\\n\",[\"$r\",\"LearnMore\",null,{\"path\":\"/learn/writing-markup-with-jsx\",\"children\":[\"$r\",\"p\",null,{\"children\":[\"请参阅 \",[\"$r\",\"strong\",null,{\"children\":[\"$r\",\"a\",null,{\"href\":\"/learn/writing-markup-with-jsx\",\"children\":\"使用 JSX 编写标签\"}]}],\" 以学习如何编写有效的 JSX。\"]}]}],\"\\n\",[\"$r\",\"h2\",null,{\"id\":\"javascript-in-jsx-with-curly-braces\",\"children\":\"在 JSX 中使用大括号编写 JavaScript \"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":\"JSX 可以让你在 JavaScript 文件中编写类似 HTML 的标签语法，使渲染逻辑和内容展示维护在同一个地方。有时你会想在标签中添加一点 JavaScript 逻辑或引用一个动态属性。在这种情况下，你可以在 JSX 中使用花括号来为 JavaScript “开辟通道”：\"}],\"\\n\"]}],[\"$r\",\"Sandpack\",null,{\"children\":[[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"const person = {\\n  name: 'Gregorio Y. Zara',\\n  theme: {\\n    backgroundColor: 'black',\\n    color: 'pink'\\n  }\\n};\\n\\nexport default function TodoList() {\\n  return (\\n    <div style={person.theme}>\\n      <h1>{person.name}'s Todos</h1>\\n      <img\\n        className=\\\"avatar\\\"\\n        src=\\\"https://i.imgur.com/7vQD0fPs.jpg\\\"\\n        alt=\\\"Gregorio Y. Zara\\\"\\n      />\\n      <ul>\\n        <li>Improve the videophone</li>\\n        <li>Prepare aeronautics lectures</li>\\n        <li>Work on the alcohol-fuelled engine</li>\\n      </ul>\\n    </div>\\n  );\\n}\\n\"}]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-css\",\"children\":\"body { padding: 0; margin: 0 }\\nbody > div > div { padding: 20px; }\\n.avatar { border-radius: 50%; height: 90px; }\\n\"}]}]]}],[\"$r\",\"MaxWidth\",\"46\",{\"children\":[\"\\n\",[\"$r\",\"LearnMore\",null,{\"path\":\"/learn/javascript-in-jsx-with-curly-braces\",\"children\":[\"$r\",\"p\",null,{\"children\":[\"请参阅 \",[\"$r\",\"strong\",null,{\"children\":[\"$r\",\"a\",null,{\"href\":\"/learn/javascript-in-jsx-with-curly-braces\",\"children\":\"在 JSX 中使用大括号编写 JavaScript\"}]}],\" 以学习如何从 JSX 中访问 JavaScript 数据。\"]}]}],\"\\n\",[\"$r\",\"h2\",null,{\"id\":\"passing-props-to-a-component\",\"children\":[\"将 \",[\"$r\",\"code\",null,{\"children\":\"props\"}],\" 传递给一个组件 \"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"React 组件使用 \",[\"$r\",\"em\",null,{\"children\":\"props\"}],\" 来进行组件之间的通讯。每个父组件都可以通过为子组件提供 props 的方式来传递信息。props 可能会让你想起 HTML 属性，但你可以通过它们传递任何 JavaScript 的值，包括对象、数组、函数、甚至是 JSX!\"]}],\"\\n\"]}],[\"$r\",\"Sandpack\",null,{\"children\":[[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"import { getImageUrl } from './utils.js'\\n\\nexport default function Profile() {\\n  return (\\n    <Card>\\n      <Avatar\\n        size={100}\\n        person={{\\n          name: 'Katsuko Saruhashi',\\n          imageId: 'YfeOqp2'\\n        }}\\n      />\\n    </Card>\\n  );\\n}\\n\\nfunction Avatar({ person, size }) {\\n  return (\\n    <img\\n      className=\\\"avatar\\\"\\n      src={getImageUrl(person)}\\n      alt={person.name}\\n      width={size}\\n      height={size}\\n    />\\n  );\\n}\\n\\nfunction Card({ children }) {\\n  return (\\n    <div className=\\\"card\\\">\\n      {children}\\n    </div>\\n  );\\n}\\n\\n\"}]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"meta\":\"src/utils.js\",\"children\":\"export function getImageUrl(person, size = 's') {\\n  return (\\n    'https://i.imgur.com/' +\\n    person.imageId +\\n    size +\\n    '.jpg'\\n  );\\n}\\n\"}]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-css\",\"children\":\".card {\\n  width: fit-content;\\n  margin: 5px;\\n  padding: 5px;\\n  font-size: 20px;\\n  text-align: center;\\n  border: 1px solid #aaa;\\n  border-radius: 20px;\\n  background: #fff;\\n}\\n.avatar {\\n  margin: 20px;\\n  border-radius: 50%;\\n}\\n\"}]}]]}],[\"$r\",\"MaxWidth\",\"56\",{\"children\":[\"\\n\",[\"$r\",\"LearnMore\",null,{\"path\":\"/learn/passing-props-to-a-component\",\"children\":[\"$r\",\"p\",null,{\"children\":[\"请参阅 \",[\"$r\",\"strong\",null,{\"children\":[\"$r\",\"a\",null,{\"href\":\"/learn/passing-props-to-a-component\",\"children\":\"向组件传递 props\"}]}],\" 以了解如何传递并读取 props。\"]}]}],\"\\n\",[\"$r\",\"h2\",null,{\"id\":\"conditional-rendering\",\"children\":\"条件渲染 \"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"你的组件经常需要根据不同的条件来显示不同的东西。在 React 中，你可以使用 JavaScript 语法，如 \",[\"$r\",\"code\",null,{\"children\":\"if\"}],\" 语句、\",[\"$r\",\"code\",null,{\"children\":\"&&\"}],\" 和 \",[\"$r\",\"code\",null,{\"children\":\"? :\"}],\" 操作符有条件地渲染 JSX。\"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"在这个示例中，JavaScript 的 \",[\"$r\",\"code\",null,{\"children\":\"&&\"}],\" 操作符将会条件渲染一个复选标签：\"]}],\"\\n\"]}],[\"$r\",\"Sandpack\",null,{\"children\":[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"function Item({ name, isPacked }) {\\n  return (\\n    <li className=\\\"item\\\">\\n      {name} {isPacked && '✔'}\\n    </li>\\n  );\\n}\\n\\nexport default function PackingList() {\\n  return (\\n    <section>\\n      <h1>Sally Ride's Packing List</h1>\\n      <ul>\\n        <Item\\n          isPacked={true}\\n          name=\\\"Space suit\\\"\\n        />\\n        <Item\\n          isPacked={true}\\n          name=\\\"Helmet with a golden leaf\\\"\\n        />\\n        <Item\\n          isPacked={false}\\n          name=\\\"Photo of Tam\\\"\\n        />\\n      </ul>\\n    </section>\\n  );\\n}\\n\"}]}]}],[\"$r\",\"MaxWidth\",\"66\",{\"children\":[\"\\n\",[\"$r\",\"LearnMore\",null,{\"path\":\"/learn/conditional-rendering\",\"children\":[\"$r\",\"p\",null,{\"children\":[\"请参阅 \",[\"$r\",\"strong\",null,{\"children\":[\"$r\",\"a\",null,{\"href\":\"/learn/conditional-rendering\",\"children\":\"条件渲染\"}]}],\" 以学习使用不同的方法对内容进行条件渲染。\"]}]}],\"\\n\",[\"$r\",\"h2\",null,{\"id\":\"rendering-lists\",\"children\":\"渲染列表 \"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"通常，你需要根据数据集合来渲染多个较为类似的组件。你可以在 React 中使用 JavaScript 的 \",[\"$r\",\"code\",null,{\"children\":\"filter()\"}],\" 和 \",[\"$r\",\"code\",null,{\"children\":\"map()\"}],\" 来实现数组的过滤和转换，将数据数组转换为组件数组。\"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"对于数组的每个元素项，你需要指定一个 \",[\"$r\",\"code\",null,{\"children\":\"key\"}],\"。通常你需要使用数据库中的 ID 作为 \",[\"$r\",\"code\",null,{\"children\":\"key\"}],\"。即使列表发生了变化，React 也可以通过 key 来跟踪每个元素在列表中的位置。\"]}],\"\\n\"]}],[\"$r\",\"Sandpack\",null,{\"children\":[[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"meta\":\"src/App.js\",\"children\":\"import { people } from './data.js';\\nimport { getImageUrl } from './utils.js';\\n\\nexport default function List() {\\n  const listItems = people.map(person =>\\n    <li key={person.id}>\\n      <img\\n        src={getImageUrl(person)}\\n        alt={person.name}\\n      />\\n      <p>\\n        <b>{person.name}:</b>\\n        {' ' + person.profession + ' '}\\n        known for {person.accomplishment}\\n      </p>\\n    </li>\\n  );\\n  return (\\n    <article>\\n      <h1>Scientists</h1>\\n      <ul>{listItems}</ul>\\n    </article>\\n  );\\n}\\n\"}]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"meta\":\"src/data.js\",\"children\":\"export const people = [{\\n  id: 0,\\n  name: 'Creola Katherine Johnson',\\n  profession: 'mathematician',\\n  accomplishment: 'spaceflight calculations',\\n  imageId: 'MK3eW3A'\\n}, {\\n  id: 1,\\n  name: 'Mario José Molina-Pasquel Henríquez',\\n  profession: 'chemist',\\n  accomplishment: 'discovery of Arctic ozone hole',\\n  imageId: 'mynHUSa'\\n}, {\\n  id: 2,\\n  name: 'Mohammad Abdus Salam',\\n  profession: 'physicist',\\n  accomplishment: 'electromagnetism theory',\\n  imageId: 'bE7W1ji'\\n}, {\\n  id: 3,\\n  name: 'Percy Lavon Julian',\\n  profession: 'chemist',\\n  accomplishment: 'pioneering cortisone drugs, steroids and birth control pills',\\n  imageId: 'IOjWm71'\\n}, {\\n  id: 4,\\n  name: 'Subrahmanyan Chandrasekhar',\\n  profession: 'astrophysicist',\\n  accomplishment: 'white dwarf star mass calculations',\\n  imageId: 'lrWQx8l'\\n}];\\n\"}]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"meta\":\"src/utils.js\",\"children\":\"export function getImageUrl(person) {\\n  return (\\n    'https://i.imgur.com/' +\\n    person.imageId +\\n    's.jpg'\\n  );\\n}\\n\"}]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-css\",\"children\":\"ul { list-style-type: none; padding: 0px 10px; }\\nli {\\n  margin-bottom: 10px;\\n  display: grid;\\n  grid-template-columns: 1fr 1fr;\\n  align-items: center;\\n}\\nimg { width: 100px; height: 100px; border-radius: 50%; }\\nh1 { font-size: 22px; }\\nh2 { font-size: 20px; }\\n\"}]}]]}],[\"$r\",\"MaxWidth\",\"78\",{\"children\":[\"\\n\",[\"$r\",\"LearnMore\",null,{\"path\":\"/learn/rendering-lists\",\"children\":[\"$r\",\"p\",null,{\"children\":[\"请参阅 \",[\"$r\",\"strong\",null,{\"children\":[\"$r\",\"a\",null,{\"href\":\"/learn/rendering-lists\",\"children\":\"渲染列表\"}]}],\" 以学习如何渲染一个组件列表，以及如何选择一个 \",[\"$r\",\"code\",null,{\"children\":\"key\"}],\"。\"]}]}],\"\\n\",[\"$r\",\"h2\",null,{\"id\":\"keeping-components-pure\",\"children\":\"保持组件的纯粹 \"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"有些 JavaScript 函数是 \",[\"$r\",\"strong\",null,{\"children\":\"纯粹\"}],\" 的。纯函数的基本定义：\"]}],\"\\n\",[\"$r\",\"ul\",null,{\"children\":[\"\\n\",[\"$r\",\"li\",null,{\"children\":[[\"$r\",\"strong\",null,{\"children\":\"只负责自己的任务\"}],\"。 它不会更改在该函数调用前就已存在的对象或变量。\"]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[[\"$r\",\"strong\",null,{\"children\":\"输入相同，输出也相同\"}],\"。 在输入相同的情况下，对纯函数来说应总是返回相同的结果。\"]}],\"\\n\"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":\"严格遵循纯函数的定义编写组件，可以让代码库体量增长时，避免一些令人困惑的错误和不可预测的行为。下面是一个非纯函数组件的示例：\"}],\"\\n\"]}],[\"$r\",\"Sandpack\",null,{\"children\":[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"let guest = 0;\\n\\nfunction Cup() {\\n  // Bad: changing a preexisting variable!\\n  guest = guest + 1;\\n  return <h2>Tea cup for guest #{guest}</h2>;\\n}\\n\\nexport default function TeaSet() {\\n  return (\\n    <>\\n      <Cup />\\n      <Cup />\\n      <Cup />\\n    </>\\n  );\\n}\\n\"}]}]}],[\"$r\",\"MaxWidth\",\"82\",{\"children\":[\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"你可以通过传递一个 \",[\"$r\",\"code\",null,{\"children\":\"props\"}],\" 来使这个组件变得纯粹，而非修改已经存在的变量：\"]}],\"\\n\"]}],[\"$r\",\"Sandpack\",null,{\"children\":[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"function Cup({ guest }) {\\n  return <h2>Tea cup for guest #{guest}</h2>;\\n}\\n\\nexport default function TeaSet() {\\n  return (\\n    <>\\n      <Cup guest={1} />\\n      <Cup guest={2} />\\n      <Cup guest={3} />\\n    </>\\n  );\\n}\\n\"}]}]}],[\"$r\",\"MaxWidth\",\"last\",{\"children\":[\"\\n\",[\"$r\",\"LearnMore\",null,{\"path\":\"/learn/keeping-components-pure\",\"children\":[\"$r\",\"p\",null,{\"children\":[\"请参阅 \",[\"$r\",\"strong\",null,{\"children\":[\"$r\",\"a\",null,{\"href\":\"/learn/keeping-components-pure\",\"children\":\"保持组件的纯粹\"}]}],\" 以学习如何将组件写成纯粹且可预测的函数。\"]}]}],\"\\n\",[\"$r\",\"h2\",null,{\"id\":\"your-ui-as-a-tree\",\"children\":\"将 UI 视为树 \"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":\"React 使用树形关系建模以展示组件和模块之间的关系。\"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":\"React 渲染树是组件之间父子关系的表示。\"}],\"\\n\",[\"$r\",\"Diagram\",null,{\"name\":\"generic_render_tree\",\"height\":250,\"width\":500,\"alt\":\"一个树状图，有五个节点，每个节点代表一个组件。树状图的顶部有一个名为 Root Component 的根节点，它有两个向下延伸的箭头，分别标有 renders。两个箭头指向标有 Component A 和 Component C 的节点。Component A 有一条 renders 箭头指向标有 Component B 的节点。Component C 有一条 renders 箭头指向标有 Component D 的节点。\",\"children\":[\"$r\",\"p\",null,{\"children\":\"示例的 React 渲染树\"}]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":\"位于树顶部、靠近根组件的组件被视为顶层组件。没有子组件的组件被称为叶子组件。对组件的这种分类对于理解数据流和渲染性能非常有用。\"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":\"对 JavaScript 模块之间的关系进行建模是了解应用程序的另一种有用方式。我们将其称为模块依赖树。\"}],\"\\n\",[\"$r\",\"Diagram\",null,{\"name\":\"generic_dependency_tree\",\"height\":250,\"width\":500,\"alt\":\"一个树状图，有五个节点。每个节点代表一个 JavaScript 模块。最顶部的节点标有 RootModule.js。它有三条箭头指向节点：ModuleA.js、ModuleB.js 和 ModuleC.js。每个箭头标有 imports。ModuleC.js 节点有一条 imports 箭头指向标有 ModuleD.js的节点。\",\"children\":[\"$r\",\"p\",null,{\"children\":\"示例的模块依赖树\"}]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":\"构建工具经常使用依赖树来捆绑客户端下载和渲染所需的所有 JavaScript 代码。对于 React 应用程序，打包大小会导致用户体验退化。了解模块依赖树有助于调试此类问题。\"}],\"\\n\",[\"$r\",\"LearnMore\",null,{\"path\":\"/learn/understanding-your-ui-as-a-tree\",\"children\":[\"$r\",\"p\",null,{\"children\":[\"阅读 \",[\"$r\",\"strong\",null,{\"children\":[\"$r\",\"a\",null,{\"href\":\"/learn/understanding-your-ui-as-a-tree\",\"children\":\"将 UI 视为树\"}]}],\" 以了解如何为 React 应用程序创建渲染和模块依赖树，以及它们如何成为有效改善用户体验和性能的心理模型。\"]}]}],\"\\n\",[\"$r\",\"h2\",null,{\"id\":\"whats-next\",\"children\":\"接下来应该…… \"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"请访问 \",[\"$r\",\"a\",null,{\"href\":\"/learn/your-first-component\",\"children\":\"你的第一个组件\"}],\" 这个章节并开始阅读！\"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"如若你已熟悉这些主题，可直接阅读 \",[\"$r\",\"a\",null,{\"href\":\"/learn/adding-interactivity\",\"children\":\"增加交互\"}],\" 一节。\"]}]]}]]","meta":{"title":"描述用户界面","translators":["ChelesteWang","QC-L","KnowsCount","lyj505"]}},"__N_SSG":true}