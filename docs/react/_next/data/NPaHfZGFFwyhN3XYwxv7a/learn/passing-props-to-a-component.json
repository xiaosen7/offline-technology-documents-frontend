{"pageProps":{"toc":"[{\"url\":\"#\",\"text\":\"概览\",\"depth\":2},{\"url\":\"#familiar-props\",\"depth\":2,\"text\":\"熟悉的 props \"},{\"url\":\"#passing-props-to-a-component\",\"depth\":2,\"text\":\"向组件传递 props \"},{\"url\":\"#step-1-pass-props-to-the-child-component\",\"depth\":3,\"text\":\"步骤 1: 将 props 传递给子组件 \"},{\"url\":\"#step-2-read-props-inside-the-child-component\",\"depth\":3,\"text\":\"步骤 2: 在子组件中读取 props \"},{\"url\":\"#specifying-a-default-value-for-a-prop\",\"depth\":2,\"text\":\"给 prop 指定一个默认值 \"},{\"url\":\"#forwarding-props-with-the-jsx-spread-syntax\",\"depth\":2,\"text\":\"使用 JSX 展开语法传递 props \"},{\"url\":\"#passing-jsx-as-children\",\"depth\":2,\"text\":\"将 JSX 作为子组件传递 \"},{\"url\":\"#how-props-change-over-time\",\"depth\":2,\"text\":\"Props 如何随时间变化 \"},{\"url\":\"#recap\",\"depth\":2,\"text\":\"Recap\"},{\"url\":\"#challenges\",\"depth\":2,\"text\":\"Challenges\"}]","content":"[[\"$r\",\"MaxWidth\",\"8\",{\"children\":[[\"$r\",\"Intro\",null,{\"children\":[\"$r\",\"p\",null,{\"children\":[\"React 组件使用 \",[\"$r\",\"em\",null,{\"children\":\"props\"}],\" 来互相通信。每个父组件都可以提供 props 给它的子组件，从而将一些信息传递给它。Props 可能会让你想起 HTML 属性，但你可以通过它们传递任何 JavaScript 值，包括对象、数组和函数。\"]}]}],\"\\n\",[\"$r\",\"YouWillLearn\",null,{\"children\":[\"$r\",\"ul\",null,{\"children\":[\"\\n\",[\"$r\",\"li\",null,{\"children\":\"如何向组件传递 props\"}],\"\\n\",[\"$r\",\"li\",null,{\"children\":\"如何从组件读取 props\"}],\"\\n\",[\"$r\",\"li\",null,{\"children\":\"如何为 props 指定默认值\"}],\"\\n\",[\"$r\",\"li\",null,{\"children\":\"如何给组件传递 JSX\"}],\"\\n\",[\"$r\",\"li\",null,{\"children\":\"Props 如何随时间变化\"}],\"\\n\"]}]}],\"\\n\",[\"$r\",\"h2\",null,{\"id\":\"familiar-props\",\"children\":\"熟悉的 props \"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"Props 是你传递给 JSX 标签的信息。例如，\",[\"$r\",\"code\",null,{\"children\":\"className\"}],\"、\",[\"$r\",\"code\",null,{\"children\":\"src\"}],\"、\",[\"$r\",\"code\",null,{\"children\":\"alt\"}],\"、\",[\"$r\",\"code\",null,{\"children\":\"width\"}],\" 和 \",[\"$r\",\"code\",null,{\"children\":\"height\"}],\" 便是一些可以传递给 \",[\"$r\",\"code\",null,{\"children\":\"<img>\"}],\" 的 props：\"]}],\"\\n\"]}],[\"$r\",\"Sandpack\",null,{\"children\":[[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"function Avatar() {\\n  return (\\n    <img\\n      className=\\\"avatar\\\"\\n      src=\\\"https://i.imgur.com/1bX5QH6.jpg\\\"\\n      alt=\\\"Lin Lanying\\\"\\n      width={100}\\n      height={100}\\n    />\\n  );\\n}\\n\\nexport default function Profile() {\\n  return (\\n    <Avatar />\\n  );\\n}\\n\"}]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-css\",\"children\":\"body { min-height: 120px; }\\n.avatar { margin: 20px; border-radius: 50%; }\\n\"}]}]]}],[\"$r\",\"MaxWidth\",\"40\",{\"children\":[\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"你可以传递给 \",[\"$r\",\"code\",null,{\"children\":\"<img>\"}],\" 标签的 props 是预定义的（ReactDOM 符合 \",[\"$r\",\"a\",null,{\"href\":\"https://www.w3.org/TR/html52/semantics-embedded-content.html#the-img-element\",\"target\":\"_blank\",\"rel\":\"nofollow noopener noreferrer\",\"children\":\"HTML 标准\"}],\"）。但是你可以将任何 props 传递给 \",[\"$r\",\"strong\",null,{\"children\":\"你自己的\"}],\" 组件，例如 \",[\"$r\",\"code\",null,{\"children\":\"<Avatar>\"}],\" ，以便自定义它们。 就像这样！\"]}],\"\\n\",[\"$r\",\"h2\",null,{\"id\":\"passing-props-to-a-component\",\"children\":\"向组件传递 props \"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"在这段代码中， \",[\"$r\",\"code\",null,{\"children\":\"Profile\"}],\" 组件没有向它的子组件 \",[\"$r\",\"code\",null,{\"children\":\"Avatar\"}],\" 传递任何 props ：\"]}],\"\\n\",[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"export default function Profile() {\\n  return (\\n    <Avatar />\\n  );\\n}\\n\"}]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"你可以分两步给 \",[\"$r\",\"code\",null,{\"children\":\"Avatar\"}],\" 一些 props。\"]}],\"\\n\",[\"$r\",\"h3\",null,{\"id\":\"step-1-pass-props-to-the-child-component\",\"children\":\"步骤 1: 将 props 传递给子组件 \"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"首先，将一些 props 传递给 \",[\"$r\",\"code\",null,{\"children\":\"Avatar\"}],\"。例如，让我们传递两个 props：\",[\"$r\",\"code\",null,{\"children\":\"person\"}],\"（一个对象）和 \",[\"$r\",\"code\",null,{\"children\":\"size\"}],\"（一个数字）：\"]}],\"\\n\",[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"export default function Profile() {\\n  return (\\n    <Avatar\\n      person={{ name: 'Lin Lanying', imageId: '1bX5QH6' }}\\n      size={100}\\n    />\\n  );\\n}\\n\"}]}],\"\\n\",[\"$r\",\"Note\",null,{\"children\":[\"$r\",\"p\",null,{\"children\":[\"如果 \",[\"$r\",\"code\",null,{\"children\":\"person=\"}],\" 后面的双花括号让你感到困惑，请记住，在 JSX 花括号中，\",[\"$r\",\"a\",null,{\"href\":\"/learn/javascript-in-jsx-with-curly-braces#using-double-curlies-css-and-other-objects-in-jsx\",\"children\":\"它们只是一个对象\"}],\"。\"]}]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"现在，你可以在 \",[\"$r\",\"code\",null,{\"children\":\"Avatar\"}],\" 组件中读取这些 props 了。\"]}],\"\\n\",[\"$r\",\"h3\",null,{\"id\":\"step-2-read-props-inside-the-child-component\",\"children\":\"步骤 2: 在子组件中读取 props \"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"你可以通过在 \",[\"$r\",\"code\",null,{\"children\":\"function Avatar\"}],\" 之后直接列出它们的名字 \",[\"$r\",\"code\",null,{\"children\":\"person, size\"}],\" 来读取这些 props。这些 props 在 \",[\"$r\",\"code\",null,{\"children\":\"({\"}],\" 和 \",[\"$r\",\"code\",null,{\"children\":\"})\"}],\" 之间，并由逗号分隔。这样，你可以在 \",[\"$r\",\"code\",null,{\"children\":\"Avatar\"}],\" 的代码中使用它们，就像使用变量一样。\"]}],\"\\n\",[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"function Avatar({ person, size }) {\\n  // 在这里 person 和 size 是可访问的\\n}\\n\"}]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"向使用 \",[\"$r\",\"code\",null,{\"children\":\"person\"}],\" 和 \",[\"$r\",\"code\",null,{\"children\":\"size\"}],\" props 渲染的 \",[\"$r\",\"code\",null,{\"children\":\"Avatar\"}],\" 添加一些逻辑，你就完成了。\"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"现在你可以配置 \",[\"$r\",\"code\",null,{\"children\":\"Avatar\"}],\" ，通过不同的 props，使它能以多种不同的方式进行渲染。尝试变换值吧！\"]}],\"\\n\"]}],[\"$r\",\"Sandpack\",null,{\"children\":[[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"meta\":\"src/App.js\",\"children\":\"import { getImageUrl } from './utils.js';\\n\\nfunction Avatar({ person, size }) {\\n  return (\\n    <img\\n      className=\\\"avatar\\\"\\n      src={getImageUrl(person)}\\n      alt={person.name}\\n      width={size}\\n      height={size}\\n    />\\n  );\\n}\\n\\nexport default function Profile() {\\n  return (\\n    <div>\\n      <Avatar\\n        size={100}\\n        person={{ \\n          name: 'Katsuko Saruhashi', \\n          imageId: 'YfeOqp2'\\n        }}\\n      />\\n      <Avatar\\n        size={80}\\n        person={{\\n          name: 'Aklilu Lemma', \\n          imageId: 'OKS67lh'\\n        }}\\n      />\\n      <Avatar\\n        size={50}\\n        person={{ \\n          name: 'Lin Lanying',\\n          imageId: '1bX5QH6'\\n        }}\\n      />\\n    </div>\\n  );\\n}\\n\"}]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"meta\":\"src/utils.js\",\"children\":\"export function getImageUrl(person, size = 's') {\\n  return (\\n    'https://i.imgur.com/' +\\n    person.imageId +\\n    size +\\n    '.jpg'\\n  );\\n}\\n\"}]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-css\",\"children\":\"body { min-height: 120px; }\\n.avatar { margin: 10px; border-radius: 50%; }\\n\"}]}]]}],[\"$r\",\"MaxWidth\",\"88\",{\"children\":[\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"Props 使你独立思考父组件和子组件。 例如，你可以改变 \",[\"$r\",\"code\",null,{\"children\":\"Profile\"}],\" 中的 \",[\"$r\",\"code\",null,{\"children\":\"person\"}],\" 或 \",[\"$r\",\"code\",null,{\"children\":\"size\"}],\" props，而无需考虑 \",[\"$r\",\"code\",null,{\"children\":\"Avatar\"}],\" 如何使用它们。 同样，你可以改变 \",[\"$r\",\"code\",null,{\"children\":\"Avatar\"}],\" 使用这些 props 的方式，不必考虑 \",[\"$r\",\"code\",null,{\"children\":\"Profile\"}],\"。\"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"你可以将 props 想象成可以调整的“旋钮”。它们的作用与函数的参数相同 —— 事实上，props \",[\"$r\",\"strong\",null,{\"children\":\"正是\"}],\" 组件的唯一参数！ React 组件函数接受一个参数，一个 \",[\"$r\",\"code\",null,{\"children\":\"props\"}],\" 对象：\"]}],\"\\n\",[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"function Avatar(props) {\\n  let person = props.person;\\n  let size = props.size;\\n  // ...\\n}\\n\"}]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"通常你不需要整个 \",[\"$r\",\"code\",null,{\"children\":\"props\"}],\" 对象，所以可以将它解构为单独的 props。\"]}],\"\\n\",[\"$r\",\"Pitfall\",null,{\"children\":[[\"$r\",\"p\",null,{\"children\":[\"在声明 props 时， \",[\"$r\",\"strong\",null,{\"children\":[\"不要忘记 \",[\"$r\",\"code\",null,{\"children\":\"(\"}],\" 和 \",[\"$r\",\"code\",null,{\"children\":\")\"}],\" 之间的一对花括号 \",[\"$r\",\"code\",null,{\"children\":\"{\"}],\" 和 \",[\"$r\",\"code\",null,{\"children\":\"}\"}]]}],\"  ：\"]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"function Avatar({ person, size }) {\\n  // ...\\n}\\n\"}]}],[\"$r\",\"p\",null,{\"children\":[\"这种语法被称为 \",[\"$r\",\"a\",null,{\"href\":\"https://developer.mozilla.org/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment#Unpacking_fields_from_objects_passed_as_a_function_parameter\",\"target\":\"_blank\",\"rel\":\"nofollow noopener noreferrer\",\"children\":\"“解构”\"}],\"，等价于于从函数参数中读取属性：\"]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"function Avatar(props) {\\n  let person = props.person;\\n  let size = props.size;\\n  // ...\\n}\\n\"}]}]]}],\"\\n\",[\"$r\",\"h2\",null,{\"id\":\"specifying-a-default-value-for-a-prop\",\"children\":\"给 prop 指定一个默认值 \"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"如果你想在没有指定值的情况下给 prop 一个默认值，你可以通过在参数后面写 \",[\"$r\",\"code\",null,{\"children\":\"=\"}],\" 和默认值来进行解构：\"]}],\"\\n\",[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"function Avatar({ person, size = 100 }) {\\n  // ...\\n}\\n\"}]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"现在， 如果 \",[\"$r\",\"code\",null,{\"children\":\"<Avatar person={...} />\"}],\" 渲染时没有 \",[\"$r\",\"code\",null,{\"children\":\"size\"}],\" prop，  \",[\"$r\",\"code\",null,{\"children\":\"size\"}],\" 将被赋值为 \",[\"$r\",\"code\",null,{\"children\":\"100\"}],\"。\"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"默认值仅在缺少 \",[\"$r\",\"code\",null,{\"children\":\"size\"}],\" prop 或 \",[\"$r\",\"code\",null,{\"children\":\"size={undefined}\"}],\" 时生效。 但是如果你传递了 \",[\"$r\",\"code\",null,{\"children\":\"size={null}\"}],\" 或 \",[\"$r\",\"code\",null,{\"children\":\"size={0}\"}],\"，默认值将 \",[\"$r\",\"strong\",null,{\"children\":\"不\"}],\" 被使用。\"]}],\"\\n\",[\"$r\",\"h2\",null,{\"id\":\"forwarding-props-with-the-jsx-spread-syntax\",\"children\":\"使用 JSX 展开语法传递 props \"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":\"有时候，传递 props 会变得非常重复：\"}],\"\\n\",[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"function Profile({ person, size, isSepia, thickBorder }) {\\n  return (\\n    <div className=\\\"card\\\">\\n      <Avatar\\n        person={person}\\n        size={size}\\n        isSepia={isSepia}\\n        thickBorder={thickBorder}\\n      />\\n    </div>\\n  );\\n}\\n\"}]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"重复代码没有错（它可以更清晰）。但有时你可能会重视简洁。一些组件将它们所有的 props 转发给子组件，正如 \",[\"$r\",\"code\",null,{\"children\":\"Profile\"}],\" 转给 \",[\"$r\",\"code\",null,{\"children\":\"Avatar\"}],\" 那样。因为这些组件不直接使用他们本身的任何 props，所以使用更简洁的“展开”语法是有意义的：\"]}],\"\\n\",[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"function Profile(props) {\\n  return (\\n    <div className=\\\"card\\\">\\n      <Avatar {...props} />\\n    </div>\\n  );\\n}\\n\"}]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"这会将 \",[\"$r\",\"code\",null,{\"children\":\"Profile\"}],\" 的所有 props 转发到 \",[\"$r\",\"code\",null,{\"children\":\"Avatar\"}],\"，而不列出每个名字。\"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"strong\",null,{\"children\":\"请克制地使用展开语法。\"}],\" 如果你在所有其他组件中都使用它，那就有问题了。 通常，它表示你应该拆分组件，并将子组件作为 JSX 传递。 接下来会详细介绍！\"]}],\"\\n\",[\"$r\",\"h2\",null,{\"id\":\"passing-jsx-as-children\",\"children\":\"将 JSX 作为子组件传递 \"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":\"嵌套浏览器内置标签是很常见的：\"}],\"\\n\",[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"<div>\\n  <img />\\n</div>\\n\"}]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":\"有时你会希望以相同的方式嵌套自己的组件：\"}],\"\\n\",[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"<Card>\\n  <Avatar />\\n</Card>\\n\"}]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"当您将内容嵌套在 JSX 标签中时，父组件将在名为 \",[\"$r\",\"code\",null,{\"children\":\"children\"}],\" 的 prop 中接收到该内容。例如，下面的 \",[\"$r\",\"code\",null,{\"children\":\"Card\"}],\" 组件将接收一个被设为 \",[\"$r\",\"code\",null,{\"children\":\"<Avatar />\"}],\" 的 \",[\"$r\",\"code\",null,{\"children\":\"children\"}],\" prop 并将其包裹在 div 中渲染：\"]}],\"\\n\"]}],[\"$r\",\"Sandpack\",null,{\"children\":[[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"meta\":\"src/App.js\",\"children\":\"import Avatar from './Avatar.js';\\n\\nfunction Card({ children }) {\\n  return (\\n    <div className=\\\"card\\\">\\n      {children}\\n    </div>\\n  );\\n}\\n\\nexport default function Profile() {\\n  return (\\n    <Card>\\n      <Avatar\\n        size={100}\\n        person={{ \\n          name: 'Katsuko Saruhashi',\\n          imageId: 'YfeOqp2'\\n        }}\\n      />\\n    </Card>\\n  );\\n}\\n\"}]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"meta\":\"src/Avatar.js\",\"children\":\"import { getImageUrl } from './utils.js';\\n\\nexport default function Avatar({ person, size }) {\\n  return (\\n    <img\\n      className=\\\"avatar\\\"\\n      src={getImageUrl(person)}\\n      alt={person.name}\\n      width={size}\\n      height={size}\\n    />\\n  );\\n}\\n\"}]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"meta\":\"src/utils.js\",\"children\":\"export function getImageUrl(person, size = 's') {\\n  return (\\n    'https://i.imgur.com/' +\\n    person.imageId +\\n    size +\\n    '.jpg'\\n  );\\n}\\n\"}]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-css\",\"children\":\".card {\\n  width: fit-content;\\n  margin: 5px;\\n  padding: 5px;\\n  font-size: 20px;\\n  text-align: center;\\n  border: 1px solid #aaa;\\n  border-radius: 20px;\\n  background: #fff;\\n}\\n.avatar {\\n  margin: 20px;\\n  border-radius: 50%;\\n}\\n\"}]}]]}],[\"$r\",\"MaxWidth\",\"94\",{\"children\":[\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"尝试用一些文本替换 \",[\"$r\",\"code\",null,{\"children\":\"<Card>\"}],\" 中的 \",[\"$r\",\"code\",null,{\"children\":\"<Avatar>\"}],\"，看看 \",[\"$r\",\"code\",null,{\"children\":\"Card\"}],\" 组件如何包裹任意嵌套内容。它不必“知道”其中渲染的内容。你会在很多地方看到这种灵活的模式。\"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"可以将带有 \",[\"$r\",\"code\",null,{\"children\":\"children\"}],\" prop 的组件看作有一个“洞”，可以由其父组件使用任意 JSX 来“填充”。你会经常使用 \",[\"$r\",\"code\",null,{\"children\":\"children\"}],\" prop 来进行视觉包装：面板、网格等等。\"]}],\"\\n\"]}],[\"$r\",\"Illustration\",null,{\"src\":\"/images/docs/illustrations/i_children-prop.png\",\"alt\":\"A puzzle-like Card tile with a slot for \\\"children\\\" pieces like text and Avatar\"}],[\"$r\",\"MaxWidth\",\"102\",{\"children\":[\"\\n\",[\"$r\",\"h2\",null,{\"id\":\"how-props-change-over-time\",\"children\":\"Props 如何随时间变化 \"}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"下面的 \",[\"$r\",\"code\",null,{\"children\":\"Clock\"}],\" 组件从其父组件接收两个 props：\",[\"$r\",\"code\",null,{\"children\":\"color\"}],\" 和 \",[\"$r\",\"code\",null,{\"children\":\"time\"}],\"。（父组件的代码被省略，因为它使用 \",[\"$r\",\"a\",null,{\"href\":\"/learn/state-a-components-memory\",\"children\":\"state\"}],\"，我们暂时不会深入研究。）\"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":\"尝试在下面的选择框中更改颜色：\"}],\"\\n\"]}],[\"$r\",\"Sandpack\",null,{\"children\":[[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"meta\":\"src/Clock.js active\",\"children\":\"export default function Clock({ color, time }) {\\n  return (\\n    <h1 style={{ color: color }}>\\n      {time}\\n    </h1>\\n  );\\n}\\n\"}]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"meta\":\"src/App.js hidden\",\"children\":\"import { useState, useEffect } from 'react';\\nimport Clock from './Clock.js';\\n\\nfunction useTime() {\\n  const [time, setTime] = useState(() => new Date());\\n  useEffect(() => {\\n    const id = setInterval(() => {\\n      setTime(new Date());\\n    }, 1000);\\n    return () => clearInterval(id);\\n  }, []);\\n  return time;\\n}\\n\\nexport default function App() {\\n  const time = useTime();\\n  const [color, setColor] = useState('lightcoral');\\n  return (\\n    <div>\\n      <p>\\n        选择一个颜色:{' '}\\n        <select value={color} onChange={e => setColor(e.target.value)}>\\n          <option value=\\\"lightcoral\\\">浅珊瑚色</option>\\n          <option value=\\\"midnightblue\\\">午夜蓝</option>\\n          <option value=\\\"rebeccapurple\\\">丽贝卡紫</option>\\n        </select>\\n      </p>\\n      <Clock color={color} time={time.toLocaleTimeString()} />\\n    </div>\\n  );\\n}\\n\"}]}]]}],[\"$r\",\"MaxWidth\",\"112\",{\"children\":[\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"这个例子说明，\",[\"$r\",\"strong\",null,{\"children\":\"一个组件可能会随着时间的推移收到不同的 props。\"}],\" Props 并不总是静态的！在这里，\",[\"$r\",\"code\",null,{\"children\":\"time\"}],\" prop 每秒都在变化。当你选择另一种颜色时，\",[\"$r\",\"code\",null,{\"children\":\"color\"}],\" prop 也改变了。Props 反映了组件在任何时间点的数据，并不仅仅是在开始时。\"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[\"然而，props 是 \",[\"$r\",\"a\",null,{\"href\":\"https://en.wikipedia.org/wiki/Immutable_object\",\"target\":\"_blank\",\"rel\":\"nofollow noopener noreferrer\",\"children\":\"不可变的\"}],\"（一个计算机科学术语，意思是“不可改变”）。当一个组件需要改变它的 props（例如，响应用户交互或新数据）时，它不得不“请求”它的父组件传递 \",[\"$r\",\"strong\",null,{\"children\":\"不同的 props\"}],\" —— 一个新对象！它的旧 props 将被丢弃，最终 JavaScript 引擎将回收它们占用的内存。\"]}],\"\\n\",[\"$r\",\"p\",null,{\"children\":[[\"$r\",\"strong\",null,{\"children\":\"不要尝试“更改 props”。\"}],\" 当你需要响应用户输入（例如更改所选颜色）时，你可以“设置 state”，你可以在 \",[\"$r\",\"a\",null,{\"href\":\"/learn/state-a-components-memory\",\"children\":\"State: 一个组件的内存\"}],\" 中继续了解。\"]}],\"\\n\",[\"$r\",\"Recap\",null,{\"children\":[\"$r\",\"ul\",null,{\"children\":[\"\\n\",[\"$r\",\"li\",null,{\"children\":\"要传递 props，请将它们添加到 JSX，就像使用 HTML 属性一样。\"}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"要读取 props，请使用 \",[\"$r\",\"code\",null,{\"children\":\"function Avatar({ person, size })\"}],\" 解构语法。\"]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"你可以指定一个默认值，如 \",[\"$r\",\"code\",null,{\"children\":\"size = 100\"}],\"，用于缺少值或值为 \",[\"$r\",\"code\",null,{\"children\":\"undefined\"}],\" 的 props 。\"]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"你可以使用 \",[\"$r\",\"code\",null,{\"children\":\"<Avatar {...props} />\"}],\" JSX 展开语法转发所有 props，但不要过度使用它！\"]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":[\"像 \",[\"$r\",\"code\",null,{\"children\":\"<Card><Avatar /></Card>\"}],\" 这样的嵌套 JSX，将被视为 \",[\"$r\",\"code\",null,{\"children\":\"Card\"}],\" 组件的 \",[\"$r\",\"code\",null,{\"children\":\"children\"}],\" prop。\"]}],\"\\n\",[\"$r\",\"li\",null,{\"children\":\"Props 是只读的时间快照：每次渲染都会收到新版本的 props。\"}],\"\\n\",[\"$r\",\"li\",null,{\"children\":\"你不能改变 props。当你需要交互性时，你可以设置 state。\"}],\"\\n\"]}]}],\"\\n\"]}],[\"$r\",\"Challenges\",null,{\"children\":[[\"$r\",\"h4\",null,{\"id\":\"extract-a-component\",\"children\":\"提取一个组件 \"}],[\"$r\",\"p\",null,{\"children\":[\"这个 \",[\"$r\",\"code\",null,{\"children\":\"Gallery\"}],\" 组件包含两份个人资料，其中有一些非常相似的标签。从中提取一个 \",[\"$r\",\"code\",null,{\"children\":\"Profile\"}],\" 组件以减少重复。你需要选择要传递哪些 props。\"]}],[\"$r\",\"Sandpack\",null,{\"children\":[[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"meta\":\"src/App.js\",\"children\":\"import { getImageUrl } from './utils.js';\\n\\nexport default function Gallery() {\\n  return (\\n    <div>\\n      <h1>Notable Scientists</h1>\\n      <section className=\\\"profile\\\">\\n        <h2>Maria Skłodowska-Curie</h2>\\n        <img\\n          className=\\\"avatar\\\"\\n          src={getImageUrl('szV5sdG')}\\n          alt=\\\"Maria Skłodowska-Curie\\\"\\n          width={70}\\n          height={70}\\n        />\\n        <ul>\\n          <li>\\n            <b>Profession: </b> \\n            physicist and chemist\\n          </li>\\n          <li>\\n            <b>Awards: 4 </b> \\n            (Nobel Prize in Physics, Nobel Prize in Chemistry, Davy Medal, Matteucci Medal)\\n          </li>\\n          <li>\\n            <b>Discovered: </b>\\n            polonium (chemical element)\\n          </li>\\n        </ul>\\n      </section>\\n      <section className=\\\"profile\\\">\\n        <h2>Katsuko Saruhashi</h2>\\n        <img\\n          className=\\\"avatar\\\"\\n          src={getImageUrl('YfeOqp2')}\\n          alt=\\\"Katsuko Saruhashi\\\"\\n          width={70}\\n          height={70}\\n        />\\n        <ul>\\n          <li>\\n            <b>Profession: </b> \\n            geochemist\\n          </li>\\n          <li>\\n            <b>Awards: 2 </b> \\n            (Miyake Prize for geochemistry, Tanaka Prize)\\n          </li>\\n          <li>\\n            <b>Discovered: </b>\\n            a method for measuring carbon dioxide in seawater\\n          </li>\\n        </ul>\\n      </section>\\n    </div>\\n  );\\n}\\n\"}]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"meta\":\"src/utils.js\",\"children\":\"export function getImageUrl(imageId, size = 's') {\\n  return (\\n    'https://i.imgur.com/' +\\n    imageId +\\n    size +\\n    '.jpg'\\n  );\\n}\\n\"}]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-css\",\"children\":\".avatar { margin: 5px; border-radius: 50%; min-height: 70px; }\\n.profile {\\n  border: 1px solid #aaa;\\n  border-radius: 6px;\\n  margin-top: 20px;\\n  padding: 10px;\\n}\\nh1, h2 { margin: 5px; }\\nh1 { margin-bottom: 10px; }\\nul { padding: 0px 10px 0px 20px; }\\nli { margin: 5px; }\\n\"}]}]]}],[\"$r\",\"Hint\",null,{\"children\":[\"$r\",\"p\",null,{\"children\":\"首先提取其中一位科学家的标签。然后在第二个例子中找到不匹配的部分，用 props 配置它们。\"}]}],[\"$r\",\"Solution\",null,{\"children\":[[\"$r\",\"p\",null,{\"children\":[\"在这个解决方案中，\",[\"$r\",\"code\",null,{\"children\":\"Profile\"}],\" 组件接受多个 props：\",[\"$r\",\"code\",null,{\"children\":\"imageId\"}],\"（字符串）、\",[\"$r\",\"code\",null,{\"children\":\"name\"}],\"（字符串）、\",[\"$r\",\"code\",null,{\"children\":\"profession\"}],\"（字符串）、\",[\"$r\",\"code\",null,{\"children\":\"awards\"}],\"（字符串数组）、\",[\"$r\",\"code\",null,{\"children\":\"discovery\"}],\"（字符串）和 \",[\"$r\",\"code\",null,{\"children\":\"imageSize\"}],\"（数字）。\"]}],[\"$r\",\"p\",null,{\"children\":[\"请注意，\",[\"$r\",\"code\",null,{\"children\":\"imageSize\"}],\" prop 有一个默认值，这就是为什么我们不将它传递给组件。\"]}],[\"$r\",\"Sandpack\",null,{\"children\":[[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"meta\":\"src/App.js\",\"children\":\"import { getImageUrl } from './utils.js';\\n\\nfunction Profile({\\n  imageId,\\n  name,\\n  profession,\\n  awards,\\n  discovery,\\n  imageSize = 70\\n}) {\\n  return (\\n    <section className=\\\"profile\\\">\\n      <h2>{name}</h2>\\n      <img\\n        className=\\\"avatar\\\"\\n        src={getImageUrl(imageId)}\\n        alt={name}\\n        width={imageSize}\\n        height={imageSize}\\n      />\\n      <ul>\\n        <li><b>Profession:</b> {profession}</li>\\n        <li>\\n          <b>Awards: {awards.length} </b>\\n          ({awards.join(', ')})\\n        </li>\\n        <li>\\n          <b>Discovered: </b>\\n          {discovery}\\n        </li>\\n      </ul>\\n    </section>\\n  );\\n}\\n\\nexport default function Gallery() {\\n  return (\\n    <div>\\n      <h1>Notable Scientists</h1>\\n      <Profile\\n        imageId=\\\"szV5sdG\\\"\\n        name=\\\"Maria Skłodowska-Curie\\\"\\n        profession=\\\"physicist and chemist\\\"\\n        discovery=\\\"polonium (chemical element)\\\"\\n        awards={[\\n          'Nobel Prize in Physics',\\n          'Nobel Prize in Chemistry',\\n          'Davy Medal',\\n          'Matteucci Medal'\\n        ]}\\n      />\\n      <Profile\\n        imageId='YfeOqp2'\\n        name='Katsuko Saruhashi'\\n        profession='geochemist'\\n        discovery=\\\"a method for measuring carbon dioxide in seawater\\\"\\n        awards={[\\n          'Miyake Prize for geochemistry',\\n          'Tanaka Prize'\\n        ]}\\n      />\\n    </div>\\n  );\\n}\\n\"}]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"meta\":\"src/utils.js\",\"children\":\"export function getImageUrl(imageId, size = 's') {\\n  return (\\n    'https://i.imgur.com/' +\\n    imageId +\\n    size +\\n    '.jpg'\\n  );\\n}\\n\"}]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-css\",\"children\":\".avatar { margin: 5px; border-radius: 50%; min-height: 70px; }\\n.profile {\\n  border: 1px solid #aaa;\\n  border-radius: 6px;\\n  margin-top: 20px;\\n  padding: 10px;\\n}\\nh1, h2 { margin: 5px; }\\nh1 { margin-bottom: 10px; }\\nul { padding: 0px 10px 0px 20px; }\\nli { margin: 5px; }\\n\"}]}]]}],[\"$r\",\"p\",null,{\"children\":[\"请注意，如果 \",[\"$r\",\"code\",null,{\"children\":\"awards\"}],\" 是一个数组，则不需要单独的 \",[\"$r\",\"code\",null,{\"children\":\"awardCount\"}],\" prop。 你可以用 \",[\"$r\",\"code\",null,{\"children\":\"awards.length\"}],\" 来统计奖励的数量。请记住，props 可以接受任何值，也包括数组！\"]}],[\"$r\",\"p\",null,{\"children\":\"另一种解决方案与本页前面的示例更相似，是将一个人的所有信息组合到一个对象中，并将该对象作为一个 prop 传递：\"}],[\"$r\",\"Sandpack\",null,{\"children\":[[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"meta\":\"src/App.js\",\"children\":\"import { getImageUrl } from './utils.js';\\n\\nfunction Profile({ person, imageSize = 70 }) {\\n  const imageSrc = getImageUrl(person)\\n\\n  return (\\n    <section className=\\\"profile\\\">\\n      <h2>{person.name}</h2>\\n      <img\\n        className=\\\"avatar\\\"\\n        src={imageSrc}\\n        alt={person.name}\\n        width={imageSize}\\n        height={imageSize}\\n      />\\n      <ul>\\n        <li>\\n          <b>Profession:</b> {person.profession}\\n        </li>\\n        <li>\\n          <b>Awards: {person.awards.length} </b>\\n          ({person.awards.join(', ')})\\n        </li>\\n        <li>\\n          <b>Discovered: </b>\\n          {person.discovery}\\n        </li>\\n      </ul>\\n    </section>\\n  )\\n}\\n\\nexport default function Gallery() {\\n  return (\\n    <div>\\n      <h1>Notable Scientists</h1>\\n      <Profile person={{\\n        imageId: 'szV5sdG',\\n        name: 'Maria Skłodowska-Curie',\\n        profession: 'physicist and chemist',\\n        discovery: 'polonium (chemical element)',\\n        awards: [\\n          'Nobel Prize in Physics',\\n          'Nobel Prize in Chemistry',\\n          'Davy Medal',\\n          'Matteucci Medal'\\n        ],\\n      }} />\\n      <Profile person={{\\n        imageId: 'YfeOqp2',\\n        name: 'Katsuko Saruhashi',\\n        profession: 'geochemist',\\n        discovery: 'a method for measuring carbon dioxide in seawater',\\n        awards: [\\n          'Miyake Prize for geochemistry',\\n          'Tanaka Prize'\\n        ],\\n      }} />\\n    </div>\\n  );\\n}\\n\"}]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"meta\":\"src/utils.js\",\"children\":\"export function getImageUrl(person, size = 's') {\\n  return (\\n    'https://i.imgur.com/' +\\n    person.imageId +\\n    size +\\n    '.jpg'\\n  );\\n}\\n\"}]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-css\",\"children\":\".avatar { margin: 5px; border-radius: 50%; min-height: 70px; }\\n.profile {\\n  border: 1px solid #aaa;\\n  border-radius: 6px;\\n  margin-top: 20px;\\n  padding: 10px;\\n}\\nh1, h2 { margin: 5px; }\\nh1 { margin-bottom: 10px; }\\nul { padding: 0px 10px 0px 20px; }\\nli { margin: 5px; }\\n\"}]}]]}],[\"$r\",\"p\",null,{\"children\":\"尽管因为在你描述组件特性时用的是 JavaScript 对象而非 JSX 的属性，使得语法看起来略有不同，但这些示例大多都是等效的，你可以选择任意一种方法\"}]]}],[\"$r\",\"h4\",null,{\"id\":\"adjust-the-image-size-based-on-a-prop\",\"children\":\"根据 props 调整图像大小 \"}],[\"$r\",\"p\",null,{\"children\":[\"在这个例子中，\",[\"$r\",\"code\",null,{\"children\":\"Avatar\"}],\" 接收一个数字 \",[\"$r\",\"code\",null,{\"children\":\"size\"}],\" prop，它决定了 \",[\"$r\",\"code\",null,{\"children\":\"<img>\"}],\" 的宽度和高度。在此示例中，\",[\"$r\",\"code\",null,{\"children\":\"size\"}],\" prop 设为 \",[\"$r\",\"code\",null,{\"children\":\"40\"}],\"。但是，如果你在新选项卡中打开图像，你会注意到图像本身更大（\",[\"$r\",\"code\",null,{\"children\":\"160\"}],\" 像素）。实际图像大小由你请求的缩略图大小决定。\"]}],[\"$r\",\"p\",null,{\"children\":[\"更改 \",[\"$r\",\"code\",null,{\"children\":\"Avatar\"}],\" 组件，根据 \",[\"$r\",\"code\",null,{\"children\":\"size\"}],\" prop 请求最接近的图像尺寸。具体来说，如果 \",[\"$r\",\"code\",null,{\"children\":\"size\"}],\" 小于 \",[\"$r\",\"code\",null,{\"children\":\"90\"}],\"，则将 \",[\"$r\",\"code\",null,{\"children\":\"'s'\"}],\"（“small”）而不是 \",[\"$r\",\"code\",null,{\"children\":\"'b'\"}],\"（“big”）传给 \",[\"$r\",\"code\",null,{\"children\":\"getImageUrl\"}],\" 函数。通过渲染不同 \",[\"$r\",\"code\",null,{\"children\":\"size\"}],\" prop 值的头像并在新选项卡中打开图像，来验证你的更改是否有效。\"]}],[\"$r\",\"Sandpack\",null,{\"children\":[[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"meta\":\"src/App.js\",\"children\":\"import { getImageUrl } from './utils.js';\\n\\nfunction Avatar({ person, size }) {\\n  return (\\n    <img\\n      className=\\\"avatar\\\"\\n      src={getImageUrl(person, 'b')}\\n      alt={person.name}\\n      width={size}\\n      height={size}\\n    />\\n  );\\n}\\n\\nexport default function Profile() {\\n  return (\\n    <Avatar\\n      size={40}\\n      person={{ \\n        name: 'Gregorio Y. Zara', \\n        imageId: '7vQD0fP'\\n      }}\\n    />\\n  );\\n}\\n\"}]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"meta\":\"src/utils.js\",\"children\":\"export function getImageUrl(person, size) {\\n  return (\\n    'https://i.imgur.com/' +\\n    person.imageId +\\n    size +\\n    '.jpg'\\n  );\\n}\\n\"}]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-css\",\"children\":\".avatar { margin: 20px; border-radius: 50%; }\\n\"}]}]]}],[\"$r\",\"Solution\",null,{\"children\":[[\"$r\",\"p\",null,{\"children\":\"你可以这样做：\"}],[\"$r\",\"Sandpack\",null,{\"children\":[[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"meta\":\"src/App.js\",\"children\":\"import { getImageUrl } from './utils.js';\\n\\nfunction Avatar({ person, size }) {\\n  let thumbnailSize = 's';\\n  if (size > 90) {\\n    thumbnailSize = 'b';\\n  }\\n  return (\\n    <img\\n      className=\\\"avatar\\\"\\n      src={getImageUrl(person, thumbnailSize)}\\n      alt={person.name}\\n      width={size}\\n      height={size}\\n    />\\n  );\\n}\\n\\nexport default function Profile() {\\n  return (\\n    <>\\n      <Avatar\\n        size={40}\\n        person={{ \\n          name: 'Gregorio Y. Zara', \\n          imageId: '7vQD0fP'\\n        }}\\n      />\\n      <Avatar\\n        size={120}\\n        person={{ \\n          name: 'Gregorio Y. Zara', \\n          imageId: '7vQD0fP'\\n        }}\\n      />\\n    </>\\n  );\\n}\\n\"}]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"meta\":\"src/utils.js\",\"children\":\"export function getImageUrl(person, size) {\\n  return (\\n    'https://i.imgur.com/' +\\n    person.imageId +\\n    size +\\n    '.jpg'\\n  );\\n}\\n\"}]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-css\",\"children\":\".avatar { margin: 20px; border-radius: 50%; }\\n\"}]}]]}],[\"$r\",\"p\",null,{\"children\":[\"你还可以通过考虑 \",[\"$r\",\"a\",null,{\"href\":\"https://developer.mozilla.org/zh-CN/docs/Web/API/Window/devicePixelRatio\",\"target\":\"_blank\",\"rel\":\"nofollow noopener noreferrer\",\"children\":[\"$r\",\"code\",null,{\"children\":\"window.devicePixelRatio\"}]}],\" 来为高 DPI 屏幕显示更清晰的图像：\"]}],[\"$r\",\"Sandpack\",null,{\"children\":[[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"meta\":\"src/App.js\",\"children\":\"import { getImageUrl } from './utils.js';\\n\\nconst ratio = window.devicePixelRatio;\\n\\nfunction Avatar({ person, size }) {\\n  let thumbnailSize = 's';\\n  if (size * ratio > 90) {\\n    thumbnailSize = 'b';\\n  }\\n  return (\\n    <img\\n      className=\\\"avatar\\\"\\n      src={getImageUrl(person, thumbnailSize)}\\n      alt={person.name}\\n      width={size}\\n      height={size}\\n    />\\n  );\\n}\\n\\nexport default function Profile() {\\n  return (\\n    <>\\n      <Avatar\\n        size={40}\\n        person={{ \\n          name: 'Gregorio Y. Zara', \\n          imageId: '7vQD0fP'\\n        }}\\n      />\\n      <Avatar\\n        size={70}\\n        person={{ \\n          name: 'Gregorio Y. Zara', \\n          imageId: '7vQD0fP'\\n        }}\\n      />\\n      <Avatar\\n        size={120}\\n        person={{ \\n          name: 'Gregorio Y. Zara', \\n          imageId: '7vQD0fP'\\n        }}\\n      />\\n    </>\\n  );\\n}\\n\"}]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"meta\":\"src/utils.js\",\"children\":\"export function getImageUrl(person, size) {\\n  return (\\n    'https://i.imgur.com/' +\\n    person.imageId +\\n    size +\\n    '.jpg'\\n  );\\n}\\n\"}]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-css\",\"children\":\".avatar { margin: 20px; border-radius: 50%; }\\n\"}]}]]}],[\"$r\",\"p\",null,{\"children\":[\"Props 可以让你将这样的逻辑封装在 \",[\"$r\",\"code\",null,{\"children\":\"Avatar\"}],\" 组件中（并在需要时进行更改），以便每个人都可以使用 \",[\"$r\",\"code\",null,{\"children\":\"<Avatar>\"}],\" 组件，而不必考虑如何请求和调整图像大小。\"]}]]}],[\"$r\",\"h4\",null,{\"id\":\"passing-jsx-in-a-children-prop\",\"children\":[\"在 \",[\"$r\",\"code\",null,{\"children\":\"children\"}],\" prop 中传递 JSX 代码 \"]}],[\"$r\",\"p\",null,{\"children\":[\"从下面的代码中提取一个 \",[\"$r\",\"code\",null,{\"children\":\"Card\"}],\" 组件，并使用 \",[\"$r\",\"code\",null,{\"children\":\"children\"}],\" prop 将不同的 JSX 传递给它：\"]}],[\"$r\",\"Sandpack\",null,{\"children\":[[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"export default function Profile() {\\n  return (\\n    <div>\\n      <div className=\\\"card\\\">\\n        <div className=\\\"card-content\\\">\\n          <h1>Photo</h1>\\n          <img\\n            className=\\\"avatar\\\"\\n            src=\\\"https://i.imgur.com/OKS67lhm.jpg\\\"\\n            alt=\\\"Aklilu Lemma\\\"\\n            width={70}\\n            height={70}\\n          />\\n        </div>\\n      </div>\\n      <div className=\\\"card\\\">\\n        <div className=\\\"card-content\\\">\\n          <h1>About</h1>\\n          <p>Aklilu Lemma was a distinguished Ethiopian scientist who discovered a natural treatment to schistosomiasis.</p>\\n        </div>\\n      </div>\\n    </div>\\n  );\\n}\\n\"}]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-css\",\"children\":\".card {\\n  width: fit-content;\\n  margin: 20px;\\n  padding: 20px;\\n  border: 1px solid #aaa;\\n  border-radius: 20px;\\n  background: #fff;\\n}\\n.card-content {\\n  text-align: center;\\n}\\n.avatar {\\n  margin: 10px;\\n  border-radius: 50%;\\n}\\nh1 {\\n  margin: 5px;\\n  padding: 0;\\n  font-size: 24px;\\n}\\n\"}]}]]}],[\"$r\",\"Hint\",null,{\"children\":[\"$r\",\"p\",null,{\"children\":[\"放入组件标签内的任何 JSX 都将作为 \",[\"$r\",\"code\",null,{\"children\":\"children\"}],\" prop 传递给该组件。\"]}]}],[\"$r\",\"Solution\",null,{\"children\":[[\"$r\",\"p\",null,{\"children\":[\"这是你可以在两个地方使用 \",[\"$r\",\"code\",null,{\"children\":\"Card\"}],\" 组件的方法：\"]}],[\"$r\",\"Sandpack\",null,{\"children\":[[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"function Card({ children }) {\\n  return (\\n    <div className=\\\"card\\\">\\n      <div className=\\\"card-content\\\">\\n        {children}\\n      </div>\\n    </div>\\n  );\\n}\\n\\nexport default function Profile() {\\n  return (\\n    <div>\\n      <Card>\\n        <h1>Photo</h1>\\n        <img\\n          className=\\\"avatar\\\"\\n          src=\\\"https://i.imgur.com/OKS67lhm.jpg\\\"\\n          alt=\\\"Aklilu Lemma\\\"\\n          width={100}\\n          height={100}\\n        />\\n      </Card>\\n      <Card>\\n        <h1>About</h1>\\n        <p>Aklilu Lemma was a distinguished Ethiopian scientist who discovered a natural treatment to schistosomiasis.</p>\\n      </Card>\\n    </div>\\n  );\\n}\\n\"}]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-css\",\"children\":\".card {\\n  width: fit-content;\\n  margin: 20px;\\n  padding: 20px;\\n  border: 1px solid #aaa;\\n  border-radius: 20px;\\n  background: #fff;\\n}\\n.card-content {\\n  text-align: center;\\n}\\n.avatar {\\n  margin: 10px;\\n  border-radius: 50%;\\n}\\nh1 {\\n  margin: 5px;\\n  padding: 0;\\n  font-size: 24px;\\n}\\n\"}]}]]}],[\"$r\",\"p\",null,{\"children\":[\"如果你希望每个 \",[\"$r\",\"code\",null,{\"children\":\"Card\"}],\" 都有一个标题，你还可以将 \",[\"$r\",\"code\",null,{\"children\":\"title\"}],\" 设为一个单独的 prop：\"]}],[\"$r\",\"Sandpack\",null,{\"children\":[[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-js\",\"children\":\"function Card({ children, title }) {\\n  return (\\n    <div className=\\\"card\\\">\\n      <div className=\\\"card-content\\\">\\n        <h1>{title}</h1>\\n        {children}\\n      </div>\\n    </div>\\n  );\\n}\\n\\nexport default function Profile() {\\n  return (\\n    <div>\\n      <Card title=\\\"Photo\\\">\\n        <img\\n          className=\\\"avatar\\\"\\n          src=\\\"https://i.imgur.com/OKS67lhm.jpg\\\"\\n          alt=\\\"Aklilu Lemma\\\"\\n          width={100}\\n          height={100}\\n        />\\n      </Card>\\n      <Card title=\\\"About\\\">\\n        <p>Aklilu Lemma was a distinguished Ethiopian scientist who discovered a natural treatment to schistosomiasis.</p>\\n      </Card>\\n    </div>\\n  );\\n}\\n\"}]}],[\"$r\",\"pre\",null,{\"children\":[\"$r\",\"code\",null,{\"className\":\"language-css\",\"children\":\".card {\\n  width: fit-content;\\n  margin: 20px;\\n  padding: 20px;\\n  border: 1px solid #aaa;\\n  border-radius: 20px;\\n  background: #fff;\\n}\\n.card-content {\\n  text-align: center;\\n}\\n.avatar {\\n  margin: 10px;\\n  border-radius: 50%;\\n}\\nh1 {\\n  margin: 5px;\\n  padding: 0;\\n  font-size: 24px;\\n}\\n\"}]}]]}]]}]]}]]","meta":{"title":"将 Props 传递给组件","translators":["SylviaZ89","rottenpen"]}},"__N_SSG":true}